from typing import Any, Dict, List, Optional, Union, Iterable, overload
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record
from pynetbox._gen import definitions

class Cable_terminationsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.CableTermination]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        cable: Optional[str] = None,
        cable_end: Optional[str] = None,
        termination_type: Optional[str] = None,
        termination_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        cable__n: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        termination_type__n: Optional[str] = None,
        termination_id__n: Optional[str] = None,
        termination_id__lte: Optional[str] = None,
        termination_id__lt: Optional[str] = None,
        termination_id__gte: Optional[str] = None,
        termination_id__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.CableTermination]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        cable: Optional[str] = None,
        cable_end: Optional[str] = None,
        termination_type: Optional[str] = None,
        termination_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        cable__n: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        termination_type__n: Optional[str] = None,
        termination_id__n: Optional[str] = None,
        termination_id__lte: Optional[str] = None,
        termination_id__lt: Optional[str] = None,
        termination_id__gte: Optional[str] = None,
        termination_id__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.CableTermination]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.CableTermination: ...
    @overload
    def create(
        self,
        cable: int,
        cable_end: str,
        termination_type: str,
        termination_id: int | int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        termination: Optional[Any] = None,
    ) -> definitions.CableTermination: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.CableTermination: ...
    def update(
        self, objects: Iterable[definitions.CableTermination]
    ) -> RecordSet[definitions.CableTermination]: ...
    def delete(
        self, objects: Iterable[definitions.CableTermination]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        cable: Optional[str] = None,
        cable_end: Optional[str] = None,
        termination_type: Optional[str] = None,
        termination_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        cable__n: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        termination_type__n: Optional[str] = None,
        termination_id__n: Optional[str] = None,
        termination_id__lte: Optional[str] = None,
        termination_id__lt: Optional[str] = None,
        termination_id__gte: Optional[str] = None,
        termination_id__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class CablesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Cable]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        label: Optional[str] = None,
        length: Optional[str] = None,
        length_unit: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        termination_a_type: Optional[str] = None,
        termination_a_id: Optional[str | int] = None,
        termination_b_type: Optional[str] = None,
        termination_b_id: Optional[str | int] = None,
        type: Optional[str] = None,
        status: Optional[str] = None,
        color: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        length__n: Optional[str] = None,
        length__lte: Optional[str] = None,
        length__lt: Optional[str] = None,
        length__gte: Optional[str] = None,
        length__gt: Optional[str] = None,
        length_unit__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        termination_a_type__n: Optional[str] = None,
        termination_a_id__n: Optional[str] = None,
        termination_a_id__lte: Optional[str] = None,
        termination_a_id__lt: Optional[str] = None,
        termination_a_id__gte: Optional[str] = None,
        termination_a_id__gt: Optional[str] = None,
        termination_b_type__n: Optional[str] = None,
        termination_b_id__n: Optional[str] = None,
        termination_b_id__lte: Optional[str] = None,
        termination_b_id__lt: Optional[str] = None,
        termination_b_id__gte: Optional[str] = None,
        termination_b_id__gt: Optional[str] = None,
        type__n: Optional[str] = None,
        status__n: Optional[str] = None,
        color__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Cable]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        label: Optional[str] = None,
        length: Optional[str] = None,
        length_unit: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        termination_a_type: Optional[str] = None,
        termination_a_id: Optional[str | int] = None,
        termination_b_type: Optional[str] = None,
        termination_b_id: Optional[str | int] = None,
        type: Optional[str] = None,
        status: Optional[str] = None,
        color: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        length__n: Optional[str] = None,
        length__lte: Optional[str] = None,
        length__lt: Optional[str] = None,
        length__gte: Optional[str] = None,
        length__gt: Optional[str] = None,
        length_unit__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        termination_a_type__n: Optional[str] = None,
        termination_a_id__n: Optional[str] = None,
        termination_a_id__lte: Optional[str] = None,
        termination_a_id__lt: Optional[str] = None,
        termination_a_id__gte: Optional[str] = None,
        termination_a_id__gt: Optional[str] = None,
        termination_b_type__n: Optional[str] = None,
        termination_b_id__n: Optional[str] = None,
        termination_b_id__lte: Optional[str] = None,
        termination_b_id__lt: Optional[str] = None,
        termination_b_id__gte: Optional[str] = None,
        termination_b_id__gt: Optional[str] = None,
        type__n: Optional[str] = None,
        status__n: Optional[str] = None,
        color__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Cable]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Cable: ...
    @overload
    def create(
        self,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        type: Optional[str] = None,
        a_terminations: Optional[List[Any]] = None,
        b_terminations: Optional[List[Any]] = None,
        status: Optional[str] = None,
        tenant: Optional[int] = None,
        label: Optional[str] = None,
        color: Optional[str] = None,
        length: Optional[float] = None,
        length_unit: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.Cable: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Cable: ...
    def update(
        self, objects: Iterable[definitions.Cable]
    ) -> RecordSet[definitions.Cable]: ...
    def delete(self, objects: Iterable[definitions.Cable]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        label: Optional[str] = None,
        length: Optional[str] = None,
        length_unit: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        termination_a_type: Optional[str] = None,
        termination_a_id: Optional[str | int] = None,
        termination_b_type: Optional[str] = None,
        termination_b_id: Optional[str | int] = None,
        type: Optional[str] = None,
        status: Optional[str] = None,
        color: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        length__n: Optional[str] = None,
        length__lte: Optional[str] = None,
        length__lt: Optional[str] = None,
        length__gte: Optional[str] = None,
        length__gt: Optional[str] = None,
        length_unit__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        termination_a_type__n: Optional[str] = None,
        termination_a_id__n: Optional[str] = None,
        termination_a_id__lte: Optional[str] = None,
        termination_a_id__lt: Optional[str] = None,
        termination_a_id__gte: Optional[str] = None,
        termination_a_id__gt: Optional[str] = None,
        termination_b_type__n: Optional[str] = None,
        termination_b_id__n: Optional[str] = None,
        termination_b_id__lte: Optional[str] = None,
        termination_b_id__lt: Optional[str] = None,
        termination_b_id__gte: Optional[str] = None,
        termination_b_id__gt: Optional[str] = None,
        type__n: Optional[str] = None,
        status__n: Optional[str] = None,
        color__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Connected_deviceEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Device]: ...
    def get(
        self, peer_device: str, peer_interface: str
    ) -> Optional[definitions.Device]: ...
    def filter(
        self, peer_device: str, peer_interface: str
    ) -> RecordSet[definitions.Device]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Device: ...
    @overload
    def create(
        self,
    ) -> definitions.Device: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Device: ...
    def update(
        self, objects: Iterable[definitions.Device]
    ) -> RecordSet[definitions.Device]: ...
    def delete(self, objects: Iterable[definitions.Device]) -> bool: ...
    def choices(self) -> dict: ...
    def count(self, peer_device: str, peer_interface: str) -> int: ...

class Console_port_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ConsolePortTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ConsolePortTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ConsolePortTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.ConsolePortTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        module_type: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.ConsolePortTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ConsolePortTemplate: ...
    def update(
        self, objects: Iterable[definitions.ConsolePortTemplate]
    ) -> RecordSet[definitions.ConsolePortTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.ConsolePortTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Console_portsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ConsolePort]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ConsolePort]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ConsolePort]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.ConsolePort: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        module: Optional[int] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        speed: Optional[int] = None,
        description: Optional[str] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        connected_endpoints: Optional[List[Any]] = None,
        connected_endpoints_type: Optional[str] = None,
        connected_endpoints_reachable: Optional[bool] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.ConsolePort: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ConsolePort: ...
    def update(
        self, objects: Iterable[definitions.ConsolePort]
    ) -> RecordSet[definitions.ConsolePort]: ...
    def delete(self, objects: Iterable[definitions.ConsolePort]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Console_server_port_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ConsoleServerPortTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ConsoleServerPortTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ConsoleServerPortTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.ConsoleServerPortTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        module_type: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.ConsoleServerPortTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ConsoleServerPortTemplate: ...
    def update(
        self, objects: Iterable[definitions.ConsoleServerPortTemplate]
    ) -> RecordSet[definitions.ConsoleServerPortTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.ConsoleServerPortTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Console_server_portsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ConsoleServerPort]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ConsoleServerPort]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ConsoleServerPort]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.ConsoleServerPort: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        module: Optional[int] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        speed: Optional[int] = None,
        description: Optional[str] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        connected_endpoints: Optional[List[Any]] = None,
        connected_endpoints_type: Optional[str] = None,
        connected_endpoints_reachable: Optional[bool] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.ConsoleServerPort: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ConsoleServerPort: ...
    def update(
        self, objects: Iterable[definitions.ConsoleServerPort]
    ) -> RecordSet[definitions.ConsoleServerPort]: ...
    def delete(
        self, objects: Iterable[definitions.ConsoleServerPort]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Device_bay_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.DeviceBayTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.DeviceBayTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.DeviceBayTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.DeviceBayTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.DeviceBayTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.DeviceBayTemplate: ...
    def update(
        self, objects: Iterable[definitions.DeviceBayTemplate]
    ) -> RecordSet[definitions.DeviceBayTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.DeviceBayTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Device_baysEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.DeviceBay]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.DeviceBay]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.DeviceBay]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.DeviceBay: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        installed_device: Optional[int] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.DeviceBay: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.DeviceBay: ...
    def update(
        self, objects: Iterable[definitions.DeviceBay]
    ) -> RecordSet[definitions.DeviceBay]: ...
    def delete(self, objects: Iterable[definitions.DeviceBay]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Device_rolesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.DeviceRole]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        vm_role: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.DeviceRole]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        vm_role: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.DeviceRole]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.DeviceRole: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        color: Optional[str] = None,
        vm_role: Optional[bool] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device_count: Optional[int] = None,
        virtualmachine_count: Optional[int] = None,
    ) -> definitions.DeviceRole: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.DeviceRole: ...
    def update(
        self, objects: Iterable[definitions.DeviceRole]
    ) -> RecordSet[definitions.DeviceRole]: ...
    def delete(self, objects: Iterable[definitions.DeviceRole]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        vm_role: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Device_typesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.DeviceType]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        model: Optional[str] = None,
        slug: Optional[str] = None,
        part_number: Optional[str] = None,
        u_height: Optional[str] = None,
        is_full_depth: Optional[str] = None,
        subdevice_role: Optional[str] = None,
        airflow: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        has_front_image: Optional[str] = None,
        has_rear_image: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        module_bays: Optional[str] = None,
        device_bays: Optional[str] = None,
        inventory_items: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        model__n: Optional[str] = None,
        model__ic: Optional[str] = None,
        model__nic: Optional[str] = None,
        model__iew: Optional[str] = None,
        model__niew: Optional[str] = None,
        model__isw: Optional[str] = None,
        model__nisw: Optional[str] = None,
        model__ie: Optional[str] = None,
        model__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        part_number__n: Optional[str] = None,
        part_number__ic: Optional[str] = None,
        part_number__nic: Optional[str] = None,
        part_number__iew: Optional[str] = None,
        part_number__niew: Optional[str] = None,
        part_number__isw: Optional[str] = None,
        part_number__nisw: Optional[str] = None,
        part_number__ie: Optional[str] = None,
        part_number__nie: Optional[str] = None,
        u_height__n: Optional[str] = None,
        u_height__lte: Optional[str] = None,
        u_height__lt: Optional[str] = None,
        u_height__gte: Optional[str] = None,
        u_height__gt: Optional[str] = None,
        subdevice_role__n: Optional[str] = None,
        airflow__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.DeviceType]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        model: Optional[str] = None,
        slug: Optional[str] = None,
        part_number: Optional[str] = None,
        u_height: Optional[str] = None,
        is_full_depth: Optional[str] = None,
        subdevice_role: Optional[str] = None,
        airflow: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        has_front_image: Optional[str] = None,
        has_rear_image: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        module_bays: Optional[str] = None,
        device_bays: Optional[str] = None,
        inventory_items: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        model__n: Optional[str] = None,
        model__ic: Optional[str] = None,
        model__nic: Optional[str] = None,
        model__iew: Optional[str] = None,
        model__niew: Optional[str] = None,
        model__isw: Optional[str] = None,
        model__nisw: Optional[str] = None,
        model__ie: Optional[str] = None,
        model__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        part_number__n: Optional[str] = None,
        part_number__ic: Optional[str] = None,
        part_number__nic: Optional[str] = None,
        part_number__iew: Optional[str] = None,
        part_number__niew: Optional[str] = None,
        part_number__isw: Optional[str] = None,
        part_number__nisw: Optional[str] = None,
        part_number__ie: Optional[str] = None,
        part_number__nie: Optional[str] = None,
        u_height__n: Optional[str] = None,
        u_height__lte: Optional[str] = None,
        u_height__lt: Optional[str] = None,
        u_height__gte: Optional[str] = None,
        u_height__gt: Optional[str] = None,
        subdevice_role__n: Optional[str] = None,
        airflow__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.DeviceType]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.DeviceType: ...
    @overload
    def create(
        self,
        manufacturer: int,
        model: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        part_number: Optional[str] = None,
        u_height: Optional[float] = None,
        is_full_depth: Optional[bool] = None,
        subdevice_role: Optional[str] = None,
        airflow: Optional[str] = None,
        front_image: Optional[str] = None,
        rear_image: Optional[str] = None,
        comments: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device_count: Optional[int] = None,
    ) -> definitions.DeviceType: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.DeviceType: ...
    def update(
        self, objects: Iterable[definitions.DeviceType]
    ) -> RecordSet[definitions.DeviceType]: ...
    def delete(self, objects: Iterable[definitions.DeviceType]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        model: Optional[str] = None,
        slug: Optional[str] = None,
        part_number: Optional[str] = None,
        u_height: Optional[str] = None,
        is_full_depth: Optional[str] = None,
        subdevice_role: Optional[str] = None,
        airflow: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        has_front_image: Optional[str] = None,
        has_rear_image: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        module_bays: Optional[str] = None,
        device_bays: Optional[str] = None,
        inventory_items: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        model__n: Optional[str] = None,
        model__ic: Optional[str] = None,
        model__nic: Optional[str] = None,
        model__iew: Optional[str] = None,
        model__niew: Optional[str] = None,
        model__isw: Optional[str] = None,
        model__nisw: Optional[str] = None,
        model__ie: Optional[str] = None,
        model__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        part_number__n: Optional[str] = None,
        part_number__ic: Optional[str] = None,
        part_number__nic: Optional[str] = None,
        part_number__iew: Optional[str] = None,
        part_number__niew: Optional[str] = None,
        part_number__isw: Optional[str] = None,
        part_number__nisw: Optional[str] = None,
        part_number__ie: Optional[str] = None,
        part_number__nie: Optional[str] = None,
        u_height__n: Optional[str] = None,
        u_height__lte: Optional[str] = None,
        u_height__lt: Optional[str] = None,
        u_height__gte: Optional[str] = None,
        u_height__gt: Optional[str] = None,
        subdevice_role__n: Optional[str] = None,
        airflow__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class DevicesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.DeviceWithConfigContext]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        asset_tag: Optional[str] = None,
        face: Optional[str] = None,
        position: Optional[str] = None,
        airflow: Optional[str] = None,
        vc_position: Optional[str] = None,
        vc_priority: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        local_context_data: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        device_type: Optional[str] = None,
        device_type_id: Optional[str | int] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        parent_device_id: Optional[str | int] = None,
        platform_id: Optional[str | int] = None,
        platform: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        rack_id: Optional[str | int] = None,
        cluster_id: Optional[str | int] = None,
        model: Optional[str] = None,
        status: Optional[str] = None,
        is_full_depth: Optional[str] = None,
        mac_address: Optional[str] = None,
        serial: Optional[str] = None,
        has_primary_ip: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis_member: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        module_bays: Optional[str] = None,
        device_bays: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        face__n: Optional[str] = None,
        position__n: Optional[str] = None,
        position__lte: Optional[str] = None,
        position__lt: Optional[str] = None,
        position__gte: Optional[str] = None,
        position__gt: Optional[str] = None,
        airflow__n: Optional[str] = None,
        vc_position__n: Optional[str] = None,
        vc_position__lte: Optional[str] = None,
        vc_position__lt: Optional[str] = None,
        vc_position__gte: Optional[str] = None,
        vc_position__gt: Optional[str] = None,
        vc_priority__n: Optional[str] = None,
        vc_priority__lte: Optional[str] = None,
        vc_priority__lt: Optional[str] = None,
        vc_priority__gte: Optional[str] = None,
        vc_priority__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        device_type__n: Optional[str] = None,
        device_type_id__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        parent_device_id__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        model__n: Optional[str] = None,
        status__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.DeviceWithConfigContext]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        asset_tag: Optional[str] = None,
        face: Optional[str] = None,
        position: Optional[str] = None,
        airflow: Optional[str] = None,
        vc_position: Optional[str] = None,
        vc_priority: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        local_context_data: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        device_type: Optional[str] = None,
        device_type_id: Optional[str | int] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        parent_device_id: Optional[str | int] = None,
        platform_id: Optional[str | int] = None,
        platform: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        rack_id: Optional[str | int] = None,
        cluster_id: Optional[str | int] = None,
        model: Optional[str] = None,
        status: Optional[str] = None,
        is_full_depth: Optional[str] = None,
        mac_address: Optional[str] = None,
        serial: Optional[str] = None,
        has_primary_ip: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis_member: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        module_bays: Optional[str] = None,
        device_bays: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        face__n: Optional[str] = None,
        position__n: Optional[str] = None,
        position__lte: Optional[str] = None,
        position__lt: Optional[str] = None,
        position__gte: Optional[str] = None,
        position__gt: Optional[str] = None,
        airflow__n: Optional[str] = None,
        vc_position__n: Optional[str] = None,
        vc_position__lte: Optional[str] = None,
        vc_position__lt: Optional[str] = None,
        vc_position__gte: Optional[str] = None,
        vc_position__gt: Optional[str] = None,
        vc_priority__n: Optional[str] = None,
        vc_priority__lte: Optional[str] = None,
        vc_priority__lt: Optional[str] = None,
        vc_priority__gte: Optional[str] = None,
        vc_priority__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        device_type__n: Optional[str] = None,
        device_type_id__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        parent_device_id__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        model__n: Optional[str] = None,
        status__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.DeviceWithConfigContext]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.DeviceWithConfigContext: ...
    @overload
    def create(
        self,
        name: str,
        device_type: int,
        device_role: int,
        tenant: int,
        site: int,
        rack: int,
        face: str,
        virtual_chassis: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        platform: Optional[int] = None,
        serial: Optional[str] = None,
        asset_tag: Optional[str] = None,
        location: Optional[int] = None,
        position: Optional[float] = None,
        parent_device: Optional[None] = None,
        status: Optional[str] = None,
        airflow: Optional[str] = None,
        primary_ip: Optional[str] = None,
        primary_ip4: Optional[int] = None,
        primary_ip6: Optional[int] = None,
        cluster: Optional[int] = None,
        vc_position: Optional[int] = None,
        vc_priority: Optional[int] = None,
        comments: Optional[str] = None,
        local_context_data: Optional[Any] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        config_context: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.DeviceWithConfigContext: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.DeviceWithConfigContext: ...
    def update(
        self, objects: Iterable[definitions.DeviceWithConfigContext]
    ) -> RecordSet[definitions.DeviceWithConfigContext]: ...
    def delete(
        self, objects: Iterable[definitions.DeviceWithConfigContext]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        asset_tag: Optional[str] = None,
        face: Optional[str] = None,
        position: Optional[str] = None,
        airflow: Optional[str] = None,
        vc_position: Optional[str] = None,
        vc_priority: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        local_context_data: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        device_type: Optional[str] = None,
        device_type_id: Optional[str | int] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        parent_device_id: Optional[str | int] = None,
        platform_id: Optional[str | int] = None,
        platform: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        rack_id: Optional[str | int] = None,
        cluster_id: Optional[str | int] = None,
        model: Optional[str] = None,
        status: Optional[str] = None,
        is_full_depth: Optional[str] = None,
        mac_address: Optional[str] = None,
        serial: Optional[str] = None,
        has_primary_ip: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis_member: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        module_bays: Optional[str] = None,
        device_bays: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        face__n: Optional[str] = None,
        position__n: Optional[str] = None,
        position__lte: Optional[str] = None,
        position__lt: Optional[str] = None,
        position__gte: Optional[str] = None,
        position__gt: Optional[str] = None,
        airflow__n: Optional[str] = None,
        vc_position__n: Optional[str] = None,
        vc_position__lte: Optional[str] = None,
        vc_position__lt: Optional[str] = None,
        vc_position__gte: Optional[str] = None,
        vc_position__gt: Optional[str] = None,
        vc_priority__n: Optional[str] = None,
        vc_priority__lte: Optional[str] = None,
        vc_priority__lt: Optional[str] = None,
        vc_priority__gte: Optional[str] = None,
        vc_priority__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        device_type__n: Optional[str] = None,
        device_type_id__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        parent_device_id__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        model__n: Optional[str] = None,
        status__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Front_port_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.FrontPortTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.FrontPortTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.FrontPortTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.FrontPortTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        module_type: int,
        name: str,
        type: str,
        rear_port: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        color: Optional[str] = None,
        rear_port_position: Optional[int] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.FrontPortTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.FrontPortTemplate: ...
    def update(
        self, objects: Iterable[definitions.FrontPortTemplate]
    ) -> RecordSet[definitions.FrontPortTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.FrontPortTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Front_portsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.FrontPort]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.FrontPort]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.FrontPort]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.FrontPort: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        type: str,
        rear_port: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        module: Optional[int] = None,
        label: Optional[str] = None,
        color: Optional[str] = None,
        rear_port_position: Optional[int] = None,
        description: Optional[str] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.FrontPort: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.FrontPort: ...
    def update(
        self, objects: Iterable[definitions.FrontPort]
    ) -> RecordSet[definitions.FrontPort]: ...
    def delete(self, objects: Iterable[definitions.FrontPort]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Interface_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.InterfaceTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        mgmt_only: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        poe_mode__n: Optional[str] = None,
        poe_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.InterfaceTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        mgmt_only: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        poe_mode__n: Optional[str] = None,
        poe_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.InterfaceTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.InterfaceTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        module_type: int,
        name: str,
        type: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        mgmt_only: Optional[bool] = None,
        description: Optional[str] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.InterfaceTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.InterfaceTemplate: ...
    def update(
        self, objects: Iterable[definitions.InterfaceTemplate]
    ) -> RecordSet[definitions.InterfaceTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.InterfaceTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        mgmt_only: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        poe_mode__n: Optional[str] = None,
        poe_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class InterfacesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.Interface]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        enabled: Optional[str] = None,
        mtu: Optional[str] = None,
        mgmt_only: Optional[str] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        mode: Optional[str] = None,
        rf_role: Optional[str] = None,
        rf_channel: Optional[str] = None,
        rf_channel_frequency: Optional[str] = None,
        rf_channel_width: Optional[str] = None,
        tx_power: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        kind: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        bridge_id: Optional[str | int] = None,
        lag_id: Optional[str | int] = None,
        speed: Optional[str] = None,
        duplex: Optional[str] = None,
        mac_address: Optional[str] = None,
        wwn: Optional[str] = None,
        vlan_id: Optional[str | int] = None,
        vlan: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        mtu__n: Optional[str] = None,
        mtu__lte: Optional[str] = None,
        mtu__lt: Optional[str] = None,
        mtu__gte: Optional[str] = None,
        mtu__gt: Optional[str] = None,
        poe_mode__n: Optional[str] = None,
        poe_type__n: Optional[str] = None,
        mode__n: Optional[str] = None,
        rf_role__n: Optional[str] = None,
        rf_channel__n: Optional[str] = None,
        rf_channel_frequency__n: Optional[str] = None,
        rf_channel_frequency__lte: Optional[str] = None,
        rf_channel_frequency__lt: Optional[str] = None,
        rf_channel_frequency__gte: Optional[str] = None,
        rf_channel_frequency__gt: Optional[str] = None,
        rf_channel_width__n: Optional[str] = None,
        rf_channel_width__lte: Optional[str] = None,
        rf_channel_width__lt: Optional[str] = None,
        rf_channel_width__gte: Optional[str] = None,
        rf_channel_width__gt: Optional[str] = None,
        tx_power__n: Optional[str] = None,
        tx_power__lte: Optional[str] = None,
        tx_power__lt: Optional[str] = None,
        tx_power__gte: Optional[str] = None,
        tx_power__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        bridge_id__n: Optional[str] = None,
        lag_id__n: Optional[str] = None,
        speed__n: Optional[str] = None,
        speed__lte: Optional[str] = None,
        speed__lt: Optional[str] = None,
        speed__gte: Optional[str] = None,
        speed__gt: Optional[str] = None,
        duplex__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        wwn__n: Optional[str] = None,
        wwn__ic: Optional[str] = None,
        wwn__nic: Optional[str] = None,
        wwn__iew: Optional[str] = None,
        wwn__niew: Optional[str] = None,
        wwn__isw: Optional[str] = None,
        wwn__nisw: Optional[str] = None,
        wwn__ie: Optional[str] = None,
        wwn__nie: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Interface]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        enabled: Optional[str] = None,
        mtu: Optional[str] = None,
        mgmt_only: Optional[str] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        mode: Optional[str] = None,
        rf_role: Optional[str] = None,
        rf_channel: Optional[str] = None,
        rf_channel_frequency: Optional[str] = None,
        rf_channel_width: Optional[str] = None,
        tx_power: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        kind: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        bridge_id: Optional[str | int] = None,
        lag_id: Optional[str | int] = None,
        speed: Optional[str] = None,
        duplex: Optional[str] = None,
        mac_address: Optional[str] = None,
        wwn: Optional[str] = None,
        vlan_id: Optional[str | int] = None,
        vlan: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        mtu__n: Optional[str] = None,
        mtu__lte: Optional[str] = None,
        mtu__lt: Optional[str] = None,
        mtu__gte: Optional[str] = None,
        mtu__gt: Optional[str] = None,
        poe_mode__n: Optional[str] = None,
        poe_type__n: Optional[str] = None,
        mode__n: Optional[str] = None,
        rf_role__n: Optional[str] = None,
        rf_channel__n: Optional[str] = None,
        rf_channel_frequency__n: Optional[str] = None,
        rf_channel_frequency__lte: Optional[str] = None,
        rf_channel_frequency__lt: Optional[str] = None,
        rf_channel_frequency__gte: Optional[str] = None,
        rf_channel_frequency__gt: Optional[str] = None,
        rf_channel_width__n: Optional[str] = None,
        rf_channel_width__lte: Optional[str] = None,
        rf_channel_width__lt: Optional[str] = None,
        rf_channel_width__gte: Optional[str] = None,
        rf_channel_width__gt: Optional[str] = None,
        tx_power__n: Optional[str] = None,
        tx_power__lte: Optional[str] = None,
        tx_power__lt: Optional[str] = None,
        tx_power__gte: Optional[str] = None,
        tx_power__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        bridge_id__n: Optional[str] = None,
        lag_id__n: Optional[str] = None,
        speed__n: Optional[str] = None,
        speed__lte: Optional[str] = None,
        speed__lt: Optional[str] = None,
        speed__gte: Optional[str] = None,
        speed__gt: Optional[str] = None,
        duplex__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        wwn__n: Optional[str] = None,
        wwn__ic: Optional[str] = None,
        wwn__nic: Optional[str] = None,
        wwn__iew: Optional[str] = None,
        wwn__niew: Optional[str] = None,
        wwn__isw: Optional[str] = None,
        wwn__nisw: Optional[str] = None,
        wwn__ie: Optional[str] = None,
        wwn__nie: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Interface]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Interface: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        type: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        module: Optional[int] = None,
        label: Optional[str] = None,
        enabled: Optional[bool] = None,
        parent: Optional[int] = None,
        bridge: Optional[int] = None,
        lag: Optional[int] = None,
        mtu: Optional[int] = None,
        mac_address: Optional[str] = None,
        speed: Optional[int] = None,
        duplex: Optional[str] = None,
        wwn: Optional[str] = None,
        mgmt_only: Optional[bool] = None,
        description: Optional[str] = None,
        mode: Optional[str] = None,
        rf_role: Optional[str] = None,
        rf_channel: Optional[str] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        rf_channel_frequency: Optional[float] = None,
        rf_channel_width: Optional[float] = None,
        tx_power: Optional[int] = None,
        untagged_vlan: Optional[int] = None,
        tagged_vlans: Optional[List[Any]] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        wireless_link: Optional[int] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        wireless_lans: Optional[List[Any]] = None,
        vrf: Optional[int] = None,
        l2vpn_termination: Optional[str] = None,
        connected_endpoints: Optional[List[Any]] = None,
        connected_endpoints_type: Optional[str] = None,
        connected_endpoints_reachable: Optional[bool] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        count_ipaddresses: Optional[int] = None,
        count_fhrp_groups: Optional[int] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.Interface: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Interface: ...
    def update(
        self, objects: Iterable[definitions.Interface]
    ) -> RecordSet[definitions.Interface]: ...
    def delete(self, objects: Iterable[definitions.Interface]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        enabled: Optional[str] = None,
        mtu: Optional[str] = None,
        mgmt_only: Optional[str] = None,
        poe_mode: Optional[str] = None,
        poe_type: Optional[str] = None,
        mode: Optional[str] = None,
        rf_role: Optional[str] = None,
        rf_channel: Optional[str] = None,
        rf_channel_frequency: Optional[str] = None,
        rf_channel_width: Optional[str] = None,
        tx_power: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        kind: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        bridge_id: Optional[str | int] = None,
        lag_id: Optional[str | int] = None,
        speed: Optional[str] = None,
        duplex: Optional[str] = None,
        mac_address: Optional[str] = None,
        wwn: Optional[str] = None,
        vlan_id: Optional[str | int] = None,
        vlan: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        mtu__n: Optional[str] = None,
        mtu__lte: Optional[str] = None,
        mtu__lt: Optional[str] = None,
        mtu__gte: Optional[str] = None,
        mtu__gt: Optional[str] = None,
        poe_mode__n: Optional[str] = None,
        poe_type__n: Optional[str] = None,
        mode__n: Optional[str] = None,
        rf_role__n: Optional[str] = None,
        rf_channel__n: Optional[str] = None,
        rf_channel_frequency__n: Optional[str] = None,
        rf_channel_frequency__lte: Optional[str] = None,
        rf_channel_frequency__lt: Optional[str] = None,
        rf_channel_frequency__gte: Optional[str] = None,
        rf_channel_frequency__gt: Optional[str] = None,
        rf_channel_width__n: Optional[str] = None,
        rf_channel_width__lte: Optional[str] = None,
        rf_channel_width__lt: Optional[str] = None,
        rf_channel_width__gte: Optional[str] = None,
        rf_channel_width__gt: Optional[str] = None,
        tx_power__n: Optional[str] = None,
        tx_power__lte: Optional[str] = None,
        tx_power__lt: Optional[str] = None,
        tx_power__gte: Optional[str] = None,
        tx_power__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        bridge_id__n: Optional[str] = None,
        lag_id__n: Optional[str] = None,
        speed__n: Optional[str] = None,
        speed__lte: Optional[str] = None,
        speed__lt: Optional[str] = None,
        speed__gte: Optional[str] = None,
        speed__gt: Optional[str] = None,
        duplex__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        wwn__n: Optional[str] = None,
        wwn__ic: Optional[str] = None,
        wwn__nic: Optional[str] = None,
        wwn__iew: Optional[str] = None,
        wwn__niew: Optional[str] = None,
        wwn__isw: Optional[str] = None,
        wwn__nisw: Optional[str] = None,
        wwn__ie: Optional[str] = None,
        wwn__nie: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Inventory_item_rolesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.InventoryItemRole]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.InventoryItemRole]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.InventoryItemRole]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.InventoryItemRole: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        inventoryitem_count: Optional[int] = None,
    ) -> definitions.InventoryItemRole: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.InventoryItemRole: ...
    def update(
        self, objects: Iterable[definitions.InventoryItemRole]
    ) -> RecordSet[definitions.InventoryItemRole]: ...
    def delete(
        self, objects: Iterable[definitions.InventoryItemRole]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Inventory_item_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.InventoryItemTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        part_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        parent_id: Optional[str | int] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        part_id__n: Optional[str] = None,
        part_id__ic: Optional[str] = None,
        part_id__nic: Optional[str] = None,
        part_id__iew: Optional[str] = None,
        part_id__niew: Optional[str] = None,
        part_id__isw: Optional[str] = None,
        part_id__nisw: Optional[str] = None,
        part_id__ie: Optional[str] = None,
        part_id__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        component_type__n: Optional[str] = None,
        component_id__n: Optional[str] = None,
        component_id__lte: Optional[str] = None,
        component_id__lt: Optional[str] = None,
        component_id__gte: Optional[str] = None,
        component_id__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.InventoryItemTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        part_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        parent_id: Optional[str | int] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        part_id__n: Optional[str] = None,
        part_id__ic: Optional[str] = None,
        part_id__nic: Optional[str] = None,
        part_id__iew: Optional[str] = None,
        part_id__niew: Optional[str] = None,
        part_id__isw: Optional[str] = None,
        part_id__nisw: Optional[str] = None,
        part_id__ie: Optional[str] = None,
        part_id__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        component_type__n: Optional[str] = None,
        component_id__n: Optional[str] = None,
        component_id__lte: Optional[str] = None,
        component_id__lt: Optional[str] = None,
        component_id__gte: Optional[str] = None,
        component_id__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.InventoryItemTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.InventoryItemTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        parent: Optional[int] = None,
        label: Optional[str] = None,
        role: Optional[int] = None,
        manufacturer: Optional[int] = None,
        part_id: Optional[str | int] = None,
        description: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[int | int] = None,
        component: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _depth: Optional[int] = None,
    ) -> definitions.InventoryItemTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.InventoryItemTemplate: ...
    def update(
        self, objects: Iterable[definitions.InventoryItemTemplate]
    ) -> RecordSet[definitions.InventoryItemTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.InventoryItemTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        part_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        parent_id: Optional[str | int] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        part_id__n: Optional[str] = None,
        part_id__ic: Optional[str] = None,
        part_id__nic: Optional[str] = None,
        part_id__iew: Optional[str] = None,
        part_id__niew: Optional[str] = None,
        part_id__isw: Optional[str] = None,
        part_id__nisw: Optional[str] = None,
        part_id__ie: Optional[str] = None,
        part_id__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        component_type__n: Optional[str] = None,
        component_id__n: Optional[str] = None,
        component_id__lte: Optional[str] = None,
        component_id__lt: Optional[str] = None,
        component_id__gte: Optional[str] = None,
        component_id__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Inventory_itemsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.InventoryItem]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        part_id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        discovered: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[str | int] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        part_id__n: Optional[str] = None,
        part_id__ic: Optional[str] = None,
        part_id__nic: Optional[str] = None,
        part_id__iew: Optional[str] = None,
        part_id__niew: Optional[str] = None,
        part_id__isw: Optional[str] = None,
        part_id__nisw: Optional[str] = None,
        part_id__ie: Optional[str] = None,
        part_id__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        component_type__n: Optional[str] = None,
        component_id__n: Optional[str] = None,
        component_id__lte: Optional[str] = None,
        component_id__lt: Optional[str] = None,
        component_id__gte: Optional[str] = None,
        component_id__gt: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.InventoryItem]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        part_id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        discovered: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[str | int] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        part_id__n: Optional[str] = None,
        part_id__ic: Optional[str] = None,
        part_id__nic: Optional[str] = None,
        part_id__iew: Optional[str] = None,
        part_id__niew: Optional[str] = None,
        part_id__isw: Optional[str] = None,
        part_id__nisw: Optional[str] = None,
        part_id__ie: Optional[str] = None,
        part_id__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        component_type__n: Optional[str] = None,
        component_id__n: Optional[str] = None,
        component_id__lte: Optional[str] = None,
        component_id__lt: Optional[str] = None,
        component_id__gte: Optional[str] = None,
        component_id__gt: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.InventoryItem]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.InventoryItem: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        parent: Optional[int] = None,
        label: Optional[str] = None,
        role: Optional[int] = None,
        manufacturer: Optional[int] = None,
        part_id: Optional[str | int] = None,
        serial: Optional[str] = None,
        asset_tag: Optional[str] = None,
        discovered: Optional[bool] = None,
        description: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[int | int] = None,
        component: Optional[Any] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _depth: Optional[int] = None,
    ) -> definitions.InventoryItem: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.InventoryItem: ...
    def update(
        self, objects: Iterable[definitions.InventoryItem]
    ) -> RecordSet[definitions.InventoryItem]: ...
    def delete(self, objects: Iterable[definitions.InventoryItem]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        part_id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        discovered: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        component_type: Optional[str] = None,
        component_id: Optional[str | int] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        part_id__n: Optional[str] = None,
        part_id__ic: Optional[str] = None,
        part_id__nic: Optional[str] = None,
        part_id__iew: Optional[str] = None,
        part_id__niew: Optional[str] = None,
        part_id__isw: Optional[str] = None,
        part_id__nisw: Optional[str] = None,
        part_id__ie: Optional[str] = None,
        part_id__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        component_type__n: Optional[str] = None,
        component_id__n: Optional[str] = None,
        component_id__lte: Optional[str] = None,
        component_id__lt: Optional[str] = None,
        component_id__gte: Optional[str] = None,
        component_id__gt: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class LocationsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Location]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        status: Optional[str] = None,
        description: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        status__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Location]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        status: Optional[str] = None,
        description: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        status__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Location]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Location: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        site: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        parent: Optional[int] = None,
        status: Optional[str] = None,
        tenant: Optional[int] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        rack_count: Optional[int] = None,
        device_count: Optional[int] = None,
        _depth: Optional[int] = None,
    ) -> definitions.Location: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Location: ...
    def update(
        self, objects: Iterable[definitions.Location]
    ) -> RecordSet[definitions.Location]: ...
    def delete(self, objects: Iterable[definitions.Location]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        status: Optional[str] = None,
        description: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        status__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class ManufacturersEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.Manufacturer]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Manufacturer]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Manufacturer]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Manufacturer: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        devicetype_count: Optional[int] = None,
        inventoryitem_count: Optional[int] = None,
        platform_count: Optional[int] = None,
    ) -> definitions.Manufacturer: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Manufacturer: ...
    def update(
        self, objects: Iterable[definitions.Manufacturer]
    ) -> RecordSet[definitions.Manufacturer]: ...
    def delete(self, objects: Iterable[definitions.Manufacturer]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Module_bay_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ModuleBayTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ModuleBayTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ModuleBayTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.ModuleBayTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        position: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.ModuleBayTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ModuleBayTemplate: ...
    def update(
        self, objects: Iterable[definitions.ModuleBayTemplate]
    ) -> RecordSet[definitions.ModuleBayTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.ModuleBayTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Module_baysEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ModuleBay]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ModuleBay]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ModuleBay]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.ModuleBay: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        installed_module: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        position: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.ModuleBay: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ModuleBay: ...
    def update(
        self, objects: Iterable[definitions.ModuleBay]
    ) -> RecordSet[definitions.ModuleBay]: ...
    def delete(self, objects: Iterable[definitions.ModuleBay]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Module_typesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ModuleType]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        model: Optional[str] = None,
        part_number: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        model__n: Optional[str] = None,
        model__ic: Optional[str] = None,
        model__nic: Optional[str] = None,
        model__iew: Optional[str] = None,
        model__niew: Optional[str] = None,
        model__isw: Optional[str] = None,
        model__nisw: Optional[str] = None,
        model__ie: Optional[str] = None,
        model__nie: Optional[str] = None,
        part_number__n: Optional[str] = None,
        part_number__ic: Optional[str] = None,
        part_number__nic: Optional[str] = None,
        part_number__iew: Optional[str] = None,
        part_number__niew: Optional[str] = None,
        part_number__isw: Optional[str] = None,
        part_number__nisw: Optional[str] = None,
        part_number__ie: Optional[str] = None,
        part_number__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ModuleType]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        model: Optional[str] = None,
        part_number: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        model__n: Optional[str] = None,
        model__ic: Optional[str] = None,
        model__nic: Optional[str] = None,
        model__iew: Optional[str] = None,
        model__niew: Optional[str] = None,
        model__isw: Optional[str] = None,
        model__nisw: Optional[str] = None,
        model__ie: Optional[str] = None,
        model__nie: Optional[str] = None,
        part_number__n: Optional[str] = None,
        part_number__ic: Optional[str] = None,
        part_number__nic: Optional[str] = None,
        part_number__iew: Optional[str] = None,
        part_number__niew: Optional[str] = None,
        part_number__isw: Optional[str] = None,
        part_number__nisw: Optional[str] = None,
        part_number__ie: Optional[str] = None,
        part_number__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ModuleType]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.ModuleType: ...
    @overload
    def create(
        self,
        manufacturer: int,
        model: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        part_number: Optional[str] = None,
        comments: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.ModuleType: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ModuleType: ...
    def update(
        self, objects: Iterable[definitions.ModuleType]
    ) -> RecordSet[definitions.ModuleType]: ...
    def delete(self, objects: Iterable[definitions.ModuleType]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        model: Optional[str] = None,
        part_number: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        console_ports: Optional[str] = None,
        console_server_ports: Optional[str] = None,
        power_ports: Optional[str] = None,
        power_outlets: Optional[str] = None,
        interfaces: Optional[str] = None,
        pass_through_ports: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        model__n: Optional[str] = None,
        model__ic: Optional[str] = None,
        model__nic: Optional[str] = None,
        model__iew: Optional[str] = None,
        model__niew: Optional[str] = None,
        model__isw: Optional[str] = None,
        model__nisw: Optional[str] = None,
        model__ie: Optional[str] = None,
        model__nie: Optional[str] = None,
        part_number__n: Optional[str] = None,
        part_number__ic: Optional[str] = None,
        part_number__nic: Optional[str] = None,
        part_number__iew: Optional[str] = None,
        part_number__niew: Optional[str] = None,
        part_number__isw: Optional[str] = None,
        part_number__nisw: Optional[str] = None,
        part_number__ie: Optional[str] = None,
        part_number__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class ModulesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Module]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        module_type_id: Optional[str | int] = None,
        module_type: Optional[str] = None,
        module_bay_id: Optional[str | int] = None,
        device_id: Optional[str | int] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        module_type_id__n: Optional[str] = None,
        module_type__n: Optional[str] = None,
        module_bay_id__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Module]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        module_type_id: Optional[str | int] = None,
        module_type: Optional[str] = None,
        module_bay_id: Optional[str | int] = None,
        device_id: Optional[str | int] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        module_type_id__n: Optional[str] = None,
        module_type__n: Optional[str] = None,
        module_bay_id__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Module]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Module: ...
    @overload
    def create(
        self,
        device: int,
        module_bay: int,
        module_type: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        serial: Optional[str] = None,
        asset_tag: Optional[str] = None,
        comments: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.Module: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Module: ...
    def update(
        self, objects: Iterable[definitions.Module]
    ) -> RecordSet[definitions.Module]: ...
    def delete(self, objects: Iterable[definitions.Module]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        module_type_id: Optional[str | int] = None,
        module_type: Optional[str] = None,
        module_bay_id: Optional[str | int] = None,
        device_id: Optional[str | int] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        module_type_id__n: Optional[str] = None,
        module_type__n: Optional[str] = None,
        module_bay_id__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class PlatformsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Platform]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        napalm_driver: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        napalm_driver__n: Optional[str] = None,
        napalm_driver__ic: Optional[str] = None,
        napalm_driver__nic: Optional[str] = None,
        napalm_driver__iew: Optional[str] = None,
        napalm_driver__niew: Optional[str] = None,
        napalm_driver__isw: Optional[str] = None,
        napalm_driver__nisw: Optional[str] = None,
        napalm_driver__ie: Optional[str] = None,
        napalm_driver__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Platform]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        napalm_driver: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        napalm_driver__n: Optional[str] = None,
        napalm_driver__ic: Optional[str] = None,
        napalm_driver__nic: Optional[str] = None,
        napalm_driver__iew: Optional[str] = None,
        napalm_driver__niew: Optional[str] = None,
        napalm_driver__isw: Optional[str] = None,
        napalm_driver__nisw: Optional[str] = None,
        napalm_driver__ie: Optional[str] = None,
        napalm_driver__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Platform]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Platform: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        manufacturer: Optional[int] = None,
        napalm_driver: Optional[str] = None,
        napalm_args: Optional[Any] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device_count: Optional[int] = None,
        virtualmachine_count: Optional[int] = None,
    ) -> definitions.Platform: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Platform: ...
    def update(
        self, objects: Iterable[definitions.Platform]
    ) -> RecordSet[definitions.Platform]: ...
    def delete(self, objects: Iterable[definitions.Platform]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        napalm_driver: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        manufacturer_id: Optional[str | int] = None,
        manufacturer: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        napalm_driver__n: Optional[str] = None,
        napalm_driver__ic: Optional[str] = None,
        napalm_driver__nic: Optional[str] = None,
        napalm_driver__iew: Optional[str] = None,
        napalm_driver__niew: Optional[str] = None,
        napalm_driver__isw: Optional[str] = None,
        napalm_driver__nisw: Optional[str] = None,
        napalm_driver__ie: Optional[str] = None,
        napalm_driver__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        manufacturer_id__n: Optional[str] = None,
        manufacturer__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Power_feedsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.PowerFeed]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        supply: Optional[str] = None,
        phase: Optional[str] = None,
        voltage: Optional[str] = None,
        amperage: Optional[str] = None,
        max_utilization: Optional[str] = None,
        cable_end: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        power_panel_id: Optional[str | int] = None,
        rack_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        status__n: Optional[str] = None,
        type__n: Optional[str] = None,
        supply__n: Optional[str] = None,
        phase__n: Optional[str] = None,
        voltage__n: Optional[str] = None,
        voltage__lte: Optional[str] = None,
        voltage__lt: Optional[str] = None,
        voltage__gte: Optional[str] = None,
        voltage__gt: Optional[str] = None,
        amperage__n: Optional[str] = None,
        amperage__lte: Optional[str] = None,
        amperage__lt: Optional[str] = None,
        amperage__gte: Optional[str] = None,
        amperage__gt: Optional[str] = None,
        max_utilization__n: Optional[str] = None,
        max_utilization__lte: Optional[str] = None,
        max_utilization__lt: Optional[str] = None,
        max_utilization__gte: Optional[str] = None,
        max_utilization__gt: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        power_panel_id__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.PowerFeed]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        supply: Optional[str] = None,
        phase: Optional[str] = None,
        voltage: Optional[str] = None,
        amperage: Optional[str] = None,
        max_utilization: Optional[str] = None,
        cable_end: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        power_panel_id: Optional[str | int] = None,
        rack_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        status__n: Optional[str] = None,
        type__n: Optional[str] = None,
        supply__n: Optional[str] = None,
        phase__n: Optional[str] = None,
        voltage__n: Optional[str] = None,
        voltage__lte: Optional[str] = None,
        voltage__lt: Optional[str] = None,
        voltage__gte: Optional[str] = None,
        voltage__gt: Optional[str] = None,
        amperage__n: Optional[str] = None,
        amperage__lte: Optional[str] = None,
        amperage__lt: Optional[str] = None,
        amperage__gte: Optional[str] = None,
        amperage__gt: Optional[str] = None,
        max_utilization__n: Optional[str] = None,
        max_utilization__lte: Optional[str] = None,
        max_utilization__lt: Optional[str] = None,
        max_utilization__gte: Optional[str] = None,
        max_utilization__gt: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        power_panel_id__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.PowerFeed]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.PowerFeed: ...
    @overload
    def create(
        self,
        power_panel: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        rack: Optional[int] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        supply: Optional[str] = None,
        phase: Optional[str] = None,
        voltage: Optional[int] = None,
        amperage: Optional[int] = None,
        max_utilization: Optional[int] = None,
        comments: Optional[str] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        connected_endpoints: Optional[List[Any]] = None,
        connected_endpoints_type: Optional[str] = None,
        connected_endpoints_reachable: Optional[bool] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.PowerFeed: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.PowerFeed: ...
    def update(
        self, objects: Iterable[definitions.PowerFeed]
    ) -> RecordSet[definitions.PowerFeed]: ...
    def delete(self, objects: Iterable[definitions.PowerFeed]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        supply: Optional[str] = None,
        phase: Optional[str] = None,
        voltage: Optional[str] = None,
        amperage: Optional[str] = None,
        max_utilization: Optional[str] = None,
        cable_end: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        power_panel_id: Optional[str | int] = None,
        rack_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        status__n: Optional[str] = None,
        type__n: Optional[str] = None,
        supply__n: Optional[str] = None,
        phase__n: Optional[str] = None,
        voltage__n: Optional[str] = None,
        voltage__lte: Optional[str] = None,
        voltage__lt: Optional[str] = None,
        voltage__gte: Optional[str] = None,
        voltage__gt: Optional[str] = None,
        amperage__n: Optional[str] = None,
        amperage__lte: Optional[str] = None,
        amperage__lt: Optional[str] = None,
        amperage__gte: Optional[str] = None,
        amperage__gt: Optional[str] = None,
        max_utilization__n: Optional[str] = None,
        max_utilization__lte: Optional[str] = None,
        max_utilization__lt: Optional[str] = None,
        max_utilization__gte: Optional[str] = None,
        max_utilization__gt: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        power_panel_id__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Power_outlet_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.PowerOutletTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        feed_leg: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        feed_leg__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.PowerOutletTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        feed_leg: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        feed_leg__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.PowerOutletTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.PowerOutletTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        module_type: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        power_port: Optional[int] = None,
        feed_leg: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.PowerOutletTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.PowerOutletTemplate: ...
    def update(
        self, objects: Iterable[definitions.PowerOutletTemplate]
    ) -> RecordSet[definitions.PowerOutletTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.PowerOutletTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        feed_leg: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        feed_leg__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Power_outletsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.PowerOutlet]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        feed_leg: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        feed_leg__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.PowerOutlet]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        feed_leg: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        feed_leg__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.PowerOutlet]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.PowerOutlet: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        module: Optional[int] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        power_port: Optional[int] = None,
        feed_leg: Optional[str] = None,
        description: Optional[str] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        connected_endpoints: Optional[List[Any]] = None,
        connected_endpoints_type: Optional[str] = None,
        connected_endpoints_reachable: Optional[bool] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.PowerOutlet: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.PowerOutlet: ...
    def update(
        self, objects: Iterable[definitions.PowerOutlet]
    ) -> RecordSet[definitions.PowerOutlet]: ...
    def delete(self, objects: Iterable[definitions.PowerOutlet]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        feed_leg: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        feed_leg__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Power_panelsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.PowerPanel]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.PowerPanel]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.PowerPanel]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.PowerPanel: ...
    @overload
    def create(
        self,
        site: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        location: Optional[int] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        powerfeed_count: Optional[int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.PowerPanel: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.PowerPanel: ...
    def update(
        self, objects: Iterable[definitions.PowerPanel]
    ) -> RecordSet[definitions.PowerPanel]: ...
    def delete(self, objects: Iterable[definitions.PowerPanel]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Power_port_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.PowerPortTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        maximum_draw: Optional[str] = None,
        allocated_draw: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        maximum_draw__n: Optional[str] = None,
        maximum_draw__lte: Optional[str] = None,
        maximum_draw__lt: Optional[str] = None,
        maximum_draw__gte: Optional[str] = None,
        maximum_draw__gt: Optional[str] = None,
        allocated_draw__n: Optional[str] = None,
        allocated_draw__lte: Optional[str] = None,
        allocated_draw__lt: Optional[str] = None,
        allocated_draw__gte: Optional[str] = None,
        allocated_draw__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.PowerPortTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        maximum_draw: Optional[str] = None,
        allocated_draw: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        maximum_draw__n: Optional[str] = None,
        maximum_draw__lte: Optional[str] = None,
        maximum_draw__lt: Optional[str] = None,
        maximum_draw__gte: Optional[str] = None,
        maximum_draw__gt: Optional[str] = None,
        allocated_draw__n: Optional[str] = None,
        allocated_draw__lte: Optional[str] = None,
        allocated_draw__lt: Optional[str] = None,
        allocated_draw__gte: Optional[str] = None,
        allocated_draw__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.PowerPortTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.PowerPortTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        module_type: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        maximum_draw: Optional[int] = None,
        allocated_draw: Optional[int] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.PowerPortTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.PowerPortTemplate: ...
    def update(
        self, objects: Iterable[definitions.PowerPortTemplate]
    ) -> RecordSet[definitions.PowerPortTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.PowerPortTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        maximum_draw: Optional[str] = None,
        allocated_draw: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        maximum_draw__n: Optional[str] = None,
        maximum_draw__lte: Optional[str] = None,
        maximum_draw__lt: Optional[str] = None,
        maximum_draw__gte: Optional[str] = None,
        maximum_draw__gt: Optional[str] = None,
        allocated_draw__n: Optional[str] = None,
        allocated_draw__lte: Optional[str] = None,
        allocated_draw__lt: Optional[str] = None,
        allocated_draw__gte: Optional[str] = None,
        allocated_draw__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Power_portsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.PowerPort]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        maximum_draw: Optional[str] = None,
        allocated_draw: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        maximum_draw__n: Optional[str] = None,
        maximum_draw__lte: Optional[str] = None,
        maximum_draw__lt: Optional[str] = None,
        maximum_draw__gte: Optional[str] = None,
        maximum_draw__gt: Optional[str] = None,
        allocated_draw__n: Optional[str] = None,
        allocated_draw__lte: Optional[str] = None,
        allocated_draw__lt: Optional[str] = None,
        allocated_draw__gte: Optional[str] = None,
        allocated_draw__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.PowerPort]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        maximum_draw: Optional[str] = None,
        allocated_draw: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        maximum_draw__n: Optional[str] = None,
        maximum_draw__lte: Optional[str] = None,
        maximum_draw__lt: Optional[str] = None,
        maximum_draw__gte: Optional[str] = None,
        maximum_draw__gt: Optional[str] = None,
        allocated_draw__n: Optional[str] = None,
        allocated_draw__lte: Optional[str] = None,
        allocated_draw__lt: Optional[str] = None,
        allocated_draw__gte: Optional[str] = None,
        allocated_draw__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.PowerPort]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.PowerPort: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        module: Optional[int] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        maximum_draw: Optional[int] = None,
        allocated_draw: Optional[int] = None,
        description: Optional[str] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        connected_endpoints: Optional[List[Any]] = None,
        connected_endpoints_type: Optional[str] = None,
        connected_endpoints_reachable: Optional[bool] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.PowerPort: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.PowerPort: ...
    def update(
        self, objects: Iterable[definitions.PowerPort]
    ) -> RecordSet[definitions.PowerPort]: ...
    def delete(self, objects: Iterable[definitions.PowerPort]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        maximum_draw: Optional[str] = None,
        allocated_draw: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        connected: Optional[str] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        maximum_draw__n: Optional[str] = None,
        maximum_draw__lte: Optional[str] = None,
        maximum_draw__lt: Optional[str] = None,
        maximum_draw__gte: Optional[str] = None,
        maximum_draw__gt: Optional[str] = None,
        allocated_draw__n: Optional[str] = None,
        allocated_draw__lte: Optional[str] = None,
        allocated_draw__lt: Optional[str] = None,
        allocated_draw__gte: Optional[str] = None,
        allocated_draw__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Rack_reservationsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.RackReservation]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        created: Optional[str] = None,
        description: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        user_id: Optional[str | int] = None,
        user: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        user_id__n: Optional[str] = None,
        user__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.RackReservation]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        created: Optional[str] = None,
        description: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        user_id: Optional[str | int] = None,
        user: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        user_id__n: Optional[str] = None,
        user__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.RackReservation]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.RackReservation: ...
    @overload
    def create(
        self,
        rack: int,
        units: List[Any],
        user: int,
        description: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tenant: Optional[int] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
    ) -> definitions.RackReservation: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.RackReservation: ...
    def update(
        self, objects: Iterable[definitions.RackReservation]
    ) -> RecordSet[definitions.RackReservation]: ...
    def delete(
        self, objects: Iterable[definitions.RackReservation]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        created: Optional[str] = None,
        description: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        user_id: Optional[str | int] = None,
        user: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        user_id__n: Optional[str] = None,
        user__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Rack_rolesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.RackRole]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.RackRole]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.RackRole]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.RackRole: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        rack_count: Optional[int] = None,
    ) -> definitions.RackRole: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.RackRole: ...
    def update(
        self, objects: Iterable[definitions.RackRole]
    ) -> RecordSet[definitions.RackRole]: ...
    def delete(self, objects: Iterable[definitions.RackRole]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class RacksEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Rack]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        facility_id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        u_height: Optional[str] = None,
        desc_units: Optional[str] = None,
        outer_width: Optional[str] = None,
        outer_depth: Optional[str] = None,
        outer_unit: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        width: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        facility_id__n: Optional[str] = None,
        facility_id__ic: Optional[str] = None,
        facility_id__nic: Optional[str] = None,
        facility_id__iew: Optional[str] = None,
        facility_id__niew: Optional[str] = None,
        facility_id__isw: Optional[str] = None,
        facility_id__nisw: Optional[str] = None,
        facility_id__ie: Optional[str] = None,
        facility_id__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        u_height__n: Optional[str] = None,
        u_height__lte: Optional[str] = None,
        u_height__lt: Optional[str] = None,
        u_height__gte: Optional[str] = None,
        u_height__gt: Optional[str] = None,
        outer_width__n: Optional[str] = None,
        outer_width__lte: Optional[str] = None,
        outer_width__lt: Optional[str] = None,
        outer_width__gte: Optional[str] = None,
        outer_width__gt: Optional[str] = None,
        outer_depth__n: Optional[str] = None,
        outer_depth__lte: Optional[str] = None,
        outer_depth__lt: Optional[str] = None,
        outer_depth__gte: Optional[str] = None,
        outer_depth__gt: Optional[str] = None,
        outer_unit__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        status__n: Optional[str] = None,
        type__n: Optional[str] = None,
        width__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Rack]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        facility_id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        u_height: Optional[str] = None,
        desc_units: Optional[str] = None,
        outer_width: Optional[str] = None,
        outer_depth: Optional[str] = None,
        outer_unit: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        width: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        facility_id__n: Optional[str] = None,
        facility_id__ic: Optional[str] = None,
        facility_id__nic: Optional[str] = None,
        facility_id__iew: Optional[str] = None,
        facility_id__niew: Optional[str] = None,
        facility_id__isw: Optional[str] = None,
        facility_id__nisw: Optional[str] = None,
        facility_id__ie: Optional[str] = None,
        facility_id__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        u_height__n: Optional[str] = None,
        u_height__lte: Optional[str] = None,
        u_height__lt: Optional[str] = None,
        u_height__gte: Optional[str] = None,
        u_height__gt: Optional[str] = None,
        outer_width__n: Optional[str] = None,
        outer_width__lte: Optional[str] = None,
        outer_width__lt: Optional[str] = None,
        outer_width__gte: Optional[str] = None,
        outer_width__gt: Optional[str] = None,
        outer_depth__n: Optional[str] = None,
        outer_depth__lte: Optional[str] = None,
        outer_depth__lt: Optional[str] = None,
        outer_depth__gte: Optional[str] = None,
        outer_depth__gt: Optional[str] = None,
        outer_unit__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        status__n: Optional[str] = None,
        type__n: Optional[str] = None,
        width__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Rack]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Rack: ...
    @overload
    def create(
        self,
        name: str,
        site: int,
        location: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        facility_id: Optional[str | int] = None,
        tenant: Optional[int] = None,
        status: Optional[str] = None,
        role: Optional[int] = None,
        serial: Optional[str] = None,
        asset_tag: Optional[str] = None,
        type: Optional[str] = None,
        width: Optional[int] = None,
        u_height: Optional[int] = None,
        desc_units: Optional[bool] = None,
        outer_width: Optional[int] = None,
        outer_depth: Optional[int] = None,
        outer_unit: Optional[str] = None,
        comments: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device_count: Optional[int] = None,
        powerfeed_count: Optional[int] = None,
    ) -> definitions.Rack: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Rack: ...
    def update(
        self, objects: Iterable[definitions.Rack]
    ) -> RecordSet[definitions.Rack]: ...
    def delete(self, objects: Iterable[definitions.Rack]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        facility_id: Optional[str | int] = None,
        asset_tag: Optional[str] = None,
        u_height: Optional[str] = None,
        desc_units: Optional[str] = None,
        outer_width: Optional[str] = None,
        outer_depth: Optional[str] = None,
        outer_unit: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        status: Optional[str] = None,
        type: Optional[str] = None,
        width: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        serial: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        facility_id__n: Optional[str] = None,
        facility_id__ic: Optional[str] = None,
        facility_id__nic: Optional[str] = None,
        facility_id__iew: Optional[str] = None,
        facility_id__niew: Optional[str] = None,
        facility_id__isw: Optional[str] = None,
        facility_id__nisw: Optional[str] = None,
        facility_id__ie: Optional[str] = None,
        facility_id__nie: Optional[str] = None,
        asset_tag__n: Optional[str] = None,
        asset_tag__ic: Optional[str] = None,
        asset_tag__nic: Optional[str] = None,
        asset_tag__iew: Optional[str] = None,
        asset_tag__niew: Optional[str] = None,
        asset_tag__isw: Optional[str] = None,
        asset_tag__nisw: Optional[str] = None,
        asset_tag__ie: Optional[str] = None,
        asset_tag__nie: Optional[str] = None,
        u_height__n: Optional[str] = None,
        u_height__lte: Optional[str] = None,
        u_height__lt: Optional[str] = None,
        u_height__gte: Optional[str] = None,
        u_height__gt: Optional[str] = None,
        outer_width__n: Optional[str] = None,
        outer_width__lte: Optional[str] = None,
        outer_width__lt: Optional[str] = None,
        outer_width__gte: Optional[str] = None,
        outer_width__gt: Optional[str] = None,
        outer_depth__n: Optional[str] = None,
        outer_depth__lte: Optional[str] = None,
        outer_depth__lt: Optional[str] = None,
        outer_depth__gte: Optional[str] = None,
        outer_depth__gt: Optional[str] = None,
        outer_unit__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        status__n: Optional[str] = None,
        type__n: Optional[str] = None,
        width__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        serial__n: Optional[str] = None,
        serial__ic: Optional[str] = None,
        serial__nic: Optional[str] = None,
        serial__iew: Optional[str] = None,
        serial__niew: Optional[str] = None,
        serial__isw: Optional[str] = None,
        serial__nisw: Optional[str] = None,
        serial__ie: Optional[str] = None,
        serial__nie: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Rear_port_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.RearPortTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        positions__n: Optional[str] = None,
        positions__lte: Optional[str] = None,
        positions__lt: Optional[str] = None,
        positions__gte: Optional[str] = None,
        positions__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.RearPortTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        positions__n: Optional[str] = None,
        positions__lte: Optional[str] = None,
        positions__lt: Optional[str] = None,
        positions__gte: Optional[str] = None,
        positions__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.RearPortTemplate]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.RearPortTemplate: ...
    @overload
    def create(
        self,
        device_type: int,
        module_type: int,
        name: str,
        type: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        label: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[int] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.RearPortTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.RearPortTemplate: ...
    def update(
        self, objects: Iterable[definitions.RearPortTemplate]
    ) -> RecordSet[definitions.RearPortTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.RearPortTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        devicetype_id: Optional[str | int] = None,
        moduletype_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        positions__n: Optional[str] = None,
        positions__lte: Optional[str] = None,
        positions__lt: Optional[str] = None,
        positions__gte: Optional[str] = None,
        positions__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        devicetype_id__n: Optional[str] = None,
        moduletype_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Rear_portsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.RearPort]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        positions__n: Optional[str] = None,
        positions__lte: Optional[str] = None,
        positions__lt: Optional[str] = None,
        positions__gte: Optional[str] = None,
        positions__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.RearPort]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        positions__n: Optional[str] = None,
        positions__lte: Optional[str] = None,
        positions__lt: Optional[str] = None,
        positions__gte: Optional[str] = None,
        positions__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.RearPort]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.RearPort: ...
    @overload
    def create(
        self,
        device: int,
        name: str,
        type: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        module: Optional[int] = None,
        label: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[int] = None,
        description: Optional[str] = None,
        mark_connected: Optional[bool] = None,
        cable: Optional[None] = None,
        cable_end: Optional[str] = None,
        link_peers: Optional[List[Any]] = None,
        link_peers_type: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        _occupied: Optional[bool] = None,
    ) -> definitions.RearPort: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.RearPort: ...
    def update(
        self, objects: Iterable[definitions.RearPort]
    ) -> RecordSet[definitions.RearPort]: ...
    def delete(self, objects: Iterable[definitions.RearPort]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        label: Optional[str] = None,
        type: Optional[str] = None,
        color: Optional[str] = None,
        positions: Optional[str] = None,
        description: Optional[str] = None,
        cable_end: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        location_id: Optional[str | int] = None,
        location: Optional[str] = None,
        rack_id: Optional[str | int] = None,
        rack: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_chassis_id: Optional[str | int] = None,
        virtual_chassis: Optional[str] = None,
        module_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        tag: Optional[str] = None,
        cabled: Optional[str] = None,
        occupied: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        label__n: Optional[str] = None,
        label__ic: Optional[str] = None,
        label__nic: Optional[str] = None,
        label__iew: Optional[str] = None,
        label__niew: Optional[str] = None,
        label__isw: Optional[str] = None,
        label__nisw: Optional[str] = None,
        label__ie: Optional[str] = None,
        label__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        positions__n: Optional[str] = None,
        positions__lte: Optional[str] = None,
        positions__lt: Optional[str] = None,
        positions__gte: Optional[str] = None,
        positions__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        cable_end__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        location_id__n: Optional[str] = None,
        location__n: Optional[str] = None,
        rack_id__n: Optional[str] = None,
        rack__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_chassis_id__n: Optional[str] = None,
        virtual_chassis__n: Optional[str] = None,
        module_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class RegionsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Region]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Region]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Region]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Region: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        parent: Optional[int] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        site_count: Optional[int] = None,
        _depth: Optional[int] = None,
    ) -> definitions.Region: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Region: ...
    def update(
        self, objects: Iterable[definitions.Region]
    ) -> RecordSet[definitions.Region]: ...
    def delete(self, objects: Iterable[definitions.Region]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Site_groupsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.SiteGroup]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.SiteGroup]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.SiteGroup]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.SiteGroup: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        parent: Optional[int] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        site_count: Optional[int] = None,
        _depth: Optional[int] = None,
    ) -> definitions.SiteGroup: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.SiteGroup: ...
    def update(
        self, objects: Iterable[definitions.SiteGroup]
    ) -> RecordSet[definitions.SiteGroup]: ...
    def delete(self, objects: Iterable[definitions.SiteGroup]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        parent: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        parent__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class SitesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Site]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        facility: Optional[str] = None,
        latitude: Optional[str] = None,
        longitude: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        status: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        asn: Optional[str] = None,
        asn_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        facility__n: Optional[str] = None,
        facility__ic: Optional[str] = None,
        facility__nic: Optional[str] = None,
        facility__iew: Optional[str] = None,
        facility__niew: Optional[str] = None,
        facility__isw: Optional[str] = None,
        facility__nisw: Optional[str] = None,
        facility__ie: Optional[str] = None,
        facility__nie: Optional[str] = None,
        latitude__n: Optional[str] = None,
        latitude__lte: Optional[str] = None,
        latitude__lt: Optional[str] = None,
        latitude__gte: Optional[str] = None,
        latitude__gt: Optional[str] = None,
        longitude__n: Optional[str] = None,
        longitude__lte: Optional[str] = None,
        longitude__lt: Optional[str] = None,
        longitude__gte: Optional[str] = None,
        longitude__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        status__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        asn__n: Optional[str] = None,
        asn_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Site]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        facility: Optional[str] = None,
        latitude: Optional[str] = None,
        longitude: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        status: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        asn: Optional[str] = None,
        asn_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        facility__n: Optional[str] = None,
        facility__ic: Optional[str] = None,
        facility__nic: Optional[str] = None,
        facility__iew: Optional[str] = None,
        facility__niew: Optional[str] = None,
        facility__isw: Optional[str] = None,
        facility__nisw: Optional[str] = None,
        facility__ie: Optional[str] = None,
        facility__nie: Optional[str] = None,
        latitude__n: Optional[str] = None,
        latitude__lte: Optional[str] = None,
        latitude__lt: Optional[str] = None,
        latitude__gte: Optional[str] = None,
        latitude__gt: Optional[str] = None,
        longitude__n: Optional[str] = None,
        longitude__lte: Optional[str] = None,
        longitude__lt: Optional[str] = None,
        longitude__gte: Optional[str] = None,
        longitude__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        status__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        asn__n: Optional[str] = None,
        asn_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Site]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Site: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        status: Optional[str] = None,
        region: Optional[int] = None,
        group: Optional[int] = None,
        tenant: Optional[int] = None,
        facility: Optional[str] = None,
        time_zone: Optional[str] = None,
        description: Optional[str] = None,
        physical_address: Optional[str] = None,
        shipping_address: Optional[str] = None,
        latitude: Optional[float] = None,
        longitude: Optional[float] = None,
        comments: Optional[str] = None,
        asns: Optional[List[Any]] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        circuit_count: Optional[int] = None,
        device_count: Optional[int] = None,
        prefix_count: Optional[int] = None,
        rack_count: Optional[int] = None,
        virtualmachine_count: Optional[int] = None,
        vlan_count: Optional[int] = None,
    ) -> definitions.Site: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Site: ...
    def update(
        self, objects: Iterable[definitions.Site]
    ) -> RecordSet[definitions.Site]: ...
    def delete(self, objects: Iterable[definitions.Site]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        facility: Optional[str] = None,
        latitude: Optional[str] = None,
        longitude: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        status: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        asn: Optional[str] = None,
        asn_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        facility__n: Optional[str] = None,
        facility__ic: Optional[str] = None,
        facility__nic: Optional[str] = None,
        facility__iew: Optional[str] = None,
        facility__niew: Optional[str] = None,
        facility__isw: Optional[str] = None,
        facility__nisw: Optional[str] = None,
        facility__ie: Optional[str] = None,
        facility__nie: Optional[str] = None,
        latitude__n: Optional[str] = None,
        latitude__lte: Optional[str] = None,
        latitude__lt: Optional[str] = None,
        latitude__gte: Optional[str] = None,
        latitude__gt: Optional[str] = None,
        longitude__n: Optional[str] = None,
        longitude__lte: Optional[str] = None,
        longitude__lt: Optional[str] = None,
        longitude__gte: Optional[str] = None,
        longitude__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        status__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        asn__n: Optional[str] = None,
        asn_id__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Virtual_chassisEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.VirtualChassis]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        domain: Optional[str] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        master_id: Optional[str | int] = None,
        master: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        domain__n: Optional[str] = None,
        domain__ic: Optional[str] = None,
        domain__nic: Optional[str] = None,
        domain__iew: Optional[str] = None,
        domain__niew: Optional[str] = None,
        domain__isw: Optional[str] = None,
        domain__nisw: Optional[str] = None,
        domain__ie: Optional[str] = None,
        domain__nie: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        master_id__n: Optional[str] = None,
        master__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.VirtualChassis]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        domain: Optional[str] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        master_id: Optional[str | int] = None,
        master: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        domain__n: Optional[str] = None,
        domain__ic: Optional[str] = None,
        domain__nic: Optional[str] = None,
        domain__iew: Optional[str] = None,
        domain__niew: Optional[str] = None,
        domain__isw: Optional[str] = None,
        domain__nisw: Optional[str] = None,
        domain__ie: Optional[str] = None,
        domain__nie: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        master_id__n: Optional[str] = None,
        master__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.VirtualChassis]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.VirtualChassis: ...
    @overload
    def create(
        self,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        domain: Optional[str] = None,
        master: Optional[int] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        member_count: Optional[int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.VirtualChassis: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.VirtualChassis: ...
    def update(
        self, objects: Iterable[definitions.VirtualChassis]
    ) -> RecordSet[definitions.VirtualChassis]: ...
    def delete(
        self, objects: Iterable[definitions.VirtualChassis]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        domain: Optional[str] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        master_id: Optional[str | int] = None,
        master: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        domain__n: Optional[str] = None,
        domain__ic: Optional[str] = None,
        domain__nic: Optional[str] = None,
        domain__iew: Optional[str] = None,
        domain__niew: Optional[str] = None,
        domain__isw: Optional[str] = None,
        domain__nisw: Optional[str] = None,
        domain__ie: Optional[str] = None,
        domain__nie: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        master_id__n: Optional[str] = None,
        master__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class DcimApp(App):
    def __init__(self, api: 'Api', name):
        self.cable_terminations: Cable_terminationsEndpoint = ...
        self.cables: CablesEndpoint = ...
        self.connected_device: Connected_deviceEndpoint = ...
        self.console_port_templates: Console_port_templatesEndpoint = ...
        self.console_ports: Console_portsEndpoint = ...
        self.console_server_port_templates: Console_server_port_templatesEndpoint = (
            ...
        )
        self.console_server_ports: Console_server_portsEndpoint = ...
        self.device_bay_templates: Device_bay_templatesEndpoint = ...
        self.device_bays: Device_baysEndpoint = ...
        self.device_roles: Device_rolesEndpoint = ...
        self.device_types: Device_typesEndpoint = ...
        self.devices: DevicesEndpoint = ...
        self.front_port_templates: Front_port_templatesEndpoint = ...
        self.front_ports: Front_portsEndpoint = ...
        self.interface_templates: Interface_templatesEndpoint = ...
        self.interfaces: InterfacesEndpoint = ...
        self.inventory_item_roles: Inventory_item_rolesEndpoint = ...
        self.inventory_item_templates: Inventory_item_templatesEndpoint = ...
        self.inventory_items: Inventory_itemsEndpoint = ...
        self.locations: LocationsEndpoint = ...
        self.manufacturers: ManufacturersEndpoint = ...
        self.module_bay_templates: Module_bay_templatesEndpoint = ...
        self.module_bays: Module_baysEndpoint = ...
        self.module_types: Module_typesEndpoint = ...
        self.modules: ModulesEndpoint = ...
        self.platforms: PlatformsEndpoint = ...
        self.power_feeds: Power_feedsEndpoint = ...
        self.power_outlet_templates: Power_outlet_templatesEndpoint = ...
        self.power_outlets: Power_outletsEndpoint = ...
        self.power_panels: Power_panelsEndpoint = ...
        self.power_port_templates: Power_port_templatesEndpoint = ...
        self.power_ports: Power_portsEndpoint = ...
        self.rack_reservations: Rack_reservationsEndpoint = ...
        self.rack_roles: Rack_rolesEndpoint = ...
        self.racks: RacksEndpoint = ...
        self.rear_port_templates: Rear_port_templatesEndpoint = ...
        self.rear_ports: Rear_portsEndpoint = ...
        self.regions: RegionsEndpoint = ...
        self.site_groups: Site_groupsEndpoint = ...
        self.sites: SitesEndpoint = ...
        self.virtual_chassis: Virtual_chassisEndpoint = ...
