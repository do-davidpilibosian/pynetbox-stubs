
from typing import Any, Dict, List, Optional, Union, Iterable
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record
from pynetbox._get import definitions

class CablesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.CablesEndpoint]: ...
    def get(self, id: Optional[str], label: Optional[str], length: Optional[str], length_unit: Optional[str], termination_a_id: Optional[str], termination_b_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], termination_a_type: Optional[str], termination_b_type: Optional[str], type: Optional[str], status: Optional[str], color: Optional[str], device_id: Optional[str], device: Optional[str], rack_id: Optional[str], rack: Optional[str], site_id: Optional[str], site: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], length__n: Optional[str], length__lte: Optional[str], length__lt: Optional[str], length__gte: Optional[str], length__gt: Optional[str], length_unit__n: Optional[str], termination_a_id__n: Optional[str], termination_a_id__lte: Optional[str], termination_a_id__lt: Optional[str], termination_a_id__gte: Optional[str], termination_a_id__gt: Optional[str], termination_b_id__n: Optional[str], termination_b_id__lte: Optional[str], termination_b_id__lt: Optional[str], termination_b_id__gte: Optional[str], termination_b_id__gt: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag__n: Optional[str], termination_a_type__n: Optional[str], termination_b_type__n: Optional[str], type__n: Optional[str], status__n: Optional[str], color__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.CablesEndpoint: ...
    def filter(self, id: Optional[str], label: Optional[str], length: Optional[str], length_unit: Optional[str], termination_a_id: Optional[str], termination_b_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], termination_a_type: Optional[str], termination_b_type: Optional[str], type: Optional[str], status: Optional[str], color: Optional[str], device_id: Optional[str], device: Optional[str], rack_id: Optional[str], rack: Optional[str], site_id: Optional[str], site: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], length__n: Optional[str], length__lte: Optional[str], length__lt: Optional[str], length__gte: Optional[str], length__gt: Optional[str], length_unit__n: Optional[str], termination_a_id__n: Optional[str], termination_a_id__lte: Optional[str], termination_a_id__lt: Optional[str], termination_a_id__gte: Optional[str], termination_a_id__gt: Optional[str], termination_b_id__n: Optional[str], termination_b_id__lte: Optional[str], termination_b_id__lt: Optional[str], termination_b_id__gte: Optional[str], termination_b_id__gt: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag__n: Optional[str], termination_a_type__n: Optional[str], termination_b_type__n: Optional[str], type__n: Optional[str], status__n: Optional[str], color__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.CablesEndpoint]: ...
    def create(self, id: Optional[str], label: Optional[str], length: Optional[str], length_unit: Optional[str], termination_a_id: Optional[str], termination_b_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], termination_a_type: Optional[str], termination_b_type: Optional[str], type: Optional[str], status: Optional[str], color: Optional[str], device_id: Optional[str], device: Optional[str], rack_id: Optional[str], rack: Optional[str], site_id: Optional[str], site: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], length__n: Optional[str], length__lte: Optional[str], length__lt: Optional[str], length__gte: Optional[str], length__gt: Optional[str], length_unit__n: Optional[str], termination_a_id__n: Optional[str], termination_a_id__lte: Optional[str], termination_a_id__lt: Optional[str], termination_a_id__gte: Optional[str], termination_a_id__gt: Optional[str], termination_b_id__n: Optional[str], termination_b_id__lte: Optional[str], termination_b_id__lt: Optional[str], termination_b_id__gte: Optional[str], termination_b_id__gt: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag__n: Optional[str], termination_a_type__n: Optional[str], termination_b_type__n: Optional[str], type__n: Optional[str], status__n: Optional[str], color__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.CablesEndpoint: ...
    def update(self, objects: Iterable[definitions.CablesEndpoint]) -> [definitions.CablesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.CablesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], label: Optional[str], length: Optional[str], length_unit: Optional[str], termination_a_id: Optional[str], termination_b_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], termination_a_type: Optional[str], termination_b_type: Optional[str], type: Optional[str], status: Optional[str], color: Optional[str], device_id: Optional[str], device: Optional[str], rack_id: Optional[str], rack: Optional[str], site_id: Optional[str], site: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], length__n: Optional[str], length__lte: Optional[str], length__lt: Optional[str], length__gte: Optional[str], length__gt: Optional[str], length_unit__n: Optional[str], termination_a_id__n: Optional[str], termination_a_id__lte: Optional[str], termination_a_id__lt: Optional[str], termination_a_id__gte: Optional[str], termination_a_id__gt: Optional[str], termination_b_id__n: Optional[str], termination_b_id__lte: Optional[str], termination_b_id__lt: Optional[str], termination_b_id__gte: Optional[str], termination_b_id__gt: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag__n: Optional[str], termination_a_type__n: Optional[str], termination_b_type__n: Optional[str], type__n: Optional[str], status__n: Optional[str], color__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Connected_deviceEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Connected_deviceEndpoint]: ...
    def get(self, peer_device: string, peer_interface: string) -> definitions.Connected_deviceEndpoint: ...
    def filter(self, peer_device: string, peer_interface: string) -> RecordSet[definitions.Connected_deviceEndpoint]: ...
    def create(self, peer_device: string, peer_interface: string) -> definitions.Connected_deviceEndpoint: ...
    def update(self, objects: Iterable[definitions.Connected_deviceEndpoint]) -> [definitions.Connected_deviceEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Connected_deviceEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, peer_device: string, peer_interface: string) -> int: ...


class Console_port_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Console_port_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_port_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Console_port_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_port_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Console_port_templatesEndpoint]) -> [definitions.Console_port_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Console_port_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Console_portsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Console_portsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_portsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Console_portsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_portsEndpoint: ...
    def update(self, objects: Iterable[definitions.Console_portsEndpoint]) -> [definitions.Console_portsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Console_portsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Console_server_port_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Console_server_port_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_server_port_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Console_server_port_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_server_port_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Console_server_port_templatesEndpoint]) -> [definitions.Console_server_port_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Console_server_port_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Console_server_portsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Console_server_portsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_server_portsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Console_server_portsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Console_server_portsEndpoint: ...
    def update(self, objects: Iterable[definitions.Console_server_portsEndpoint]) -> [definitions.Console_server_portsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Console_server_portsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Device_bay_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Device_bay_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_bay_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Device_bay_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_bay_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Device_bay_templatesEndpoint]) -> [definitions.Device_bay_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Device_bay_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Device_baysEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Device_baysEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_baysEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Device_baysEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_baysEndpoint: ...
    def update(self, objects: Iterable[definitions.Device_baysEndpoint]) -> [definitions.Device_baysEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Device_baysEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Device_rolesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Device_rolesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], vm_role: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_rolesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], vm_role: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Device_rolesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], vm_role: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_rolesEndpoint: ...
    def update(self, objects: Iterable[definitions.Device_rolesEndpoint]) -> [definitions.Device_rolesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Device_rolesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], vm_role: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Device_typesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Device_typesEndpoint]: ...
    def get(self, id: Optional[str], model: Optional[str], slug: Optional[str], part_number: Optional[str], u_height: Optional[str], is_full_depth: Optional[str], subdevice_role: Optional[str], airflow: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], inventory_items: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], subdevice_role__n: Optional[str], airflow__n: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_typesEndpoint: ...
    def filter(self, id: Optional[str], model: Optional[str], slug: Optional[str], part_number: Optional[str], u_height: Optional[str], is_full_depth: Optional[str], subdevice_role: Optional[str], airflow: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], inventory_items: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], subdevice_role__n: Optional[str], airflow__n: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Device_typesEndpoint]: ...
    def create(self, id: Optional[str], model: Optional[str], slug: Optional[str], part_number: Optional[str], u_height: Optional[str], is_full_depth: Optional[str], subdevice_role: Optional[str], airflow: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], inventory_items: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], subdevice_role__n: Optional[str], airflow__n: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Device_typesEndpoint: ...
    def update(self, objects: Iterable[definitions.Device_typesEndpoint]) -> [definitions.Device_typesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Device_typesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], model: Optional[str], slug: Optional[str], part_number: Optional[str], u_height: Optional[str], is_full_depth: Optional[str], subdevice_role: Optional[str], airflow: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], inventory_items: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], subdevice_role__n: Optional[str], airflow__n: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class DevicesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.DevicesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], asset_tag: Optional[str], face: Optional[str], position: Optional[str], airflow: Optional[str], vc_position: Optional[str], vc_priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], parent_device_id: Optional[str], platform_id: Optional[str], platform: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], rack_id: Optional[str], cluster_id: Optional[str], model: Optional[str], status: Optional[str], is_full_depth: Optional[str], mac_address: Optional[str], serial: Optional[str], has_primary_ip: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis_member: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], face__n: Optional[str], position__n: Optional[str], position__lte: Optional[str], position__lt: Optional[str], position__gte: Optional[str], position__gt: Optional[str], airflow__n: Optional[str], vc_position__n: Optional[str], vc_position__lte: Optional[str], vc_position__lt: Optional[str], vc_position__gte: Optional[str], vc_position__gt: Optional[str], vc_priority__n: Optional[str], vc_priority__lte: Optional[str], vc_priority__lt: Optional[str], vc_priority__gte: Optional[str], vc_priority__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], parent_device_id__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], rack_id__n: Optional[str], cluster_id__n: Optional[str], model__n: Optional[str], status__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], virtual_chassis_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.DevicesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], asset_tag: Optional[str], face: Optional[str], position: Optional[str], airflow: Optional[str], vc_position: Optional[str], vc_priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], parent_device_id: Optional[str], platform_id: Optional[str], platform: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], rack_id: Optional[str], cluster_id: Optional[str], model: Optional[str], status: Optional[str], is_full_depth: Optional[str], mac_address: Optional[str], serial: Optional[str], has_primary_ip: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis_member: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], face__n: Optional[str], position__n: Optional[str], position__lte: Optional[str], position__lt: Optional[str], position__gte: Optional[str], position__gt: Optional[str], airflow__n: Optional[str], vc_position__n: Optional[str], vc_position__lte: Optional[str], vc_position__lt: Optional[str], vc_position__gte: Optional[str], vc_position__gt: Optional[str], vc_priority__n: Optional[str], vc_priority__lte: Optional[str], vc_priority__lt: Optional[str], vc_priority__gte: Optional[str], vc_priority__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], parent_device_id__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], rack_id__n: Optional[str], cluster_id__n: Optional[str], model__n: Optional[str], status__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], virtual_chassis_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.DevicesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], asset_tag: Optional[str], face: Optional[str], position: Optional[str], airflow: Optional[str], vc_position: Optional[str], vc_priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], parent_device_id: Optional[str], platform_id: Optional[str], platform: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], rack_id: Optional[str], cluster_id: Optional[str], model: Optional[str], status: Optional[str], is_full_depth: Optional[str], mac_address: Optional[str], serial: Optional[str], has_primary_ip: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis_member: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], face__n: Optional[str], position__n: Optional[str], position__lte: Optional[str], position__lt: Optional[str], position__gte: Optional[str], position__gt: Optional[str], airflow__n: Optional[str], vc_position__n: Optional[str], vc_position__lte: Optional[str], vc_position__lt: Optional[str], vc_position__gte: Optional[str], vc_position__gt: Optional[str], vc_priority__n: Optional[str], vc_priority__lte: Optional[str], vc_priority__lt: Optional[str], vc_priority__gte: Optional[str], vc_priority__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], parent_device_id__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], rack_id__n: Optional[str], cluster_id__n: Optional[str], model__n: Optional[str], status__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], virtual_chassis_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.DevicesEndpoint: ...
    def update(self, objects: Iterable[definitions.DevicesEndpoint]) -> [definitions.DevicesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.DevicesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], asset_tag: Optional[str], face: Optional[str], position: Optional[str], airflow: Optional[str], vc_position: Optional[str], vc_priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], parent_device_id: Optional[str], platform_id: Optional[str], platform: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], rack_id: Optional[str], cluster_id: Optional[str], model: Optional[str], status: Optional[str], is_full_depth: Optional[str], mac_address: Optional[str], serial: Optional[str], has_primary_ip: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis_member: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], module_bays: Optional[str], device_bays: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], face__n: Optional[str], position__n: Optional[str], position__lte: Optional[str], position__lt: Optional[str], position__gte: Optional[str], position__gt: Optional[str], airflow__n: Optional[str], vc_position__n: Optional[str], vc_position__lte: Optional[str], vc_position__lt: Optional[str], vc_position__gte: Optional[str], vc_position__gt: Optional[str], vc_priority__n: Optional[str], vc_priority__lte: Optional[str], vc_priority__lt: Optional[str], vc_priority__gte: Optional[str], vc_priority__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], parent_device_id__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], rack_id__n: Optional[str], cluster_id__n: Optional[str], model__n: Optional[str], status__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], virtual_chassis_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Front_port_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Front_port_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Front_port_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Front_port_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Front_port_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Front_port_templatesEndpoint]) -> [definitions.Front_port_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Front_port_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Front_portsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Front_portsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Front_portsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Front_portsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Front_portsEndpoint: ...
    def update(self, objects: Iterable[definitions.Front_portsEndpoint]) -> [definitions.Front_portsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Front_portsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Interface_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Interface_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], type: Optional[str], mgmt_only: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Interface_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], type: Optional[str], mgmt_only: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Interface_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], type: Optional[str], mgmt_only: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Interface_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Interface_templatesEndpoint]) -> [definitions.Interface_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Interface_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type: Optional[str], mgmt_only: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class InterfacesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.InterfacesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], enabled: Optional[str], mtu: Optional[str], mgmt_only: Optional[str], mode: Optional[str], rf_role: Optional[str], rf_channel: Optional[str], rf_channel_frequency: Optional[str], rf_channel_width: Optional[str], tx_power: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], kind: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], lag_id: Optional[str], speed: Optional[str], duplex: Optional[str], mac_address: Optional[str], wwn: Optional[str], vlan_id: Optional[str], vlan: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], mode__n: Optional[str], rf_role__n: Optional[str], rf_channel__n: Optional[str], rf_channel_frequency__n: Optional[str], rf_channel_frequency__lte: Optional[str], rf_channel_frequency__lt: Optional[str], rf_channel_frequency__gte: Optional[str], rf_channel_frequency__gt: Optional[str], rf_channel_width__n: Optional[str], rf_channel_width__lte: Optional[str], rf_channel_width__lt: Optional[str], rf_channel_width__gte: Optional[str], rf_channel_width__gt: Optional[str], tx_power__n: Optional[str], tx_power__lte: Optional[str], tx_power__lt: Optional[str], tx_power__gte: Optional[str], tx_power__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], lag_id__n: Optional[str], speed__n: Optional[str], speed__lte: Optional[str], speed__lt: Optional[str], speed__gte: Optional[str], speed__gt: Optional[str], duplex__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], wwn__n: Optional[str], wwn__ic: Optional[str], wwn__nic: Optional[str], wwn__iew: Optional[str], wwn__niew: Optional[str], wwn__isw: Optional[str], wwn__nisw: Optional[str], wwn__ie: Optional[str], wwn__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.InterfacesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], enabled: Optional[str], mtu: Optional[str], mgmt_only: Optional[str], mode: Optional[str], rf_role: Optional[str], rf_channel: Optional[str], rf_channel_frequency: Optional[str], rf_channel_width: Optional[str], tx_power: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], kind: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], lag_id: Optional[str], speed: Optional[str], duplex: Optional[str], mac_address: Optional[str], wwn: Optional[str], vlan_id: Optional[str], vlan: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], mode__n: Optional[str], rf_role__n: Optional[str], rf_channel__n: Optional[str], rf_channel_frequency__n: Optional[str], rf_channel_frequency__lte: Optional[str], rf_channel_frequency__lt: Optional[str], rf_channel_frequency__gte: Optional[str], rf_channel_frequency__gt: Optional[str], rf_channel_width__n: Optional[str], rf_channel_width__lte: Optional[str], rf_channel_width__lt: Optional[str], rf_channel_width__gte: Optional[str], rf_channel_width__gt: Optional[str], tx_power__n: Optional[str], tx_power__lte: Optional[str], tx_power__lt: Optional[str], tx_power__gte: Optional[str], tx_power__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], lag_id__n: Optional[str], speed__n: Optional[str], speed__lte: Optional[str], speed__lt: Optional[str], speed__gte: Optional[str], speed__gt: Optional[str], duplex__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], wwn__n: Optional[str], wwn__ic: Optional[str], wwn__nic: Optional[str], wwn__iew: Optional[str], wwn__niew: Optional[str], wwn__isw: Optional[str], wwn__nisw: Optional[str], wwn__ie: Optional[str], wwn__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.InterfacesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], enabled: Optional[str], mtu: Optional[str], mgmt_only: Optional[str], mode: Optional[str], rf_role: Optional[str], rf_channel: Optional[str], rf_channel_frequency: Optional[str], rf_channel_width: Optional[str], tx_power: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], kind: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], lag_id: Optional[str], speed: Optional[str], duplex: Optional[str], mac_address: Optional[str], wwn: Optional[str], vlan_id: Optional[str], vlan: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], mode__n: Optional[str], rf_role__n: Optional[str], rf_channel__n: Optional[str], rf_channel_frequency__n: Optional[str], rf_channel_frequency__lte: Optional[str], rf_channel_frequency__lt: Optional[str], rf_channel_frequency__gte: Optional[str], rf_channel_frequency__gt: Optional[str], rf_channel_width__n: Optional[str], rf_channel_width__lte: Optional[str], rf_channel_width__lt: Optional[str], rf_channel_width__gte: Optional[str], rf_channel_width__gt: Optional[str], tx_power__n: Optional[str], tx_power__lte: Optional[str], tx_power__lt: Optional[str], tx_power__gte: Optional[str], tx_power__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], lag_id__n: Optional[str], speed__n: Optional[str], speed__lte: Optional[str], speed__lt: Optional[str], speed__gte: Optional[str], speed__gt: Optional[str], duplex__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], wwn__n: Optional[str], wwn__ic: Optional[str], wwn__nic: Optional[str], wwn__iew: Optional[str], wwn__niew: Optional[str], wwn__isw: Optional[str], wwn__nisw: Optional[str], wwn__ie: Optional[str], wwn__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.InterfacesEndpoint: ...
    def update(self, objects: Iterable[definitions.InterfacesEndpoint]) -> [definitions.InterfacesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.InterfacesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], enabled: Optional[str], mtu: Optional[str], mgmt_only: Optional[str], mode: Optional[str], rf_role: Optional[str], rf_channel: Optional[str], rf_channel_frequency: Optional[str], rf_channel_width: Optional[str], tx_power: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], kind: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], lag_id: Optional[str], speed: Optional[str], duplex: Optional[str], mac_address: Optional[str], wwn: Optional[str], vlan_id: Optional[str], vlan: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], mode__n: Optional[str], rf_role__n: Optional[str], rf_channel__n: Optional[str], rf_channel_frequency__n: Optional[str], rf_channel_frequency__lte: Optional[str], rf_channel_frequency__lt: Optional[str], rf_channel_frequency__gte: Optional[str], rf_channel_frequency__gt: Optional[str], rf_channel_width__n: Optional[str], rf_channel_width__lte: Optional[str], rf_channel_width__lt: Optional[str], rf_channel_width__gte: Optional[str], rf_channel_width__gt: Optional[str], tx_power__n: Optional[str], tx_power__lte: Optional[str], tx_power__lt: Optional[str], tx_power__gte: Optional[str], tx_power__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], lag_id__n: Optional[str], speed__n: Optional[str], speed__lte: Optional[str], speed__lt: Optional[str], speed__gte: Optional[str], speed__gt: Optional[str], duplex__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], wwn__n: Optional[str], wwn__ic: Optional[str], wwn__nic: Optional[str], wwn__iew: Optional[str], wwn__niew: Optional[str], wwn__isw: Optional[str], wwn__nisw: Optional[str], wwn__ie: Optional[str], wwn__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Inventory_item_rolesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Inventory_item_rolesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Inventory_item_rolesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Inventory_item_rolesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Inventory_item_rolesEndpoint: ...
    def update(self, objects: Iterable[definitions.Inventory_item_rolesEndpoint]) -> [definitions.Inventory_item_rolesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Inventory_item_rolesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Inventory_item_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Inventory_item_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], devicetype_id__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Inventory_item_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], devicetype_id__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Inventory_item_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], devicetype_id__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Inventory_item_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Inventory_item_templatesEndpoint]) -> [definitions.Inventory_item_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Inventory_item_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], devicetype_id__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Inventory_itemsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Inventory_itemsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], asset_tag: Optional[str], discovered: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Inventory_itemsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], asset_tag: Optional[str], discovered: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Inventory_itemsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], asset_tag: Optional[str], discovered: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Inventory_itemsEndpoint: ...
    def update(self, objects: Iterable[definitions.Inventory_itemsEndpoint]) -> [definitions.Inventory_itemsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Inventory_itemsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], part_id: Optional[str], asset_tag: Optional[str], discovered: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], parent_id: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], role_id: Optional[str], role: Optional[str], component_type: Optional[str], component_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], part_id__n: Optional[str], part_id__ic: Optional[str], part_id__nic: Optional[str], part_id__iew: Optional[str], part_id__niew: Optional[str], part_id__isw: Optional[str], part_id__nisw: Optional[str], part_id__ie: Optional[str], part_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], component_type__n: Optional[str], component_id__n: Optional[str], component_id__lte: Optional[str], component_id__lt: Optional[str], component_id__gte: Optional[str], component_id__gt: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class LocationsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.LocationsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.LocationsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.LocationsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.LocationsEndpoint: ...
    def update(self, objects: Iterable[definitions.LocationsEndpoint]) -> [definitions.LocationsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.LocationsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class ManufacturersEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ManufacturersEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ManufacturersEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.ManufacturersEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ManufacturersEndpoint: ...
    def update(self, objects: Iterable[definitions.ManufacturersEndpoint]) -> [definitions.ManufacturersEndpoint]: ...
    def delete(self, objects: Iterable[definitions.ManufacturersEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Module_bay_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Module_bay_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Module_bay_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Module_bay_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Module_bay_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Module_bay_templatesEndpoint]) -> [definitions.Module_bay_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Module_bay_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], devicetype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Module_baysEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Module_baysEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Module_baysEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Module_baysEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Module_baysEndpoint: ...
    def update(self, objects: Iterable[definitions.Module_baysEndpoint]) -> [definitions.Module_baysEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Module_baysEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Module_typesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Module_typesEndpoint]: ...
    def get(self, id: Optional[str], model: Optional[str], part_number: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Module_typesEndpoint: ...
    def filter(self, id: Optional[str], model: Optional[str], part_number: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Module_typesEndpoint]: ...
    def create(self, id: Optional[str], model: Optional[str], part_number: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Module_typesEndpoint: ...
    def update(self, objects: Iterable[definitions.Module_typesEndpoint]) -> [definitions.Module_typesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Module_typesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], model: Optional[str], part_number: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], console_ports: Optional[str], console_server_ports: Optional[str], power_ports: Optional[str], power_outlets: Optional[str], interfaces: Optional[str], pass_through_ports: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], model__n: Optional[str], model__ic: Optional[str], model__nic: Optional[str], model__iew: Optional[str], model__niew: Optional[str], model__isw: Optional[str], model__nisw: Optional[str], model__ie: Optional[str], model__nie: Optional[str], part_number__n: Optional[str], part_number__ic: Optional[str], part_number__nic: Optional[str], part_number__iew: Optional[str], part_number__niew: Optional[str], part_number__isw: Optional[str], part_number__nisw: Optional[str], part_number__ie: Optional[str], part_number__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class ModulesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ModulesEndpoint]: ...
    def get(self, id: Optional[str], asset_tag: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], module_type_id: Optional[str], module_type: Optional[str], module_bay_id: Optional[str], device_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], module_type_id__n: Optional[str], module_type__n: Optional[str], module_bay_id__n: Optional[str], device_id__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ModulesEndpoint: ...
    def filter(self, id: Optional[str], asset_tag: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], module_type_id: Optional[str], module_type: Optional[str], module_bay_id: Optional[str], device_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], module_type_id__n: Optional[str], module_type__n: Optional[str], module_bay_id__n: Optional[str], device_id__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.ModulesEndpoint]: ...
    def create(self, id: Optional[str], asset_tag: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], module_type_id: Optional[str], module_type: Optional[str], module_bay_id: Optional[str], device_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], module_type_id__n: Optional[str], module_type__n: Optional[str], module_bay_id__n: Optional[str], device_id__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ModulesEndpoint: ...
    def update(self, objects: Iterable[definitions.ModulesEndpoint]) -> [definitions.ModulesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.ModulesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], asset_tag: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], module_type_id: Optional[str], module_type: Optional[str], module_bay_id: Optional[str], device_id: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], module_type_id__n: Optional[str], module_type__n: Optional[str], module_bay_id__n: Optional[str], device_id__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class PlatformsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.PlatformsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], napalm_driver: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], napalm_driver__n: Optional[str], napalm_driver__ic: Optional[str], napalm_driver__nic: Optional[str], napalm_driver__iew: Optional[str], napalm_driver__niew: Optional[str], napalm_driver__isw: Optional[str], napalm_driver__nisw: Optional[str], napalm_driver__ie: Optional[str], napalm_driver__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.PlatformsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], napalm_driver: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], napalm_driver__n: Optional[str], napalm_driver__ic: Optional[str], napalm_driver__nic: Optional[str], napalm_driver__iew: Optional[str], napalm_driver__niew: Optional[str], napalm_driver__isw: Optional[str], napalm_driver__nisw: Optional[str], napalm_driver__ie: Optional[str], napalm_driver__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.PlatformsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], napalm_driver: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], napalm_driver__n: Optional[str], napalm_driver__ic: Optional[str], napalm_driver__nic: Optional[str], napalm_driver__iew: Optional[str], napalm_driver__niew: Optional[str], napalm_driver__isw: Optional[str], napalm_driver__nisw: Optional[str], napalm_driver__ie: Optional[str], napalm_driver__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.PlatformsEndpoint: ...
    def update(self, objects: Iterable[definitions.PlatformsEndpoint]) -> [definitions.PlatformsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.PlatformsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], napalm_driver: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], manufacturer_id: Optional[str], manufacturer: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], napalm_driver__n: Optional[str], napalm_driver__ic: Optional[str], napalm_driver__nic: Optional[str], napalm_driver__iew: Optional[str], napalm_driver__niew: Optional[str], napalm_driver__isw: Optional[str], napalm_driver__nisw: Optional[str], napalm_driver__ie: Optional[str], napalm_driver__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], manufacturer_id__n: Optional[str], manufacturer__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Power_feedsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Power_feedsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], status: Optional[str], type: Optional[str], supply: Optional[str], phase: Optional[str], voltage: Optional[str], amperage: Optional[str], max_utilization: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], power_panel_id: Optional[str], rack_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], status__n: Optional[str], type__n: Optional[str], supply__n: Optional[str], phase__n: Optional[str], voltage__n: Optional[str], voltage__lte: Optional[str], voltage__lt: Optional[str], voltage__gte: Optional[str], voltage__gt: Optional[str], amperage__n: Optional[str], amperage__lte: Optional[str], amperage__lt: Optional[str], amperage__gte: Optional[str], amperage__gt: Optional[str], max_utilization__n: Optional[str], max_utilization__lte: Optional[str], max_utilization__lt: Optional[str], max_utilization__gte: Optional[str], max_utilization__gt: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], power_panel_id__n: Optional[str], rack_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_feedsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], status: Optional[str], type: Optional[str], supply: Optional[str], phase: Optional[str], voltage: Optional[str], amperage: Optional[str], max_utilization: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], power_panel_id: Optional[str], rack_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], status__n: Optional[str], type__n: Optional[str], supply__n: Optional[str], phase__n: Optional[str], voltage__n: Optional[str], voltage__lte: Optional[str], voltage__lt: Optional[str], voltage__gte: Optional[str], voltage__gt: Optional[str], amperage__n: Optional[str], amperage__lte: Optional[str], amperage__lt: Optional[str], amperage__gte: Optional[str], amperage__gt: Optional[str], max_utilization__n: Optional[str], max_utilization__lte: Optional[str], max_utilization__lt: Optional[str], max_utilization__gte: Optional[str], max_utilization__gt: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], power_panel_id__n: Optional[str], rack_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Power_feedsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], status: Optional[str], type: Optional[str], supply: Optional[str], phase: Optional[str], voltage: Optional[str], amperage: Optional[str], max_utilization: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], power_panel_id: Optional[str], rack_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], status__n: Optional[str], type__n: Optional[str], supply__n: Optional[str], phase__n: Optional[str], voltage__n: Optional[str], voltage__lte: Optional[str], voltage__lt: Optional[str], voltage__gte: Optional[str], voltage__gt: Optional[str], amperage__n: Optional[str], amperage__lte: Optional[str], amperage__lt: Optional[str], amperage__gte: Optional[str], amperage__gt: Optional[str], max_utilization__n: Optional[str], max_utilization__lte: Optional[str], max_utilization__lt: Optional[str], max_utilization__gte: Optional[str], max_utilization__gt: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], power_panel_id__n: Optional[str], rack_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_feedsEndpoint: ...
    def update(self, objects: Iterable[definitions.Power_feedsEndpoint]) -> [definitions.Power_feedsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Power_feedsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], status: Optional[str], type: Optional[str], supply: Optional[str], phase: Optional[str], voltage: Optional[str], amperage: Optional[str], max_utilization: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], power_panel_id: Optional[str], rack_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], status__n: Optional[str], type__n: Optional[str], supply__n: Optional[str], phase__n: Optional[str], voltage__n: Optional[str], voltage__lte: Optional[str], voltage__lt: Optional[str], voltage__gte: Optional[str], voltage__gt: Optional[str], amperage__n: Optional[str], amperage__lte: Optional[str], amperage__lt: Optional[str], amperage__gte: Optional[str], amperage__gt: Optional[str], max_utilization__n: Optional[str], max_utilization__lte: Optional[str], max_utilization__lt: Optional[str], max_utilization__gte: Optional[str], max_utilization__gt: Optional[str], tag__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], power_panel_id__n: Optional[str], rack_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Power_outlet_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Power_outlet_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], type: Optional[str], feed_leg: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], feed_leg__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_outlet_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], type: Optional[str], feed_leg: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], feed_leg__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Power_outlet_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], type: Optional[str], feed_leg: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], feed_leg__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_outlet_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Power_outlet_templatesEndpoint]) -> [definitions.Power_outlet_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Power_outlet_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type: Optional[str], feed_leg: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], feed_leg__n: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Power_outletsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Power_outletsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], feed_leg: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], feed_leg__n: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_outletsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], feed_leg: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], feed_leg__n: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Power_outletsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], feed_leg: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], feed_leg__n: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_outletsEndpoint: ...
    def update(self, objects: Iterable[definitions.Power_outletsEndpoint]) -> [definitions.Power_outletsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Power_outletsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], feed_leg: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], feed_leg__n: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Power_panelsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Power_panelsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_panelsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Power_panelsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_panelsEndpoint: ...
    def update(self, objects: Iterable[definitions.Power_panelsEndpoint]) -> [definitions.Power_panelsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Power_panelsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Power_port_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Power_port_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], type: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_port_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], type: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Power_port_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], type: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_port_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Power_port_templatesEndpoint]) -> [definitions.Power_port_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Power_port_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Power_portsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Power_portsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_portsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Power_portsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Power_portsEndpoint: ...
    def update(self, objects: Iterable[definitions.Power_portsEndpoint]) -> [definitions.Power_portsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Power_portsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], maximum_draw: Optional[str], allocated_draw: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], connected: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], maximum_draw__n: Optional[str], maximum_draw__lte: Optional[str], maximum_draw__lt: Optional[str], maximum_draw__gte: Optional[str], maximum_draw__gt: Optional[str], allocated_draw__n: Optional[str], allocated_draw__lte: Optional[str], allocated_draw__lt: Optional[str], allocated_draw__gte: Optional[str], allocated_draw__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Rack_reservationsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Rack_reservationsEndpoint]: ...
    def get(self, id: Optional[str], created: Optional[str], description: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], rack_id: Optional[str], site_id: Optional[str], site: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], location_id: Optional[str], location: Optional[str], user_id: Optional[str], user: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], rack_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], user_id__n: Optional[str], user__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rack_reservationsEndpoint: ...
    def filter(self, id: Optional[str], created: Optional[str], description: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], rack_id: Optional[str], site_id: Optional[str], site: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], location_id: Optional[str], location: Optional[str], user_id: Optional[str], user: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], rack_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], user_id__n: Optional[str], user__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Rack_reservationsEndpoint]: ...
    def create(self, id: Optional[str], created: Optional[str], description: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], rack_id: Optional[str], site_id: Optional[str], site: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], location_id: Optional[str], location: Optional[str], user_id: Optional[str], user: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], rack_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], user_id__n: Optional[str], user__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rack_reservationsEndpoint: ...
    def update(self, objects: Iterable[definitions.Rack_reservationsEndpoint]) -> [definitions.Rack_reservationsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Rack_reservationsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], created: Optional[str], description: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], rack_id: Optional[str], site_id: Optional[str], site: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], location_id: Optional[str], location: Optional[str], user_id: Optional[str], user: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], rack_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], user_id__n: Optional[str], user__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Rack_rolesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Rack_rolesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rack_rolesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Rack_rolesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rack_rolesEndpoint: ...
    def update(self, objects: Iterable[definitions.Rack_rolesEndpoint]) -> [definitions.Rack_rolesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Rack_rolesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class RacksEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.RacksEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], facility_id: Optional[str], asset_tag: Optional[str], u_height: Optional[str], desc_units: Optional[str], outer_width: Optional[str], outer_depth: Optional[str], outer_unit: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], status: Optional[str], type: Optional[str], width: Optional[str], role_id: Optional[str], role: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], facility_id__n: Optional[str], facility_id__ic: Optional[str], facility_id__nic: Optional[str], facility_id__iew: Optional[str], facility_id__niew: Optional[str], facility_id__isw: Optional[str], facility_id__nisw: Optional[str], facility_id__ie: Optional[str], facility_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], outer_width__n: Optional[str], outer_width__lte: Optional[str], outer_width__lt: Optional[str], outer_width__gte: Optional[str], outer_width__gt: Optional[str], outer_depth__n: Optional[str], outer_depth__lte: Optional[str], outer_depth__lt: Optional[str], outer_depth__gte: Optional[str], outer_depth__gt: Optional[str], outer_unit__n: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], status__n: Optional[str], type__n: Optional[str], width__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.RacksEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], facility_id: Optional[str], asset_tag: Optional[str], u_height: Optional[str], desc_units: Optional[str], outer_width: Optional[str], outer_depth: Optional[str], outer_unit: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], status: Optional[str], type: Optional[str], width: Optional[str], role_id: Optional[str], role: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], facility_id__n: Optional[str], facility_id__ic: Optional[str], facility_id__nic: Optional[str], facility_id__iew: Optional[str], facility_id__niew: Optional[str], facility_id__isw: Optional[str], facility_id__nisw: Optional[str], facility_id__ie: Optional[str], facility_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], outer_width__n: Optional[str], outer_width__lte: Optional[str], outer_width__lt: Optional[str], outer_width__gte: Optional[str], outer_width__gt: Optional[str], outer_depth__n: Optional[str], outer_depth__lte: Optional[str], outer_depth__lt: Optional[str], outer_depth__gte: Optional[str], outer_depth__gt: Optional[str], outer_unit__n: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], status__n: Optional[str], type__n: Optional[str], width__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.RacksEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], facility_id: Optional[str], asset_tag: Optional[str], u_height: Optional[str], desc_units: Optional[str], outer_width: Optional[str], outer_depth: Optional[str], outer_unit: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], status: Optional[str], type: Optional[str], width: Optional[str], role_id: Optional[str], role: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], facility_id__n: Optional[str], facility_id__ic: Optional[str], facility_id__nic: Optional[str], facility_id__iew: Optional[str], facility_id__niew: Optional[str], facility_id__isw: Optional[str], facility_id__nisw: Optional[str], facility_id__ie: Optional[str], facility_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], outer_width__n: Optional[str], outer_width__lte: Optional[str], outer_width__lt: Optional[str], outer_width__gte: Optional[str], outer_width__gt: Optional[str], outer_depth__n: Optional[str], outer_depth__lte: Optional[str], outer_depth__lt: Optional[str], outer_depth__gte: Optional[str], outer_depth__gt: Optional[str], outer_unit__n: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], status__n: Optional[str], type__n: Optional[str], width__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.RacksEndpoint: ...
    def update(self, objects: Iterable[definitions.RacksEndpoint]) -> [definitions.RacksEndpoint]: ...
    def delete(self, objects: Iterable[definitions.RacksEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], facility_id: Optional[str], asset_tag: Optional[str], u_height: Optional[str], desc_units: Optional[str], outer_width: Optional[str], outer_depth: Optional[str], outer_unit: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], status: Optional[str], type: Optional[str], width: Optional[str], role_id: Optional[str], role: Optional[str], serial: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], facility_id__n: Optional[str], facility_id__ic: Optional[str], facility_id__nic: Optional[str], facility_id__iew: Optional[str], facility_id__niew: Optional[str], facility_id__isw: Optional[str], facility_id__nisw: Optional[str], facility_id__ie: Optional[str], facility_id__nie: Optional[str], asset_tag__n: Optional[str], asset_tag__ic: Optional[str], asset_tag__nic: Optional[str], asset_tag__iew: Optional[str], asset_tag__niew: Optional[str], asset_tag__isw: Optional[str], asset_tag__nisw: Optional[str], asset_tag__ie: Optional[str], asset_tag__nie: Optional[str], u_height__n: Optional[str], u_height__lte: Optional[str], u_height__lt: Optional[str], u_height__gte: Optional[str], u_height__gt: Optional[str], outer_width__n: Optional[str], outer_width__lte: Optional[str], outer_width__lt: Optional[str], outer_width__gte: Optional[str], outer_width__gt: Optional[str], outer_depth__n: Optional[str], outer_depth__lte: Optional[str], outer_depth__lt: Optional[str], outer_depth__gte: Optional[str], outer_depth__gt: Optional[str], outer_unit__n: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], status__n: Optional[str], type__n: Optional[str], width__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], serial__n: Optional[str], serial__ic: Optional[str], serial__nic: Optional[str], serial__iew: Optional[str], serial__niew: Optional[str], serial__isw: Optional[str], serial__nisw: Optional[str], serial__ie: Optional[str], serial__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Rear_port_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Rear_port_templatesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rear_port_templatesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Rear_port_templatesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rear_port_templatesEndpoint: ...
    def update(self, objects: Iterable[definitions.Rear_port_templatesEndpoint]) -> [definitions.Rear_port_templatesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Rear_port_templatesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], devicetype_id: Optional[str], moduletype_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], devicetype_id__n: Optional[str], moduletype_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Rear_portsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Rear_portsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rear_portsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Rear_portsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Rear_portsEndpoint: ...
    def update(self, objects: Iterable[definitions.Rear_portsEndpoint]) -> [definitions.Rear_portsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Rear_portsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], label: Optional[str], type: Optional[str], color: Optional[str], positions: Optional[str], description: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], location_id: Optional[str], location: Optional[str], device_id: Optional[str], device: Optional[str], virtual_chassis_id: Optional[str], virtual_chassis: Optional[str], module_id: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], tag: Optional[str], cabled: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], label__n: Optional[str], label__ic: Optional[str], label__nic: Optional[str], label__iew: Optional[str], label__niew: Optional[str], label__isw: Optional[str], label__nisw: Optional[str], label__ie: Optional[str], label__nie: Optional[str], type__n: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], positions__n: Optional[str], positions__lte: Optional[str], positions__lt: Optional[str], positions__gte: Optional[str], positions__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], location_id__n: Optional[str], location__n: Optional[str], device_id__n: Optional[str], device__n: Optional[str], virtual_chassis_id__n: Optional[str], virtual_chassis__n: Optional[str], module_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class RegionsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.RegionsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.RegionsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.RegionsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.RegionsEndpoint: ...
    def update(self, objects: Iterable[definitions.RegionsEndpoint]) -> [definitions.RegionsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.RegionsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Site_groupsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Site_groupsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Site_groupsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Site_groupsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Site_groupsEndpoint: ...
    def update(self, objects: Iterable[definitions.Site_groupsEndpoint]) -> [definitions.Site_groupsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Site_groupsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class SitesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.SitesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], facility: Optional[str], latitude: Optional[str], longitude: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], status: Optional[str], region_id: Optional[str], region: Optional[str], group_id: Optional[str], group: Optional[str], asn: Optional[str], asn_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], facility__n: Optional[str], facility__ic: Optional[str], facility__nic: Optional[str], facility__iew: Optional[str], facility__niew: Optional[str], facility__isw: Optional[str], facility__nisw: Optional[str], facility__ie: Optional[str], facility__nie: Optional[str], latitude__n: Optional[str], latitude__lte: Optional[str], latitude__lt: Optional[str], latitude__gte: Optional[str], latitude__gt: Optional[str], longitude__n: Optional[str], longitude__lte: Optional[str], longitude__lt: Optional[str], longitude__gte: Optional[str], longitude__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], asn__n: Optional[str], asn_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.SitesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], facility: Optional[str], latitude: Optional[str], longitude: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], status: Optional[str], region_id: Optional[str], region: Optional[str], group_id: Optional[str], group: Optional[str], asn: Optional[str], asn_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], facility__n: Optional[str], facility__ic: Optional[str], facility__nic: Optional[str], facility__iew: Optional[str], facility__niew: Optional[str], facility__isw: Optional[str], facility__nisw: Optional[str], facility__ie: Optional[str], facility__nie: Optional[str], latitude__n: Optional[str], latitude__lte: Optional[str], latitude__lt: Optional[str], latitude__gte: Optional[str], latitude__gt: Optional[str], longitude__n: Optional[str], longitude__lte: Optional[str], longitude__lt: Optional[str], longitude__gte: Optional[str], longitude__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], asn__n: Optional[str], asn_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.SitesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], facility: Optional[str], latitude: Optional[str], longitude: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], status: Optional[str], region_id: Optional[str], region: Optional[str], group_id: Optional[str], group: Optional[str], asn: Optional[str], asn_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], facility__n: Optional[str], facility__ic: Optional[str], facility__nic: Optional[str], facility__iew: Optional[str], facility__niew: Optional[str], facility__isw: Optional[str], facility__nisw: Optional[str], facility__ie: Optional[str], facility__nie: Optional[str], latitude__n: Optional[str], latitude__lte: Optional[str], latitude__lt: Optional[str], latitude__gte: Optional[str], latitude__gt: Optional[str], longitude__n: Optional[str], longitude__lte: Optional[str], longitude__lt: Optional[str], longitude__gte: Optional[str], longitude__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], asn__n: Optional[str], asn_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.SitesEndpoint: ...
    def update(self, objects: Iterable[definitions.SitesEndpoint]) -> [definitions.SitesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.SitesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], facility: Optional[str], latitude: Optional[str], longitude: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], status: Optional[str], region_id: Optional[str], region: Optional[str], group_id: Optional[str], group: Optional[str], asn: Optional[str], asn_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], facility__n: Optional[str], facility__ic: Optional[str], facility__nic: Optional[str], facility__iew: Optional[str], facility__niew: Optional[str], facility__isw: Optional[str], facility__nisw: Optional[str], facility__ie: Optional[str], facility__nie: Optional[str], latitude__n: Optional[str], latitude__lte: Optional[str], latitude__lt: Optional[str], latitude__gte: Optional[str], latitude__gt: Optional[str], longitude__n: Optional[str], longitude__lte: Optional[str], longitude__lt: Optional[str], longitude__gte: Optional[str], longitude__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], asn__n: Optional[str], asn_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Virtual_chassisEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Virtual_chassisEndpoint]: ...
    def get(self, id: Optional[str], domain: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], master_id: Optional[str], master: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], tenant_id: Optional[str], tenant: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], domain__n: Optional[str], domain__ic: Optional[str], domain__nic: Optional[str], domain__iew: Optional[str], domain__niew: Optional[str], domain__isw: Optional[str], domain__nisw: Optional[str], domain__ie: Optional[str], domain__nie: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], master_id__n: Optional[str], master__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Virtual_chassisEndpoint: ...
    def filter(self, id: Optional[str], domain: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], master_id: Optional[str], master: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], tenant_id: Optional[str], tenant: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], domain__n: Optional[str], domain__ic: Optional[str], domain__nic: Optional[str], domain__iew: Optional[str], domain__niew: Optional[str], domain__isw: Optional[str], domain__nisw: Optional[str], domain__ie: Optional[str], domain__nie: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], master_id__n: Optional[str], master__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Virtual_chassisEndpoint]: ...
    def create(self, id: Optional[str], domain: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], master_id: Optional[str], master: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], tenant_id: Optional[str], tenant: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], domain__n: Optional[str], domain__ic: Optional[str], domain__nic: Optional[str], domain__iew: Optional[str], domain__niew: Optional[str], domain__isw: Optional[str], domain__nisw: Optional[str], domain__ie: Optional[str], domain__nie: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], master_id__n: Optional[str], master__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Virtual_chassisEndpoint: ...
    def update(self, objects: Iterable[definitions.Virtual_chassisEndpoint]) -> [definitions.Virtual_chassisEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Virtual_chassisEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], domain: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], master_id: Optional[str], master: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], tenant_id: Optional[str], tenant: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], domain__n: Optional[str], domain__ic: Optional[str], domain__nic: Optional[str], domain__iew: Optional[str], domain__niew: Optional[str], domain__isw: Optional[str], domain__nisw: Optional[str], domain__ie: Optional[str], domain__nie: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], master_id__n: Optional[str], master__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...

class DcimApp(App):
    def __init__(self, api: 'Api', name):
        self.cables: CablesEndpoint = ...
        self.connected_device: Connected_deviceEndpoint = ...
        self.console_port_templates: Console_port_templatesEndpoint = ...
        self.console_ports: Console_portsEndpoint = ...
        self.console_server_port_templates: Console_server_port_templatesEndpoint = ...
        self.console_server_ports: Console_server_portsEndpoint = ...
        self.device_bay_templates: Device_bay_templatesEndpoint = ...
        self.device_bays: Device_baysEndpoint = ...
        self.device_roles: Device_rolesEndpoint = ...
        self.device_types: Device_typesEndpoint = ...
        self.devices: DevicesEndpoint = ...
        self.front_port_templates: Front_port_templatesEndpoint = ...
        self.front_ports: Front_portsEndpoint = ...
        self.interface_templates: Interface_templatesEndpoint = ...
        self.interfaces: InterfacesEndpoint = ...
        self.inventory_item_roles: Inventory_item_rolesEndpoint = ...
        self.inventory_item_templates: Inventory_item_templatesEndpoint = ...
        self.inventory_items: Inventory_itemsEndpoint = ...
        self.locations: LocationsEndpoint = ...
        self.manufacturers: ManufacturersEndpoint = ...
        self.module_bay_templates: Module_bay_templatesEndpoint = ...
        self.module_bays: Module_baysEndpoint = ...
        self.module_types: Module_typesEndpoint = ...
        self.modules: ModulesEndpoint = ...
        self.platforms: PlatformsEndpoint = ...
        self.power_feeds: Power_feedsEndpoint = ...
        self.power_outlet_templates: Power_outlet_templatesEndpoint = ...
        self.power_outlets: Power_outletsEndpoint = ...
        self.power_panels: Power_panelsEndpoint = ...
        self.power_port_templates: Power_port_templatesEndpoint = ...
        self.power_ports: Power_portsEndpoint = ...
        self.rack_reservations: Rack_reservationsEndpoint = ...
        self.rack_roles: Rack_rolesEndpoint = ...
        self.racks: RacksEndpoint = ...
        self.rear_port_templates: Rear_port_templatesEndpoint = ...
        self.rear_ports: Rear_portsEndpoint = ...
        self.regions: RegionsEndpoint = ...
        self.site_groups: Site_groupsEndpoint = ...
        self.sites: SitesEndpoint = ...
        self.virtual_chassis: Virtual_chassisEndpoint = ...