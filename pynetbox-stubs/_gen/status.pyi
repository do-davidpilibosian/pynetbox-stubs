
from typing import Any, Dict, List, Optional, Union, Iterable
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record

class Endpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[EndpointRecord]: ...
    def get(self, ) -> EndpointRecord: ...
    def filter(self, ) -> RecordSet: ...
    def create(self, ) -> EndpointRecord: ...
    def update(self, objects: Iterable[EndpointRecord]) -> [EndpointRecord]: ...
    def delete(self, objects: Iterable[EndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, ) -> int: ...

class StatusApp(App):
    def __init__(self, api: 'Api', name):
        self.: Endpoint = ...