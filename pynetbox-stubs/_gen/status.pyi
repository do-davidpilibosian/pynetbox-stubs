from typing import Any, Dict, List, Optional, Union, Iterable
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record
from pynetbox._gen import definitions

class Endpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Record]: ...
    def get(
        self,
    ) -> Optional[Record]: ...
    def filter(
        self,
    ) -> RecordSet[Record]: ...
    def create(
        self,
    ) -> Record: ...
    def update(self, objects: Iterable[Record]) -> [Record]: ...
    def delete(self, objects: Iterable[Record]): ...
    def choices(self) -> dict: ...
    def count(
        self,
    ) -> int: ...

class StatusApp(App):
    def __init__(self, api: "Api", name): ...
