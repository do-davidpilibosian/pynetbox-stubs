from typing import Any, Dict, Iterable, List, Optional, Union, overload

from pynetbox._gen import definitions
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import Record, RecordSet

class AggregatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.Aggregate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        date_added: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        prefix: Optional[str] = None,
        rir_id: Optional[str | int] = None,
        rir: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        date_added__n: Optional[str] = None,
        date_added__lte: Optional[str] = None,
        date_added__lt: Optional[str] = None,
        date_added__gte: Optional[str] = None,
        date_added__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rir_id__n: Optional[str] = None,
        rir__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
        **kwargs: Optional[Any],
    ) -> Optional[definitions.Aggregate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        date_added: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        prefix: Optional[str] = None,
        rir_id: Optional[str | int] = None,
        rir: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        date_added__n: Optional[str] = None,
        date_added__lte: Optional[str] = None,
        date_added__lt: Optional[str] = None,
        date_added__gte: Optional[str] = None,
        date_added__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rir_id__n: Optional[str] = None,
        rir__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
        **kwargs: Optional[Any],
    ) -> RecordSet[definitions.Aggregate]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Aggregate: ...
    @overload
    def create(
        self,
        prefix: str,
        rir: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        family: Optional[str] = None,
        tenant: Optional[int] = None,
        date_added: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.Aggregate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Aggregate: ...
    def update(
        self, objects: Iterable[definitions.Aggregate]
    ) -> RecordSet[definitions.Aggregate]: ...
    def delete(self, objects: Iterable[definitions.Aggregate]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        date_added: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        prefix: Optional[str] = None,
        rir_id: Optional[str | int] = None,
        rir: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        date_added__n: Optional[str] = None,
        date_added__lte: Optional[str] = None,
        date_added__lt: Optional[str] = None,
        date_added__gte: Optional[str] = None,
        date_added__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rir_id__n: Optional[str] = None,
        rir__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class AsnsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ASN]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        asn: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        rir_id: Optional[str | int] = None,
        rir: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        asn__n: Optional[str] = None,
        asn__lte: Optional[str] = None,
        asn__lt: Optional[str] = None,
        asn__gte: Optional[str] = None,
        asn__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rir_id__n: Optional[str] = None,
        rir__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ASN]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        asn: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        rir_id: Optional[str | int] = None,
        rir: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        asn__n: Optional[str] = None,
        asn__lte: Optional[str] = None,
        asn__lt: Optional[str] = None,
        asn__gte: Optional[str] = None,
        asn__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rir_id__n: Optional[str] = None,
        rir__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ASN]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.ASN: ...
    @overload
    def create(
        self,
        asn: int,
        rir: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        tenant: Optional[int] = None,
        description: Optional[str] = None,
        site_count: Optional[int] = None,
        provider_count: Optional[int] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.ASN: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ASN: ...
    def update(
        self, objects: Iterable[definitions.ASN]
    ) -> RecordSet[definitions.ASN]: ...
    def delete(self, objects: Iterable[definitions.ASN]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        asn: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        rir_id: Optional[str | int] = None,
        rir: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        asn__n: Optional[str] = None,
        asn__lte: Optional[str] = None,
        asn__lt: Optional[str] = None,
        asn__gte: Optional[str] = None,
        asn__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        rir_id__n: Optional[str] = None,
        rir__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Fhrp_group_assignmentsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.FHRPGroupAssignment]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        group_id: Optional[str | int] = None,
        interface_type: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        priority: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        group_id__n: Optional[str] = None,
        interface_type__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        interface_id__lte: Optional[str] = None,
        interface_id__lt: Optional[str] = None,
        interface_id__gte: Optional[str] = None,
        interface_id__gt: Optional[str] = None,
        priority__n: Optional[str] = None,
        priority__lte: Optional[str] = None,
        priority__lt: Optional[str] = None,
        priority__gte: Optional[str] = None,
        priority__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.FHRPGroupAssignment]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        group_id: Optional[str | int] = None,
        interface_type: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        priority: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        group_id__n: Optional[str] = None,
        interface_type__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        interface_id__lte: Optional[str] = None,
        interface_id__lt: Optional[str] = None,
        interface_id__gte: Optional[str] = None,
        interface_id__gt: Optional[str] = None,
        priority__n: Optional[str] = None,
        priority__lte: Optional[str] = None,
        priority__lt: Optional[str] = None,
        priority__gte: Optional[str] = None,
        priority__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.FHRPGroupAssignment]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.FHRPGroupAssignment: ...
    @overload
    def create(
        self,
        group: int,
        interface_type: str,
        interface_id: int | int,
        priority: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        interface: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.FHRPGroupAssignment: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.FHRPGroupAssignment: ...
    def update(
        self, objects: Iterable[definitions.FHRPGroupAssignment]
    ) -> RecordSet[definitions.FHRPGroupAssignment]: ...
    def delete(
        self, objects: Iterable[definitions.FHRPGroupAssignment]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        group_id: Optional[str | int] = None,
        interface_type: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        priority: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        group_id__n: Optional[str] = None,
        interface_type__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        interface_id__lte: Optional[str] = None,
        interface_id__lt: Optional[str] = None,
        interface_id__gte: Optional[str] = None,
        interface_id__gt: Optional[str] = None,
        priority__n: Optional[str] = None,
        priority__lte: Optional[str] = None,
        priority__lt: Optional[str] = None,
        priority__gte: Optional[str] = None,
        priority__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Fhrp_groupsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.FHRPGroup]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        group_id: Optional[str | int] = None,
        auth_key: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        protocol: Optional[str] = None,
        auth_type: Optional[str] = None,
        related_ip: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group_id__lte: Optional[str] = None,
        group_id__lt: Optional[str] = None,
        group_id__gte: Optional[str] = None,
        group_id__gt: Optional[str] = None,
        auth_key__n: Optional[str] = None,
        auth_key__ic: Optional[str] = None,
        auth_key__nic: Optional[str] = None,
        auth_key__iew: Optional[str] = None,
        auth_key__niew: Optional[str] = None,
        auth_key__isw: Optional[str] = None,
        auth_key__nisw: Optional[str] = None,
        auth_key__ie: Optional[str] = None,
        auth_key__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        protocol__n: Optional[str] = None,
        auth_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.FHRPGroup]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        group_id: Optional[str | int] = None,
        auth_key: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        protocol: Optional[str] = None,
        auth_type: Optional[str] = None,
        related_ip: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group_id__lte: Optional[str] = None,
        group_id__lt: Optional[str] = None,
        group_id__gte: Optional[str] = None,
        group_id__gt: Optional[str] = None,
        auth_key__n: Optional[str] = None,
        auth_key__ic: Optional[str] = None,
        auth_key__nic: Optional[str] = None,
        auth_key__iew: Optional[str] = None,
        auth_key__niew: Optional[str] = None,
        auth_key__isw: Optional[str] = None,
        auth_key__nisw: Optional[str] = None,
        auth_key__ie: Optional[str] = None,
        auth_key__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        protocol__n: Optional[str] = None,
        auth_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.FHRPGroup]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.FHRPGroup: ...
    @overload
    def create(
        self,
        protocol: str,
        group_id: int | int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        auth_type: Optional[str] = None,
        auth_key: Optional[str] = None,
        description: Optional[str] = None,
        ip_addresses: Optional[List[Any]] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.FHRPGroup: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.FHRPGroup: ...
    def update(
        self, objects: Iterable[definitions.FHRPGroup]
    ) -> RecordSet[definitions.FHRPGroup]: ...
    def delete(self, objects: Iterable[definitions.FHRPGroup]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        group_id: Optional[str | int] = None,
        auth_key: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        protocol: Optional[str] = None,
        auth_type: Optional[str] = None,
        related_ip: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group_id__lte: Optional[str] = None,
        group_id__lt: Optional[str] = None,
        group_id__gte: Optional[str] = None,
        group_id__gt: Optional[str] = None,
        auth_key__n: Optional[str] = None,
        auth_key__ic: Optional[str] = None,
        auth_key__nic: Optional[str] = None,
        auth_key__iew: Optional[str] = None,
        auth_key__niew: Optional[str] = None,
        auth_key__isw: Optional[str] = None,
        auth_key__nisw: Optional[str] = None,
        auth_key__ie: Optional[str] = None,
        auth_key__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        protocol__n: Optional[str] = None,
        auth_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Ip_addressesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.IPAddress]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        dns_name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        parent: Optional[str] = None,
        address: Optional[str] = None,
        mask_length: Optional[float] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        present_in_vrf_id: Optional[str | int] = None,
        present_in_vrf: Optional[str] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        interface: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        vminterface: Optional[str] = None,
        vminterface_id: Optional[str | int] = None,
        fhrpgroup_id: Optional[str | int] = None,
        assigned_to_interface: Optional[str] = None,
        status: Optional[str] = None,
        role: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        dns_name__n: Optional[str] = None,
        dns_name__ic: Optional[str] = None,
        dns_name__nic: Optional[str] = None,
        dns_name__iew: Optional[str] = None,
        dns_name__niew: Optional[str] = None,
        dns_name__isw: Optional[str] = None,
        dns_name__nisw: Optional[str] = None,
        dns_name__ie: Optional[str] = None,
        dns_name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        interface__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        vminterface__n: Optional[str] = None,
        vminterface_id__n: Optional[str] = None,
        fhrpgroup_id__n: Optional[str] = None,
        status__n: Optional[str] = None,
        role__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.IPAddress]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        dns_name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        parent: Optional[str] = None,
        address: Optional[str] = None,
        mask_length: Optional[float] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        present_in_vrf_id: Optional[str | int] = None,
        present_in_vrf: Optional[str] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        interface: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        vminterface: Optional[str] = None,
        vminterface_id: Optional[str | int] = None,
        fhrpgroup_id: Optional[str | int] = None,
        assigned_to_interface: Optional[str] = None,
        status: Optional[str] = None,
        role: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        dns_name__n: Optional[str] = None,
        dns_name__ic: Optional[str] = None,
        dns_name__nic: Optional[str] = None,
        dns_name__iew: Optional[str] = None,
        dns_name__niew: Optional[str] = None,
        dns_name__isw: Optional[str] = None,
        dns_name__nisw: Optional[str] = None,
        dns_name__ie: Optional[str] = None,
        dns_name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        interface__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        vminterface__n: Optional[str] = None,
        vminterface_id__n: Optional[str] = None,
        fhrpgroup_id__n: Optional[str] = None,
        status__n: Optional[str] = None,
        role__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.IPAddress]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.IPAddress: ...
    @overload
    def create(
        self,
        address: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        family: Optional[str] = None,
        vrf: Optional[int] = None,
        tenant: Optional[int] = None,
        status: Optional[str] = None,
        role: Optional[str] = None,
        assigned_object_type: Optional[str] = None,
        assigned_object_id: Optional[int | int] = None,
        assigned_object: Optional[Any] = None,
        nat_inside: Optional[int] = None,
        nat_outside: Optional[List[Any]] = None,
        dns_name: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.IPAddress: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.IPAddress: ...
    def update(
        self, objects: Iterable[definitions.IPAddress]
    ) -> RecordSet[definitions.IPAddress]: ...
    def delete(self, objects: Iterable[definitions.IPAddress]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        dns_name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        parent: Optional[str] = None,
        address: Optional[str] = None,
        mask_length: Optional[float] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        present_in_vrf_id: Optional[str | int] = None,
        present_in_vrf: Optional[str] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        interface: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        vminterface: Optional[str] = None,
        vminterface_id: Optional[str | int] = None,
        fhrpgroup_id: Optional[str | int] = None,
        assigned_to_interface: Optional[str] = None,
        status: Optional[str] = None,
        role: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        dns_name__n: Optional[str] = None,
        dns_name__ic: Optional[str] = None,
        dns_name__nic: Optional[str] = None,
        dns_name__iew: Optional[str] = None,
        dns_name__niew: Optional[str] = None,
        dns_name__isw: Optional[str] = None,
        dns_name__nisw: Optional[str] = None,
        dns_name__ie: Optional[str] = None,
        dns_name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        interface__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        vminterface__n: Optional[str] = None,
        vminterface_id__n: Optional[str] = None,
        fhrpgroup_id__n: Optional[str] = None,
        status__n: Optional[str] = None,
        role__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Ip_rangesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.IPRange]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        description: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        family: Optional[float] = None,
        contains: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.IPRange]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        description: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        family: Optional[float] = None,
        contains: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.IPRange]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.IPRange: ...
    @overload
    def create(
        self,
        start_address: str,
        end_address: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        family: Optional[str] = None,
        size: Optional[int] = None,
        vrf: Optional[int] = None,
        tenant: Optional[int] = None,
        status: Optional[str] = None,
        role: Optional[int] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        children: Optional[int] = None,
    ) -> definitions.IPRange: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.IPRange: ...
    def update(
        self, objects: Iterable[definitions.IPRange]
    ) -> RecordSet[definitions.IPRange]: ...
    def delete(self, objects: Iterable[definitions.IPRange]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        description: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        family: Optional[float] = None,
        contains: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class L2vpn_terminationsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.L2VPNTermination]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        assigned_object_type_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        l2vpn_id: Optional[str | int] = None,
        l2vpn: Optional[str] = None,
        region: Optional[str] = None,
        region_id: Optional[str | int] = None,
        site: Optional[str] = None,
        site_id: Optional[str | int] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        interface: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        vminterface: Optional[str] = None,
        vminterface_id: Optional[str | int] = None,
        vlan: Optional[str] = None,
        vlan_vid: Optional[float] = None,
        vlan_id: Optional[str | int] = None,
        assigned_object_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        assigned_object_type_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        l2vpn_id__n: Optional[str] = None,
        l2vpn__n: Optional[str] = None,
        device__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        interface__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        vminterface__n: Optional[str] = None,
        vminterface_id__n: Optional[str] = None,
        vlan__n: Optional[str] = None,
        vlan_vid__n: Optional[float] = None,
        vlan_vid__lte: Optional[float] = None,
        vlan_vid__lt: Optional[float] = None,
        vlan_vid__gte: Optional[float] = None,
        vlan_vid__gt: Optional[float] = None,
        vlan_id__n: Optional[str] = None,
        assigned_object_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.L2VPNTermination]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        assigned_object_type_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        l2vpn_id: Optional[str | int] = None,
        l2vpn: Optional[str] = None,
        region: Optional[str] = None,
        region_id: Optional[str | int] = None,
        site: Optional[str] = None,
        site_id: Optional[str | int] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        interface: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        vminterface: Optional[str] = None,
        vminterface_id: Optional[str | int] = None,
        vlan: Optional[str] = None,
        vlan_vid: Optional[float] = None,
        vlan_id: Optional[str | int] = None,
        assigned_object_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        assigned_object_type_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        l2vpn_id__n: Optional[str] = None,
        l2vpn__n: Optional[str] = None,
        device__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        interface__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        vminterface__n: Optional[str] = None,
        vminterface_id__n: Optional[str] = None,
        vlan__n: Optional[str] = None,
        vlan_vid__n: Optional[float] = None,
        vlan_vid__lte: Optional[float] = None,
        vlan_vid__lt: Optional[float] = None,
        vlan_vid__gte: Optional[float] = None,
        vlan_vid__gt: Optional[float] = None,
        vlan_id__n: Optional[str] = None,
        assigned_object_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.L2VPNTermination]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.L2VPNTermination: ...
    @overload
    def create(
        self,
        l2vpn: int,
        assigned_object_type: str,
        assigned_object_id: int | int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        assigned_object: Optional[Any] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.L2VPNTermination: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.L2VPNTermination: ...
    def update(
        self, objects: Iterable[definitions.L2VPNTermination]
    ) -> RecordSet[definitions.L2VPNTermination]: ...
    def delete(
        self, objects: Iterable[definitions.L2VPNTermination]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        assigned_object_type_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        l2vpn_id: Optional[str | int] = None,
        l2vpn: Optional[str] = None,
        region: Optional[str] = None,
        region_id: Optional[str | int] = None,
        site: Optional[str] = None,
        site_id: Optional[str | int] = None,
        device: Optional[str] = None,
        device_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        interface: Optional[str] = None,
        interface_id: Optional[str | int] = None,
        vminterface: Optional[str] = None,
        vminterface_id: Optional[str | int] = None,
        vlan: Optional[str] = None,
        vlan_vid: Optional[float] = None,
        vlan_id: Optional[str | int] = None,
        assigned_object_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        assigned_object_type_id__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        l2vpn_id__n: Optional[str] = None,
        l2vpn__n: Optional[str] = None,
        device__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        interface__n: Optional[str] = None,
        interface_id__n: Optional[str] = None,
        vminterface__n: Optional[str] = None,
        vminterface_id__n: Optional[str] = None,
        vlan__n: Optional[str] = None,
        vlan_vid__n: Optional[float] = None,
        vlan_vid__lte: Optional[float] = None,
        vlan_vid__lt: Optional[float] = None,
        vlan_vid__gte: Optional[float] = None,
        vlan_vid__gt: Optional[float] = None,
        vlan_id__n: Optional[str] = None,
        assigned_object_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class L2vpnsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.L2VPN]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        identifier: Optional[str] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        type: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        import_target_id: Optional[str | int] = None,
        import_target: Optional[str] = None,
        export_target_id: Optional[str | int] = None,
        export_target: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        identifier__n: Optional[str] = None,
        identifier__lte: Optional[str] = None,
        identifier__lt: Optional[str] = None,
        identifier__gte: Optional[str] = None,
        identifier__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        import_target_id__n: Optional[str] = None,
        import_target__n: Optional[str] = None,
        export_target_id__n: Optional[str] = None,
        export_target__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.L2VPN]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        identifier: Optional[str] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        type: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        import_target_id: Optional[str | int] = None,
        import_target: Optional[str] = None,
        export_target_id: Optional[str | int] = None,
        export_target: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        identifier__n: Optional[str] = None,
        identifier__lte: Optional[str] = None,
        identifier__lt: Optional[str] = None,
        identifier__gte: Optional[str] = None,
        identifier__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        import_target_id__n: Optional[str] = None,
        import_target__n: Optional[str] = None,
        export_target_id__n: Optional[str] = None,
        export_target__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.L2VPN]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.L2VPN: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        type: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        identifier: Optional[int] = None,
        import_targets: Optional[List[Any]] = None,
        export_targets: Optional[List[Any]] = None,
        description: Optional[str] = None,
        tenant: Optional[int] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.L2VPN: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.L2VPN: ...
    def update(
        self, objects: Iterable[definitions.L2VPN]
    ) -> RecordSet[definitions.L2VPN]: ...
    def delete(self, objects: Iterable[definitions.L2VPN]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        identifier: Optional[str] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        type: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        import_target_id: Optional[str | int] = None,
        import_target: Optional[str] = None,
        export_target_id: Optional[str | int] = None,
        export_target: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        identifier__n: Optional[str] = None,
        identifier__lte: Optional[str] = None,
        identifier__lt: Optional[str] = None,
        identifier__gte: Optional[str] = None,
        identifier__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        import_target_id__n: Optional[str] = None,
        import_target__n: Optional[str] = None,
        export_target_id__n: Optional[str] = None,
        export_target__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class PrefixesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Prefix]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        is_pool: Optional[str] = None,
        mark_utilized: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        prefix: Optional[str] = None,
        within: Optional[str] = None,
        within_include: Optional[str] = None,
        contains: Optional[str] = None,
        depth: Optional[str | int] = None,
        children: Optional[str] = None,
        mask_length: Optional[str] = None,
        mask_length__gte: Optional[float] = None,
        mask_length__lte: Optional[float] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        present_in_vrf_id: Optional[str | int] = None,
        present_in_vrf: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        vlan_id: Optional[str | int] = None,
        vlan_vid: Optional[float] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        depth__n: Optional[str] = None,
        depth__lte: Optional[str] = None,
        depth__lt: Optional[str] = None,
        depth__gte: Optional[str] = None,
        depth__gt: Optional[str] = None,
        children__n: Optional[str] = None,
        children__lte: Optional[str] = None,
        children__lt: Optional[str] = None,
        children__gte: Optional[str] = None,
        children__gt: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        vlan_id__n: Optional[str] = None,
        vlan_vid__n: Optional[float] = None,
        vlan_vid__lte: Optional[float] = None,
        vlan_vid__lt: Optional[float] = None,
        vlan_vid__gte: Optional[float] = None,
        vlan_vid__gt: Optional[float] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Prefix]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        is_pool: Optional[str] = None,
        mark_utilized: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        prefix: Optional[str] = None,
        within: Optional[str] = None,
        within_include: Optional[str] = None,
        contains: Optional[str] = None,
        depth: Optional[str | int] = None,
        children: Optional[str] = None,
        mask_length: Optional[str] = None,
        mask_length__gte: Optional[float] = None,
        mask_length__lte: Optional[float] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        present_in_vrf_id: Optional[str | int] = None,
        present_in_vrf: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        vlan_id: Optional[str | int] = None,
        vlan_vid: Optional[float] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        depth__n: Optional[str] = None,
        depth__lte: Optional[str] = None,
        depth__lt: Optional[str] = None,
        depth__gte: Optional[str] = None,
        depth__gt: Optional[str] = None,
        children__n: Optional[str] = None,
        children__lte: Optional[str] = None,
        children__lt: Optional[str] = None,
        children__gte: Optional[str] = None,
        children__gt: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        vlan_id__n: Optional[str] = None,
        vlan_vid__n: Optional[float] = None,
        vlan_vid__lte: Optional[float] = None,
        vlan_vid__lt: Optional[float] = None,
        vlan_vid__gte: Optional[float] = None,
        vlan_vid__gt: Optional[float] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Prefix]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Prefix: ...
    @overload
    def create(
        self,
        prefix: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        family: Optional[str] = None,
        site: Optional[int] = None,
        vrf: Optional[int] = None,
        tenant: Optional[int] = None,
        vlan: Optional[int] = None,
        status: Optional[str] = None,
        role: Optional[int] = None,
        is_pool: Optional[bool] = None,
        mark_utilized: Optional[bool] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        children: Optional[int] = None,
        _depth: Optional[int] = None,
    ) -> definitions.Prefix: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Prefix: ...
    def update(
        self, objects: Iterable[definitions.Prefix]
    ) -> RecordSet[definitions.Prefix]: ...
    def delete(self, objects: Iterable[definitions.Prefix]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        is_pool: Optional[str] = None,
        mark_utilized: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        family: Optional[float] = None,
        prefix: Optional[str] = None,
        within: Optional[str] = None,
        within_include: Optional[str] = None,
        contains: Optional[str] = None,
        depth: Optional[str | int] = None,
        children: Optional[str] = None,
        mask_length: Optional[str] = None,
        mask_length__gte: Optional[float] = None,
        mask_length__lte: Optional[float] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        present_in_vrf_id: Optional[str | int] = None,
        present_in_vrf: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        vlan_id: Optional[str | int] = None,
        vlan_vid: Optional[float] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        depth__n: Optional[str] = None,
        depth__lte: Optional[str] = None,
        depth__lt: Optional[str] = None,
        depth__gte: Optional[str] = None,
        depth__gt: Optional[str] = None,
        children__n: Optional[str] = None,
        children__lte: Optional[str] = None,
        children__lt: Optional[str] = None,
        children__gte: Optional[str] = None,
        children__gt: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        vlan_id__n: Optional[str] = None,
        vlan_vid__n: Optional[float] = None,
        vlan_vid__lte: Optional[float] = None,
        vlan_vid__lt: Optional[float] = None,
        vlan_vid__gte: Optional[float] = None,
        vlan_vid__gt: Optional[float] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class RirsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.RIR]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        is_private: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.RIR]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        is_private: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.RIR]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.RIR: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        is_private: Optional[bool] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        aggregate_count: Optional[int] = None,
    ) -> definitions.RIR: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.RIR: ...
    def update(
        self, objects: Iterable[definitions.RIR]
    ) -> RecordSet[definitions.RIR]: ...
    def delete(self, objects: Iterable[definitions.RIR]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        is_private: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class RolesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Role]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Role]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Role]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Role: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        weight: Optional[int] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        prefix_count: Optional[int] = None,
        vlan_count: Optional[int] = None,
    ) -> definitions.Role: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Role: ...
    def update(
        self, objects: Iterable[definitions.Role]
    ) -> RecordSet[definitions.Role]: ...
    def delete(self, objects: Iterable[definitions.Role]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Route_targetsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.RouteTarget]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        importing_vrf_id: Optional[str | int] = None,
        importing_vrf: Optional[str] = None,
        exporting_vrf_id: Optional[str | int] = None,
        exporting_vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        importing_vrf_id__n: Optional[str] = None,
        importing_vrf__n: Optional[str] = None,
        exporting_vrf_id__n: Optional[str] = None,
        exporting_vrf__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.RouteTarget]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        importing_vrf_id: Optional[str | int] = None,
        importing_vrf: Optional[str] = None,
        exporting_vrf_id: Optional[str | int] = None,
        exporting_vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        importing_vrf_id__n: Optional[str] = None,
        importing_vrf__n: Optional[str] = None,
        exporting_vrf_id__n: Optional[str] = None,
        exporting_vrf__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.RouteTarget]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.RouteTarget: ...
    @overload
    def create(
        self,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        tenant: Optional[int] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.RouteTarget: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.RouteTarget: ...
    def update(
        self, objects: Iterable[definitions.RouteTarget]
    ) -> RecordSet[definitions.RouteTarget]: ...
    def delete(self, objects: Iterable[definitions.RouteTarget]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        importing_vrf_id: Optional[str | int] = None,
        importing_vrf: Optional[str] = None,
        exporting_vrf_id: Optional[str | int] = None,
        exporting_vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        importing_vrf_id__n: Optional[str] = None,
        importing_vrf__n: Optional[str] = None,
        exporting_vrf_id__n: Optional[str] = None,
        exporting_vrf__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Service_templatesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.ServiceTemplate]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        protocol: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        port: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        protocol__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ServiceTemplate]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        protocol: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        port: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        protocol__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ServiceTemplate]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.ServiceTemplate: ...
    @overload
    def create(
        self,
        name: str,
        ports: List[Any],
        protocol: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.ServiceTemplate: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ServiceTemplate: ...
    def update(
        self, objects: Iterable[definitions.ServiceTemplate]
    ) -> RecordSet[definitions.ServiceTemplate]: ...
    def delete(
        self, objects: Iterable[definitions.ServiceTemplate]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        protocol: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        port: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        protocol__n: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class ServicesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Service]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        protocol: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        port: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        protocol__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Service]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        protocol: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        port: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        protocol__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Service]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Service: ...
    @overload
    def create(
        self,
        name: str,
        ports: List[Any],
        protocol: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        device: Optional[int] = None,
        virtual_machine: Optional[int] = None,
        ipaddresses: Optional[List[Any]] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.Service: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.Service: ...
    def update(
        self, objects: Iterable[definitions.Service]
    ) -> RecordSet[definitions.Service]: ...
    def delete(self, objects: Iterable[definitions.Service]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        protocol: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        device_id: Optional[str | int] = None,
        device: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        port: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        protocol__n: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        device_id__n: Optional[str] = None,
        device__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Vlan_groupsEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.VLANGroup]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        min_vid: Optional[str] = None,
        max_vid: Optional[str] = None,
        description: Optional[str] = None,
        scope_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        scope_type: Optional[str] = None,
        region: Optional[float] = None,
        sitegroup: Optional[float] = None,
        site: Optional[float] = None,
        location: Optional[float] = None,
        rack: Optional[float] = None,
        clustergroup: Optional[float] = None,
        cluster: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        min_vid__n: Optional[str] = None,
        min_vid__lte: Optional[str] = None,
        min_vid__lt: Optional[str] = None,
        min_vid__gte: Optional[str] = None,
        min_vid__gt: Optional[str] = None,
        max_vid__n: Optional[str] = None,
        max_vid__lte: Optional[str] = None,
        max_vid__lt: Optional[str] = None,
        max_vid__gte: Optional[str] = None,
        max_vid__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        scope_id__n: Optional[str] = None,
        scope_id__lte: Optional[str] = None,
        scope_id__lt: Optional[str] = None,
        scope_id__gte: Optional[str] = None,
        scope_id__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        scope_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.VLANGroup]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        min_vid: Optional[str] = None,
        max_vid: Optional[str] = None,
        description: Optional[str] = None,
        scope_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        scope_type: Optional[str] = None,
        region: Optional[float] = None,
        sitegroup: Optional[float] = None,
        site: Optional[float] = None,
        location: Optional[float] = None,
        rack: Optional[float] = None,
        clustergroup: Optional[float] = None,
        cluster: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        min_vid__n: Optional[str] = None,
        min_vid__lte: Optional[str] = None,
        min_vid__lt: Optional[str] = None,
        min_vid__gte: Optional[str] = None,
        min_vid__gt: Optional[str] = None,
        max_vid__n: Optional[str] = None,
        max_vid__lte: Optional[str] = None,
        max_vid__lt: Optional[str] = None,
        max_vid__gte: Optional[str] = None,
        max_vid__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        scope_id__n: Optional[str] = None,
        scope_id__lte: Optional[str] = None,
        scope_id__lt: Optional[str] = None,
        scope_id__gte: Optional[str] = None,
        scope_id__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        scope_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.VLANGroup]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.VLANGroup: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        scope_type: Optional[str] = None,
        scope_id: Optional[int | int] = None,
        scope: Optional[Any] = None,
        min_vid: Optional[int] = None,
        max_vid: Optional[int] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        vlan_count: Optional[int] = None,
    ) -> definitions.VLANGroup: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.VLANGroup: ...
    def update(
        self, objects: Iterable[definitions.VLANGroup]
    ) -> RecordSet[definitions.VLANGroup]: ...
    def delete(self, objects: Iterable[definitions.VLANGroup]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        min_vid: Optional[str] = None,
        max_vid: Optional[str] = None,
        description: Optional[str] = None,
        scope_id: Optional[str | int] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        scope_type: Optional[str] = None,
        region: Optional[float] = None,
        sitegroup: Optional[float] = None,
        site: Optional[float] = None,
        location: Optional[float] = None,
        rack: Optional[float] = None,
        clustergroup: Optional[float] = None,
        cluster: Optional[float] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        min_vid__n: Optional[str] = None,
        min_vid__lte: Optional[str] = None,
        min_vid__lt: Optional[str] = None,
        min_vid__gte: Optional[str] = None,
        min_vid__gt: Optional[str] = None,
        max_vid__n: Optional[str] = None,
        max_vid__lte: Optional[str] = None,
        max_vid__lt: Optional[str] = None,
        max_vid__gte: Optional[str] = None,
        max_vid__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        scope_id__n: Optional[str] = None,
        scope_id__lte: Optional[str] = None,
        scope_id__lt: Optional[str] = None,
        scope_id__gte: Optional[str] = None,
        scope_id__gt: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        scope_type__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class VlansEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.VLAN]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        vid: Optional[str] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        available_on_device: Optional[str] = None,
        available_on_virtualmachine: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        vid__n: Optional[str] = None,
        vid__lte: Optional[str] = None,
        vid__lt: Optional[str] = None,
        vid__gte: Optional[str] = None,
        vid__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.VLAN]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        vid: Optional[str] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        available_on_device: Optional[str] = None,
        available_on_virtualmachine: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        vid__n: Optional[str] = None,
        vid__lte: Optional[str] = None,
        vid__lt: Optional[str] = None,
        vid__gte: Optional[str] = None,
        vid__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.VLAN]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.VLAN: ...
    @overload
    def create(
        self,
        group: int,
        vid: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        site: Optional[int] = None,
        tenant: Optional[int] = None,
        status: Optional[str] = None,
        role: Optional[int] = None,
        description: Optional[str] = None,
        l2vpn_termination: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        prefix_count: Optional[int] = None,
    ) -> definitions.VLAN: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.VLAN: ...
    def update(
        self, objects: Iterable[definitions.VLAN]
    ) -> RecordSet[definitions.VLAN]: ...
    def delete(self, objects: Iterable[definitions.VLAN]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        vid: Optional[str] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        status: Optional[str] = None,
        available_on_device: Optional[str] = None,
        available_on_virtualmachine: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        vid__n: Optional[str] = None,
        vid__lte: Optional[str] = None,
        vid__lt: Optional[str] = None,
        vid__gte: Optional[str] = None,
        vid__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        status__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class VrfsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.VRF]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        rd: Optional[str] = None,
        enforce_unique: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        import_target_id: Optional[str | int] = None,
        import_target: Optional[str] = None,
        export_target_id: Optional[str | int] = None,
        export_target: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        rd__n: Optional[str] = None,
        rd__ic: Optional[str] = None,
        rd__nic: Optional[str] = None,
        rd__iew: Optional[str] = None,
        rd__niew: Optional[str] = None,
        rd__isw: Optional[str] = None,
        rd__nisw: Optional[str] = None,
        rd__ie: Optional[str] = None,
        rd__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        import_target_id__n: Optional[str] = None,
        import_target__n: Optional[str] = None,
        export_target_id__n: Optional[str] = None,
        export_target__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
        **kwargs: Optional[Any],
    ) -> Optional[definitions.VRF]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        rd: Optional[str] = None,
        enforce_unique: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        import_target_id: Optional[str | int] = None,
        import_target: Optional[str] = None,
        export_target_id: Optional[str | int] = None,
        export_target: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        rd__n: Optional[str] = None,
        rd__ic: Optional[str] = None,
        rd__nic: Optional[str] = None,
        rd__iew: Optional[str] = None,
        rd__niew: Optional[str] = None,
        rd__isw: Optional[str] = None,
        rd__nisw: Optional[str] = None,
        rd__ie: Optional[str] = None,
        rd__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        import_target_id__n: Optional[str] = None,
        import_target__n: Optional[str] = None,
        export_target_id__n: Optional[str] = None,
        export_target__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
        **kwargs: Optional[Any],
    ) -> RecordSet[definitions.VRF]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.VRF: ...
    @overload
    def create(
        self,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        rd: Optional[str] = None,
        tenant: Optional[int] = None,
        enforce_unique: Optional[bool] = None,
        description: Optional[str] = None,
        import_targets: Optional[List[Any]] = None,
        export_targets: Optional[List[Any]] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        ipaddress_count: Optional[int] = None,
        prefix_count: Optional[int] = None,
    ) -> definitions.VRF: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.VRF: ...
    def update(
        self, objects: Iterable[definitions.VRF]
    ) -> RecordSet[definitions.VRF]: ...
    def delete(self, objects: Iterable[definitions.VRF]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        rd: Optional[str] = None,
        enforce_unique: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        import_target_id: Optional[str | int] = None,
        import_target: Optional[str] = None,
        export_target_id: Optional[str | int] = None,
        export_target: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        rd__n: Optional[str] = None,
        rd__ic: Optional[str] = None,
        rd__nic: Optional[str] = None,
        rd__iew: Optional[str] = None,
        rd__niew: Optional[str] = None,
        rd__isw: Optional[str] = None,
        rd__nisw: Optional[str] = None,
        rd__ie: Optional[str] = None,
        rd__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        created__n: Optional[str] = None,
        created__lte: Optional[str] = None,
        created__lt: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__gt: Optional[str] = None,
        last_updated__n: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        last_updated__lt: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        import_target_id__n: Optional[str] = None,
        import_target__n: Optional[str] = None,
        export_target_id__n: Optional[str] = None,
        export_target__n: Optional[str] = None,
        ordering: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class IpamApp(App):
    def __init__(self, api: 'Api', name):
        self.aggregates: AggregatesEndpoint = ...
        self.asns: AsnsEndpoint = ...
        self.fhrp_group_assignments: Fhrp_group_assignmentsEndpoint = ...
        self.fhrp_groups: Fhrp_groupsEndpoint = ...
        self.ip_addresses: Ip_addressesEndpoint = ...
        self.ip_ranges: Ip_rangesEndpoint = ...
        self.l2vpn_terminations: L2vpn_terminationsEndpoint = ...
        self.l2vpns: L2vpnsEndpoint = ...
        self.prefixes: PrefixesEndpoint = ...
        self.rirs: RirsEndpoint = ...
        self.roles: RolesEndpoint = ...
        self.route_targets: Route_targetsEndpoint = ...
        self.service_templates: Service_templatesEndpoint = ...
        self.services: ServicesEndpoint = ...
        self.vlan_groups: Vlan_groupsEndpoint = ...
        self.vlans: VlansEndpoint = ...
        self.vrfs: VrfsEndpoint = ...
