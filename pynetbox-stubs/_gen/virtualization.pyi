from typing import Any, Dict, Iterable, List, Optional, Union, overload

from pynetbox._gen import definitions
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import Record, RecordSet

class Cluster_groupsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ClusterGroup]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ClusterGroup]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ClusterGroup]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.ClusterGroup: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        cluster_count: Optional[int] = None,
    ) -> definitions.ClusterGroup: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ClusterGroup: ...
    def update(
        self, objects: Iterable[definitions.ClusterGroup]
    ) -> RecordSet[definitions.ClusterGroup]: ...
    def delete(self, objects: Iterable[definitions.ClusterGroup]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Cluster_typesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ClusterType]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ClusterType]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ClusterType]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.ClusterType: ...
    @overload
    def create(
        self,
        name: str,
        slug: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        description: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        cluster_count: Optional[int] = None,
    ) -> definitions.ClusterType: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.ClusterType: ...
    def update(
        self, objects: Iterable[definitions.ClusterType]
    ) -> RecordSet[definitions.ClusterType]: ...
    def delete(self, objects: Iterable[definitions.ClusterType]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class ClustersEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Cluster]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        type_id: Optional[str | int] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        type_id__n: Optional[str] = None,
        type__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Cluster]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        type_id: Optional[str | int] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        type_id__n: Optional[str] = None,
        type__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Cluster]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.Cluster: ...
    @overload
    def create(
        self,
        name: str,
        type: int,
        group: int,
        site: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        tenant: Optional[int] = None,
        comments: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        device_count: Optional[int] = None,
        virtualmachine_count: Optional[int] = None,
    ) -> definitions.Cluster: ...
    def create(self, *args: Dict[str, Any], **kwargs: Any) -> definitions.Cluster: ...
    def update(
        self, objects: Iterable[definitions.Cluster]
    ) -> RecordSet[definitions.Cluster]: ...
    def delete(self, objects: Iterable[definitions.Cluster]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        group_id: Optional[str | int] = None,
        group: Optional[str] = None,
        type_id: Optional[str | int] = None,
        type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        group_id__n: Optional[str] = None,
        group__n: Optional[str] = None,
        type_id__n: Optional[str] = None,
        type__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class InterfacesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.VMInterface]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        enabled: Optional[str] = None,
        mtu: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        cluster_id: Optional[str | int] = None,
        cluster: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        bridge_id: Optional[str | int] = None,
        mac_address: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        mtu__n: Optional[str] = None,
        mtu__lte: Optional[str] = None,
        mtu__lt: Optional[str] = None,
        mtu__gte: Optional[str] = None,
        mtu__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        cluster__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        bridge_id__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.VMInterface]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        enabled: Optional[str] = None,
        mtu: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        cluster_id: Optional[str | int] = None,
        cluster: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        bridge_id: Optional[str | int] = None,
        mac_address: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        mtu__n: Optional[str] = None,
        mtu__lte: Optional[str] = None,
        mtu__lt: Optional[str] = None,
        mtu__gte: Optional[str] = None,
        mtu__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        cluster__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        bridge_id__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.VMInterface]: ...
    @overload
    def create(self, *args: Dict[str, Any]) -> definitions.VMInterface: ...
    @overload
    def create(
        self,
        virtual_machine: int,
        name: str,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        enabled: Optional[bool] = None,
        parent: Optional[int] = None,
        bridge: Optional[int] = None,
        mtu: Optional[int] = None,
        mac_address: Optional[str] = None,
        description: Optional[str] = None,
        mode: Optional[str] = None,
        untagged_vlan: Optional[int] = None,
        tagged_vlans: Optional[List[Any]] = None,
        vrf: Optional[int] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
        count_ipaddresses: Optional[int] = None,
        count_fhrp_groups: Optional[int] = None,
    ) -> definitions.VMInterface: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.VMInterface: ...
    def update(
        self, objects: Iterable[definitions.VMInterface]
    ) -> RecordSet[definitions.VMInterface]: ...
    def delete(self, objects: Iterable[definitions.VMInterface]) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        enabled: Optional[str] = None,
        mtu: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        cluster_id: Optional[str | int] = None,
        cluster: Optional[str] = None,
        virtual_machine_id: Optional[str | int] = None,
        virtual_machine: Optional[str] = None,
        parent_id: Optional[str | int] = None,
        bridge_id: Optional[str | int] = None,
        mac_address: Optional[str] = None,
        vrf_id: Optional[str | int] = None,
        vrf: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        mtu__n: Optional[str] = None,
        mtu__lte: Optional[str] = None,
        mtu__lt: Optional[str] = None,
        mtu__gte: Optional[str] = None,
        mtu__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        tag__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        cluster__n: Optional[str] = None,
        virtual_machine_id__n: Optional[str] = None,
        virtual_machine__n: Optional[str] = None,
        parent_id__n: Optional[str] = None,
        bridge_id__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        vrf_id__n: Optional[str] = None,
        vrf__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Virtual_machinesEndpoint(Endpoint):
    def all(
        self, limit=0, offset=None
    ) -> RecordSet[definitions.VirtualMachineWithConfigContext]: ...
    def get(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        cluster: Optional[str] = None,
        vcpus: Optional[str] = None,
        memory: Optional[str] = None,
        disk: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        local_context_data: Optional[str] = None,
        status: Optional[str] = None,
        cluster_group_id: Optional[str | int] = None,
        cluster_group: Optional[str] = None,
        cluster_type_id: Optional[str | int] = None,
        cluster_type: Optional[str] = None,
        cluster_id: Optional[str | int] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        platform_id: Optional[str | int] = None,
        platform: Optional[str] = None,
        mac_address: Optional[str] = None,
        has_primary_ip: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        cluster__n: Optional[str] = None,
        vcpus__n: Optional[str] = None,
        vcpus__lte: Optional[str] = None,
        vcpus__lt: Optional[str] = None,
        vcpus__gte: Optional[str] = None,
        vcpus__gt: Optional[str] = None,
        memory__n: Optional[str] = None,
        memory__lte: Optional[str] = None,
        memory__lt: Optional[str] = None,
        memory__gte: Optional[str] = None,
        memory__gt: Optional[str] = None,
        disk__n: Optional[str] = None,
        disk__lte: Optional[str] = None,
        disk__lt: Optional[str] = None,
        disk__gte: Optional[str] = None,
        disk__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        status__n: Optional[str] = None,
        cluster_group_id__n: Optional[str] = None,
        cluster_group__n: Optional[str] = None,
        cluster_type_id__n: Optional[str] = None,
        cluster_type__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.VirtualMachineWithConfigContext]: ...
    def filter(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        cluster: Optional[str] = None,
        vcpus: Optional[str] = None,
        memory: Optional[str] = None,
        disk: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        local_context_data: Optional[str] = None,
        status: Optional[str] = None,
        cluster_group_id: Optional[str | int] = None,
        cluster_group: Optional[str] = None,
        cluster_type_id: Optional[str | int] = None,
        cluster_type: Optional[str] = None,
        cluster_id: Optional[str | int] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        platform_id: Optional[str | int] = None,
        platform: Optional[str] = None,
        mac_address: Optional[str] = None,
        has_primary_ip: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        cluster__n: Optional[str] = None,
        vcpus__n: Optional[str] = None,
        vcpus__lte: Optional[str] = None,
        vcpus__lt: Optional[str] = None,
        vcpus__gte: Optional[str] = None,
        vcpus__gt: Optional[str] = None,
        memory__n: Optional[str] = None,
        memory__lte: Optional[str] = None,
        memory__lt: Optional[str] = None,
        memory__gte: Optional[str] = None,
        memory__gt: Optional[str] = None,
        disk__n: Optional[str] = None,
        disk__lte: Optional[str] = None,
        disk__lt: Optional[str] = None,
        disk__gte: Optional[str] = None,
        disk__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        status__n: Optional[str] = None,
        cluster_group_id__n: Optional[str] = None,
        cluster_group__n: Optional[str] = None,
        cluster_type_id__n: Optional[str] = None,
        cluster_type__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.VirtualMachineWithConfigContext]: ...
    @overload
    def create(
        self, *args: Dict[str, Any]
    ) -> definitions.VirtualMachineWithConfigContext: ...
    @overload
    def create(
        self,
        name: str,
        cluster: int,
        id: Optional[int | int] = None,
        url: Optional[str] = None,
        display: Optional[str] = None,
        status: Optional[str] = None,
        site: Optional[str] = None,
        role: Optional[int] = None,
        tenant: Optional[int] = None,
        platform: Optional[int] = None,
        primary_ip: Optional[str] = None,
        primary_ip4: Optional[int] = None,
        primary_ip6: Optional[int] = None,
        vcpus: Optional[float] = None,
        memory: Optional[int] = None,
        disk: Optional[int] = None,
        comments: Optional[str] = None,
        local_context_data: Optional[str] = None,
        tags: Optional[List[Any]] = None,
        custom_fields: Optional[Any] = None,
        config_context: Optional[Any] = None,
        created: Optional[str] = None,
        last_updated: Optional[str] = None,
    ) -> definitions.VirtualMachineWithConfigContext: ...
    def create(
        self, *args: Dict[str, Any], **kwargs: Any
    ) -> definitions.VirtualMachineWithConfigContext: ...
    def update(
        self, objects: Iterable[definitions.VirtualMachineWithConfigContext]
    ) -> RecordSet[definitions.VirtualMachineWithConfigContext]: ...
    def delete(
        self, objects: Iterable[definitions.VirtualMachineWithConfigContext]
    ) -> bool: ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str | int] = None,
        name: Optional[str] = None,
        cluster: Optional[str] = None,
        vcpus: Optional[str] = None,
        memory: Optional[str] = None,
        disk: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        tenant_group_id: Optional[str | int] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str | int] = None,
        tenant: Optional[str] = None,
        contact: Optional[str] = None,
        contact_role: Optional[str] = None,
        contact_group: Optional[str] = None,
        local_context_data: Optional[str] = None,
        status: Optional[str] = None,
        cluster_group_id: Optional[str | int] = None,
        cluster_group: Optional[str] = None,
        cluster_type_id: Optional[str | int] = None,
        cluster_type: Optional[str] = None,
        cluster_id: Optional[str | int] = None,
        region_id: Optional[str | int] = None,
        region: Optional[str] = None,
        site_group_id: Optional[str | int] = None,
        site_group: Optional[str] = None,
        site_id: Optional[str | int] = None,
        site: Optional[str] = None,
        role_id: Optional[str | int] = None,
        role: Optional[str] = None,
        platform_id: Optional[str | int] = None,
        platform: Optional[str] = None,
        mac_address: Optional[str] = None,
        has_primary_ip: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        cluster__n: Optional[str] = None,
        vcpus__n: Optional[str] = None,
        vcpus__lte: Optional[str] = None,
        vcpus__lt: Optional[str] = None,
        vcpus__gte: Optional[str] = None,
        vcpus__gt: Optional[str] = None,
        memory__n: Optional[str] = None,
        memory__lte: Optional[str] = None,
        memory__lt: Optional[str] = None,
        memory__gte: Optional[str] = None,
        memory__gt: Optional[str] = None,
        disk__n: Optional[str] = None,
        disk__lte: Optional[str] = None,
        disk__lt: Optional[str] = None,
        disk__gte: Optional[str] = None,
        disk__gt: Optional[str] = None,
        tag__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        contact__n: Optional[str] = None,
        contact_role__n: Optional[str] = None,
        contact_group__n: Optional[str] = None,
        status__n: Optional[str] = None,
        cluster_group_id__n: Optional[str] = None,
        cluster_group__n: Optional[str] = None,
        cluster_type_id__n: Optional[str] = None,
        cluster_type__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        mac_address__n: Optional[str] = None,
        mac_address__ic: Optional[str] = None,
        mac_address__nic: Optional[str] = None,
        mac_address__iew: Optional[str] = None,
        mac_address__niew: Optional[str] = None,
        mac_address__isw: Optional[str] = None,
        mac_address__nisw: Optional[str] = None,
        mac_address__ie: Optional[str] = None,
        mac_address__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class VirtualizationApp(App):
    def __init__(self, api: "Api", name):
        self.cluster_groups: Cluster_groupsEndpoint = ...
        self.cluster_types: Cluster_typesEndpoint = ...
        self.clusters: ClustersEndpoint = ...
        self.interfaces: InterfacesEndpoint = ...
        self.virtual_machines: Virtual_machinesEndpoint = ...
