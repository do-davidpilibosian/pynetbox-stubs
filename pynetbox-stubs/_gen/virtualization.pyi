
from typing import Any, Dict, List, Optional, Union, Iterable
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record
from pynetbox._get import definitions

class Cluster_groupsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Cluster_groupsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Cluster_groupsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Cluster_groupsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Cluster_groupsEndpoint: ...
    def update(self, objects: Iterable[definitions.Cluster_groupsEndpoint]) -> [definitions.Cluster_groupsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Cluster_groupsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Cluster_typesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Cluster_typesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Cluster_typesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Cluster_typesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Cluster_typesEndpoint: ...
    def update(self, objects: Iterable[definitions.Cluster_typesEndpoint]) -> [definitions.Cluster_typesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Cluster_typesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class ClustersEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ClustersEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], group_id: Optional[str], group: Optional[str], type_id: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], type_id__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ClustersEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], group_id: Optional[str], group: Optional[str], type_id: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], type_id__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.ClustersEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], group_id: Optional[str], group: Optional[str], type_id: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], type_id__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ClustersEndpoint: ...
    def update(self, objects: Iterable[definitions.ClustersEndpoint]) -> [definitions.ClustersEndpoint]: ...
    def delete(self, objects: Iterable[definitions.ClustersEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], group_id: Optional[str], group: Optional[str], type_id: Optional[str], type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], type_id__n: Optional[str], type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class InterfacesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.InterfacesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], enabled: Optional[str], mtu: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cluster_id: Optional[str], cluster: Optional[str], virtual_machine_id: Optional[str], virtual_machine: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], mac_address: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], cluster_id__n: Optional[str], cluster__n: Optional[str], virtual_machine_id__n: Optional[str], virtual_machine__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.InterfacesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], enabled: Optional[str], mtu: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cluster_id: Optional[str], cluster: Optional[str], virtual_machine_id: Optional[str], virtual_machine: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], mac_address: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], cluster_id__n: Optional[str], cluster__n: Optional[str], virtual_machine_id__n: Optional[str], virtual_machine__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.InterfacesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], enabled: Optional[str], mtu: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cluster_id: Optional[str], cluster: Optional[str], virtual_machine_id: Optional[str], virtual_machine: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], mac_address: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], cluster_id__n: Optional[str], cluster__n: Optional[str], virtual_machine_id__n: Optional[str], virtual_machine__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.InterfacesEndpoint: ...
    def update(self, objects: Iterable[definitions.InterfacesEndpoint]) -> [definitions.InterfacesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.InterfacesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], enabled: Optional[str], mtu: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], cluster_id: Optional[str], cluster: Optional[str], virtual_machine_id: Optional[str], virtual_machine: Optional[str], parent_id: Optional[str], bridge_id: Optional[str], mac_address: Optional[str], vrf_id: Optional[str], vrf: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], mtu__n: Optional[str], mtu__lte: Optional[str], mtu__lt: Optional[str], mtu__gte: Optional[str], mtu__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], cluster_id__n: Optional[str], cluster__n: Optional[str], virtual_machine_id__n: Optional[str], virtual_machine__n: Optional[str], parent_id__n: Optional[str], bridge_id__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], vrf_id__n: Optional[str], vrf__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Virtual_machinesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Virtual_machinesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], cluster: Optional[str], vcpus: Optional[str], memory: Optional[str], disk: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], status: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_id: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], mac_address: Optional[str], has_primary_ip: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], cluster__n: Optional[str], vcpus__n: Optional[str], vcpus__lte: Optional[str], vcpus__lt: Optional[str], vcpus__gte: Optional[str], vcpus__gt: Optional[str], memory__n: Optional[str], memory__lte: Optional[str], memory__lt: Optional[str], memory__gte: Optional[str], memory__gt: Optional[str], disk__n: Optional[str], disk__lte: Optional[str], disk__lt: Optional[str], disk__gte: Optional[str], disk__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_id__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Virtual_machinesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], cluster: Optional[str], vcpus: Optional[str], memory: Optional[str], disk: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], status: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_id: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], mac_address: Optional[str], has_primary_ip: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], cluster__n: Optional[str], vcpus__n: Optional[str], vcpus__lte: Optional[str], vcpus__lt: Optional[str], vcpus__gte: Optional[str], vcpus__gt: Optional[str], memory__n: Optional[str], memory__lte: Optional[str], memory__lt: Optional[str], memory__gte: Optional[str], memory__gt: Optional[str], disk__n: Optional[str], disk__lte: Optional[str], disk__lt: Optional[str], disk__gte: Optional[str], disk__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_id__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Virtual_machinesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], cluster: Optional[str], vcpus: Optional[str], memory: Optional[str], disk: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], status: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_id: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], mac_address: Optional[str], has_primary_ip: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], cluster__n: Optional[str], vcpus__n: Optional[str], vcpus__lte: Optional[str], vcpus__lt: Optional[str], vcpus__gte: Optional[str], vcpus__gt: Optional[str], memory__n: Optional[str], memory__lte: Optional[str], memory__lt: Optional[str], memory__gte: Optional[str], memory__gt: Optional[str], disk__n: Optional[str], disk__lte: Optional[str], disk__lt: Optional[str], disk__gte: Optional[str], disk__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_id__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Virtual_machinesEndpoint: ...
    def update(self, objects: Iterable[definitions.Virtual_machinesEndpoint]) -> [definitions.Virtual_machinesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Virtual_machinesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], cluster: Optional[str], vcpus: Optional[str], memory: Optional[str], disk: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], local_context_data: Optional[str], status: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_id: Optional[str], region_id: Optional[str], region: Optional[str], site_group_id: Optional[str], site_group: Optional[str], site_id: Optional[str], site: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], mac_address: Optional[str], has_primary_ip: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], cluster__n: Optional[str], vcpus__n: Optional[str], vcpus__lte: Optional[str], vcpus__lt: Optional[str], vcpus__gte: Optional[str], vcpus__gt: Optional[str], memory__n: Optional[str], memory__lte: Optional[str], memory__lt: Optional[str], memory__gte: Optional[str], memory__gt: Optional[str], disk__n: Optional[str], disk__lte: Optional[str], disk__lt: Optional[str], disk__gte: Optional[str], disk__gt: Optional[str], tag__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], status__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_id__n: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group_id__n: Optional[str], site_group__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], mac_address__n: Optional[str], mac_address__ic: Optional[str], mac_address__nic: Optional[str], mac_address__iew: Optional[str], mac_address__niew: Optional[str], mac_address__isw: Optional[str], mac_address__nisw: Optional[str], mac_address__ie: Optional[str], mac_address__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...

class VirtualizationApp(App):
    def __init__(self, api: 'Api', name):
        self.cluster_groups: Cluster_groupsEndpoint = ...
        self.cluster_types: Cluster_typesEndpoint = ...
        self.clusters: ClustersEndpoint = ...
        self.interfaces: InterfacesEndpoint = ...
        self.virtual_machines: Virtual_machinesEndpoint = ...