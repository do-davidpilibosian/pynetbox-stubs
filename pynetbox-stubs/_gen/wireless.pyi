
from typing import Any, Dict, List, Optional, Union, Iterable
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record

class Wireless_lan_groupsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Wireless_lan_groupsEndpointRecord]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Wireless_lan_groupsEndpointRecord: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Wireless_lan_groupsEndpointRecord: ...
    def update(self, objects: Iterable[Wireless_lan_groupsEndpointRecord]) -> [Wireless_lan_groupsEndpointRecord]: ...
    def delete(self, objects: Iterable[Wireless_lan_groupsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Wireless_lansEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Wireless_lansEndpointRecord]: ...
    def get(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], vlan_id: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], vlan_id__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Wireless_lansEndpointRecord: ...
    def filter(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], vlan_id: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], vlan_id__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], vlan_id: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], vlan_id__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Wireless_lansEndpointRecord: ...
    def update(self, objects: Iterable[Wireless_lansEndpointRecord]) -> [Wireless_lansEndpointRecord]: ...
    def delete(self, objects: Iterable[Wireless_lansEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], vlan_id: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], vlan_id__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Wireless_linksEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Wireless_linksEndpointRecord]: ...
    def get(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], interface_a_id: Optional[str], interface_b_id: Optional[str], status: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], interface_a_id__n: Optional[str], interface_a_id__lte: Optional[str], interface_a_id__lt: Optional[str], interface_a_id__gte: Optional[str], interface_a_id__gt: Optional[str], interface_b_id__n: Optional[str], interface_b_id__lte: Optional[str], interface_b_id__lt: Optional[str], interface_b_id__gte: Optional[str], interface_b_id__gt: Optional[str], status__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Wireless_linksEndpointRecord: ...
    def filter(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], interface_a_id: Optional[str], interface_b_id: Optional[str], status: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], interface_a_id__n: Optional[str], interface_a_id__lte: Optional[str], interface_a_id__lt: Optional[str], interface_a_id__gte: Optional[str], interface_a_id__gt: Optional[str], interface_b_id__n: Optional[str], interface_b_id__lte: Optional[str], interface_b_id__lt: Optional[str], interface_b_id__gte: Optional[str], interface_b_id__gt: Optional[str], status__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], interface_a_id: Optional[str], interface_b_id: Optional[str], status: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], interface_a_id__n: Optional[str], interface_a_id__lte: Optional[str], interface_a_id__lt: Optional[str], interface_a_id__gte: Optional[str], interface_a_id__gt: Optional[str], interface_b_id__n: Optional[str], interface_b_id__lte: Optional[str], interface_b_id__lt: Optional[str], interface_b_id__gte: Optional[str], interface_b_id__gt: Optional[str], status__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Wireless_linksEndpointRecord: ...
    def update(self, objects: Iterable[Wireless_linksEndpointRecord]) -> [Wireless_linksEndpointRecord]: ...
    def delete(self, objects: Iterable[Wireless_linksEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], ssid: Optional[str], auth_psk: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], interface_a_id: Optional[str], interface_b_id: Optional[str], status: Optional[str], auth_type: Optional[str], auth_cipher: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], ssid__n: Optional[str], ssid__ic: Optional[str], ssid__nic: Optional[str], ssid__iew: Optional[str], ssid__niew: Optional[str], ssid__isw: Optional[str], ssid__nisw: Optional[str], ssid__ie: Optional[str], ssid__nie: Optional[str], auth_psk__n: Optional[str], auth_psk__ic: Optional[str], auth_psk__nic: Optional[str], auth_psk__iew: Optional[str], auth_psk__niew: Optional[str], auth_psk__isw: Optional[str], auth_psk__nisw: Optional[str], auth_psk__ie: Optional[str], auth_psk__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], interface_a_id__n: Optional[str], interface_a_id__lte: Optional[str], interface_a_id__lt: Optional[str], interface_a_id__gte: Optional[str], interface_a_id__gt: Optional[str], interface_b_id__n: Optional[str], interface_b_id__lte: Optional[str], interface_b_id__lt: Optional[str], interface_b_id__gte: Optional[str], interface_b_id__gt: Optional[str], status__n: Optional[str], auth_type__n: Optional[str], auth_cipher__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...

class WirelessApp(App):
    def __init__(self, api: 'Api', name):
        self.wireless_lan_groups: Wireless_lan_groupsEndpoint = ...
        self.wireless_lans: Wireless_lansEndpoint = ...
        self.wireless_links: Wireless_linksEndpoint = ...