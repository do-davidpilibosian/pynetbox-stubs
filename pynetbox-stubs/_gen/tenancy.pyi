
from typing import Any, Dict, List, Optional, Union, Iterable
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record
from pynetbox._get import definitions

class Contact_assignmentsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Contact_assignmentsEndpoint]: ...
    def get(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], content_type: Optional[str], contact_id: Optional[str], role_id: Optional[str], role: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], priority__n: Optional[str], content_type__n: Optional[str], contact_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Contact_assignmentsEndpoint: ...
    def filter(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], content_type: Optional[str], contact_id: Optional[str], role_id: Optional[str], role: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], priority__n: Optional[str], content_type__n: Optional[str], contact_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Contact_assignmentsEndpoint]: ...
    def create(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], content_type: Optional[str], contact_id: Optional[str], role_id: Optional[str], role: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], priority__n: Optional[str], content_type__n: Optional[str], contact_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Contact_assignmentsEndpoint: ...
    def update(self, objects: Iterable[definitions.Contact_assignmentsEndpoint]) -> [definitions.Contact_assignmentsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Contact_assignmentsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], priority: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], content_type: Optional[str], contact_id: Optional[str], role_id: Optional[str], role: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], priority__n: Optional[str], content_type__n: Optional[str], contact_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Contact_groupsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Contact_groupsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Contact_groupsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Contact_groupsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Contact_groupsEndpoint: ...
    def update(self, objects: Iterable[definitions.Contact_groupsEndpoint]) -> [definitions.Contact_groupsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Contact_groupsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Contact_rolesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Contact_rolesEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Contact_rolesEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Contact_rolesEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Contact_rolesEndpoint: ...
    def update(self, objects: Iterable[definitions.Contact_rolesEndpoint]) -> [definitions.Contact_rolesEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Contact_rolesEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class ContactsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ContactsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], title: Optional[str], phone: Optional[str], email: Optional[str], address: Optional[str], link: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], title__n: Optional[str], title__ic: Optional[str], title__nic: Optional[str], title__iew: Optional[str], title__niew: Optional[str], title__isw: Optional[str], title__nisw: Optional[str], title__ie: Optional[str], title__nie: Optional[str], phone__n: Optional[str], phone__ic: Optional[str], phone__nic: Optional[str], phone__iew: Optional[str], phone__niew: Optional[str], phone__isw: Optional[str], phone__nisw: Optional[str], phone__ie: Optional[str], phone__nie: Optional[str], email__n: Optional[str], email__ic: Optional[str], email__nic: Optional[str], email__iew: Optional[str], email__niew: Optional[str], email__isw: Optional[str], email__nisw: Optional[str], email__ie: Optional[str], email__nie: Optional[str], address__n: Optional[str], address__ic: Optional[str], address__nic: Optional[str], address__iew: Optional[str], address__niew: Optional[str], address__isw: Optional[str], address__nisw: Optional[str], address__ie: Optional[str], address__nie: Optional[str], link__n: Optional[str], link__ic: Optional[str], link__nic: Optional[str], link__iew: Optional[str], link__niew: Optional[str], link__isw: Optional[str], link__nisw: Optional[str], link__ie: Optional[str], link__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ContactsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], title: Optional[str], phone: Optional[str], email: Optional[str], address: Optional[str], link: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], title__n: Optional[str], title__ic: Optional[str], title__nic: Optional[str], title__iew: Optional[str], title__niew: Optional[str], title__isw: Optional[str], title__nisw: Optional[str], title__ie: Optional[str], title__nie: Optional[str], phone__n: Optional[str], phone__ic: Optional[str], phone__nic: Optional[str], phone__iew: Optional[str], phone__niew: Optional[str], phone__isw: Optional[str], phone__nisw: Optional[str], phone__ie: Optional[str], phone__nie: Optional[str], email__n: Optional[str], email__ic: Optional[str], email__nic: Optional[str], email__iew: Optional[str], email__niew: Optional[str], email__isw: Optional[str], email__nisw: Optional[str], email__ie: Optional[str], email__nie: Optional[str], address__n: Optional[str], address__ic: Optional[str], address__nic: Optional[str], address__iew: Optional[str], address__niew: Optional[str], address__isw: Optional[str], address__nisw: Optional[str], address__ie: Optional[str], address__nie: Optional[str], link__n: Optional[str], link__ic: Optional[str], link__nic: Optional[str], link__iew: Optional[str], link__niew: Optional[str], link__isw: Optional[str], link__nisw: Optional[str], link__ie: Optional[str], link__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.ContactsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], title: Optional[str], phone: Optional[str], email: Optional[str], address: Optional[str], link: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], title__n: Optional[str], title__ic: Optional[str], title__nic: Optional[str], title__iew: Optional[str], title__niew: Optional[str], title__isw: Optional[str], title__nisw: Optional[str], title__ie: Optional[str], title__nie: Optional[str], phone__n: Optional[str], phone__ic: Optional[str], phone__nic: Optional[str], phone__iew: Optional[str], phone__niew: Optional[str], phone__isw: Optional[str], phone__nisw: Optional[str], phone__ie: Optional[str], phone__nie: Optional[str], email__n: Optional[str], email__ic: Optional[str], email__nic: Optional[str], email__iew: Optional[str], email__niew: Optional[str], email__isw: Optional[str], email__nisw: Optional[str], email__ie: Optional[str], email__nie: Optional[str], address__n: Optional[str], address__ic: Optional[str], address__nic: Optional[str], address__iew: Optional[str], address__niew: Optional[str], address__isw: Optional[str], address__nisw: Optional[str], address__ie: Optional[str], address__nie: Optional[str], link__n: Optional[str], link__ic: Optional[str], link__nic: Optional[str], link__iew: Optional[str], link__niew: Optional[str], link__isw: Optional[str], link__nisw: Optional[str], link__ie: Optional[str], link__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.ContactsEndpoint: ...
    def update(self, objects: Iterable[definitions.ContactsEndpoint]) -> [definitions.ContactsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.ContactsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], title: Optional[str], phone: Optional[str], email: Optional[str], address: Optional[str], link: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], title__n: Optional[str], title__ic: Optional[str], title__nic: Optional[str], title__iew: Optional[str], title__niew: Optional[str], title__isw: Optional[str], title__nisw: Optional[str], title__ie: Optional[str], title__nie: Optional[str], phone__n: Optional[str], phone__ic: Optional[str], phone__nic: Optional[str], phone__iew: Optional[str], phone__niew: Optional[str], phone__isw: Optional[str], phone__nisw: Optional[str], phone__ie: Optional[str], phone__nie: Optional[str], email__n: Optional[str], email__ic: Optional[str], email__nic: Optional[str], email__iew: Optional[str], email__niew: Optional[str], email__isw: Optional[str], email__nisw: Optional[str], email__ie: Optional[str], email__nie: Optional[str], address__n: Optional[str], address__ic: Optional[str], address__nic: Optional[str], address__iew: Optional[str], address__niew: Optional[str], address__isw: Optional[str], address__nisw: Optional[str], address__ie: Optional[str], address__nie: Optional[str], link__n: Optional[str], link__ic: Optional[str], link__nic: Optional[str], link__iew: Optional[str], link__niew: Optional[str], link__isw: Optional[str], link__nisw: Optional[str], link__ie: Optional[str], link__nie: Optional[str], tag__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Tenant_groupsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Tenant_groupsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Tenant_groupsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.Tenant_groupsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.Tenant_groupsEndpoint: ...
    def update(self, objects: Iterable[definitions.Tenant_groupsEndpoint]) -> [definitions.Tenant_groupsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.Tenant_groupsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], parent_id: Optional[str], parent: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], parent_id__n: Optional[str], parent__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class TenantsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.TenantsEndpoint]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.TenantsEndpoint: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet[definitions.TenantsEndpoint]: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> definitions.TenantsEndpoint: ...
    def update(self, objects: Iterable[definitions.TenantsEndpoint]) -> [definitions.TenantsEndpoint]: ...
    def delete(self, objects: Iterable[definitions.TenantsEndpoint]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], contact: Optional[str], contact_role: Optional[str], contact_group: Optional[str], group_id: Optional[str], group: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], tag__n: Optional[str], contact__n: Optional[str], contact_role__n: Optional[str], contact_group__n: Optional[str], group_id__n: Optional[str], group__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...

class TenancyApp(App):
    def __init__(self, api: 'Api', name):
        self.contact_assignments: Contact_assignmentsEndpoint = ...
        self.contact_groups: Contact_groupsEndpoint = ...
        self.contact_roles: Contact_rolesEndpoint = ...
        self.contacts: ContactsEndpoint = ...
        self.tenant_groups: Tenant_groupsEndpoint = ...
        self.tenants: TenantsEndpoint = ...