
from typing import Any, Dict, List, Optional, Union, Iterable
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import RecordSet, Record

class Config_contextsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Config_contextsEndpointRecord]: ...
    def get(self, id: Optional[str], name: Optional[str], is_active: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group: Optional[str], site_group_id: Optional[str], site_id: Optional[str], site: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], tag_id: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group__n: Optional[str], site_group_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_id__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Config_contextsEndpointRecord: ...
    def filter(self, id: Optional[str], name: Optional[str], is_active: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group: Optional[str], site_group_id: Optional[str], site_id: Optional[str], site: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], tag_id: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group__n: Optional[str], site_group_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_id__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], name: Optional[str], is_active: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group: Optional[str], site_group_id: Optional[str], site_id: Optional[str], site: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], tag_id: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group__n: Optional[str], site_group_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_id__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Config_contextsEndpointRecord: ...
    def update(self, objects: Iterable[Config_contextsEndpointRecord]) -> [Config_contextsEndpointRecord]: ...
    def delete(self, objects: Iterable[Config_contextsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], is_active: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], region_id: Optional[str], region: Optional[str], site_group: Optional[str], site_group_id: Optional[str], site_id: Optional[str], site: Optional[str], device_type_id: Optional[str], role_id: Optional[str], role: Optional[str], platform_id: Optional[str], platform: Optional[str], cluster_type_id: Optional[str], cluster_type: Optional[str], cluster_group_id: Optional[str], cluster_group: Optional[str], cluster_id: Optional[str], tenant_group_id: Optional[str], tenant_group: Optional[str], tenant_id: Optional[str], tenant: Optional[str], tag_id: Optional[str], tag: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], region_id__n: Optional[str], region__n: Optional[str], site_group__n: Optional[str], site_group_id__n: Optional[str], site_id__n: Optional[str], site__n: Optional[str], device_type_id__n: Optional[str], role_id__n: Optional[str], role__n: Optional[str], platform_id__n: Optional[str], platform__n: Optional[str], cluster_type_id__n: Optional[str], cluster_type__n: Optional[str], cluster_group_id__n: Optional[str], cluster_group__n: Optional[str], cluster_id__n: Optional[str], tenant_group_id__n: Optional[str], tenant_group__n: Optional[str], tenant_id__n: Optional[str], tenant__n: Optional[str], tag_id__n: Optional[str], tag__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Content_typesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Content_typesEndpointRecord]: ...
    def get(self, id: Optional[float], app_label: Optional[str], model: Optional[str], q: Optional[str], limit: Optional[int], offset: Optional[int]) -> Content_typesEndpointRecord: ...
    def filter(self, id: Optional[float], app_label: Optional[str], model: Optional[str], q: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[float], app_label: Optional[str], model: Optional[str], q: Optional[str], limit: Optional[int], offset: Optional[int]) -> Content_typesEndpointRecord: ...
    def update(self, objects: Iterable[Content_typesEndpointRecord]) -> [Content_typesEndpointRecord]: ...
    def delete(self, objects: Iterable[Content_typesEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[float], app_label: Optional[str], model: Optional[str], q: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Custom_fieldsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Custom_fieldsEndpointRecord]: ...
    def get(self, id: Optional[str], name: Optional[str], required: Optional[str], filter_logic: Optional[str], weight: Optional[str], description: Optional[str], q: Optional[str], type: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], filter_logic__n: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], type__n: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Custom_fieldsEndpointRecord: ...
    def filter(self, id: Optional[str], name: Optional[str], required: Optional[str], filter_logic: Optional[str], weight: Optional[str], description: Optional[str], q: Optional[str], type: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], filter_logic__n: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], type__n: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], name: Optional[str], required: Optional[str], filter_logic: Optional[str], weight: Optional[str], description: Optional[str], q: Optional[str], type: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], filter_logic__n: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], type__n: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Custom_fieldsEndpointRecord: ...
    def update(self, objects: Iterable[Custom_fieldsEndpointRecord]) -> [Custom_fieldsEndpointRecord]: ...
    def delete(self, objects: Iterable[Custom_fieldsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], required: Optional[str], filter_logic: Optional[str], weight: Optional[str], description: Optional[str], q: Optional[str], type: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], filter_logic__n: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], type__n: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Custom_linksEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Custom_linksEndpointRecord]: ...
    def get(self, id: Optional[str], content_type: Optional[str], name: Optional[str], enabled: Optional[str], link_text: Optional[str], link_url: Optional[str], weight: Optional[str], group_name: Optional[str], new_window: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], link_text__n: Optional[str], link_text__ic: Optional[str], link_text__nic: Optional[str], link_text__iew: Optional[str], link_text__niew: Optional[str], link_text__isw: Optional[str], link_text__nisw: Optional[str], link_text__ie: Optional[str], link_text__nie: Optional[str], link_url__n: Optional[str], link_url__ic: Optional[str], link_url__nic: Optional[str], link_url__iew: Optional[str], link_url__niew: Optional[str], link_url__isw: Optional[str], link_url__nisw: Optional[str], link_url__ie: Optional[str], link_url__nie: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], group_name__n: Optional[str], group_name__ic: Optional[str], group_name__nic: Optional[str], group_name__iew: Optional[str], group_name__niew: Optional[str], group_name__isw: Optional[str], group_name__nisw: Optional[str], group_name__ie: Optional[str], group_name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Custom_linksEndpointRecord: ...
    def filter(self, id: Optional[str], content_type: Optional[str], name: Optional[str], enabled: Optional[str], link_text: Optional[str], link_url: Optional[str], weight: Optional[str], group_name: Optional[str], new_window: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], link_text__n: Optional[str], link_text__ic: Optional[str], link_text__nic: Optional[str], link_text__iew: Optional[str], link_text__niew: Optional[str], link_text__isw: Optional[str], link_text__nisw: Optional[str], link_text__ie: Optional[str], link_text__nie: Optional[str], link_url__n: Optional[str], link_url__ic: Optional[str], link_url__nic: Optional[str], link_url__iew: Optional[str], link_url__niew: Optional[str], link_url__isw: Optional[str], link_url__nisw: Optional[str], link_url__ie: Optional[str], link_url__nie: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], group_name__n: Optional[str], group_name__ic: Optional[str], group_name__nic: Optional[str], group_name__iew: Optional[str], group_name__niew: Optional[str], group_name__isw: Optional[str], group_name__nisw: Optional[str], group_name__ie: Optional[str], group_name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], content_type: Optional[str], name: Optional[str], enabled: Optional[str], link_text: Optional[str], link_url: Optional[str], weight: Optional[str], group_name: Optional[str], new_window: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], link_text__n: Optional[str], link_text__ic: Optional[str], link_text__nic: Optional[str], link_text__iew: Optional[str], link_text__niew: Optional[str], link_text__isw: Optional[str], link_text__nisw: Optional[str], link_text__ie: Optional[str], link_text__nie: Optional[str], link_url__n: Optional[str], link_url__ic: Optional[str], link_url__nic: Optional[str], link_url__iew: Optional[str], link_url__niew: Optional[str], link_url__isw: Optional[str], link_url__nisw: Optional[str], link_url__ie: Optional[str], link_url__nie: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], group_name__n: Optional[str], group_name__ic: Optional[str], group_name__nic: Optional[str], group_name__iew: Optional[str], group_name__niew: Optional[str], group_name__isw: Optional[str], group_name__nisw: Optional[str], group_name__ie: Optional[str], group_name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Custom_linksEndpointRecord: ...
    def update(self, objects: Iterable[Custom_linksEndpointRecord]) -> [Custom_linksEndpointRecord]: ...
    def delete(self, objects: Iterable[Custom_linksEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], content_type: Optional[str], name: Optional[str], enabled: Optional[str], link_text: Optional[str], link_url: Optional[str], weight: Optional[str], group_name: Optional[str], new_window: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], link_text__n: Optional[str], link_text__ic: Optional[str], link_text__nic: Optional[str], link_text__iew: Optional[str], link_text__niew: Optional[str], link_text__isw: Optional[str], link_text__nisw: Optional[str], link_text__ie: Optional[str], link_text__nie: Optional[str], link_url__n: Optional[str], link_url__ic: Optional[str], link_url__nic: Optional[str], link_url__iew: Optional[str], link_url__niew: Optional[str], link_url__isw: Optional[str], link_url__nisw: Optional[str], link_url__ie: Optional[str], link_url__nie: Optional[str], weight__n: Optional[str], weight__lte: Optional[str], weight__lt: Optional[str], weight__gte: Optional[str], weight__gt: Optional[str], group_name__n: Optional[str], group_name__ic: Optional[str], group_name__nic: Optional[str], group_name__iew: Optional[str], group_name__niew: Optional[str], group_name__isw: Optional[str], group_name__nisw: Optional[str], group_name__ie: Optional[str], group_name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Export_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Export_templatesEndpointRecord]: ...
    def get(self, id: Optional[str], content_type: Optional[str], name: Optional[str], description: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Export_templatesEndpointRecord: ...
    def filter(self, id: Optional[str], content_type: Optional[str], name: Optional[str], description: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], content_type: Optional[str], name: Optional[str], description: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Export_templatesEndpointRecord: ...
    def update(self, objects: Iterable[Export_templatesEndpointRecord]) -> [Export_templatesEndpointRecord]: ...
    def delete(self, objects: Iterable[Export_templatesEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], content_type: Optional[str], name: Optional[str], description: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Image_attachmentsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Image_attachmentsEndpointRecord]: ...
    def get(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], name: Optional[str], q: Optional[str], created: Optional[str], content_type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], content_type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Image_attachmentsEndpointRecord: ...
    def filter(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], name: Optional[str], q: Optional[str], created: Optional[str], content_type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], content_type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], name: Optional[str], q: Optional[str], created: Optional[str], content_type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], content_type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Image_attachmentsEndpointRecord: ...
    def update(self, objects: Iterable[Image_attachmentsEndpointRecord]) -> [Image_attachmentsEndpointRecord]: ...
    def delete(self, objects: Iterable[Image_attachmentsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], content_type_id: Optional[str], object_id: Optional[str], name: Optional[str], q: Optional[str], created: Optional[str], content_type: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], content_type_id__n: Optional[str], object_id__n: Optional[str], object_id__lte: Optional[str], object_id__lt: Optional[str], object_id__gte: Optional[str], object_id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], content_type__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Job_resultsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Job_resultsEndpointRecord]: ...
    def get(self, id: Optional[str], created: Optional[str], completed: Optional[str], status: Optional[str], user: Optional[str], obj_type: Optional[str], name: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], status__n: Optional[str], user__n: Optional[str], obj_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Job_resultsEndpointRecord: ...
    def filter(self, id: Optional[str], created: Optional[str], completed: Optional[str], status: Optional[str], user: Optional[str], obj_type: Optional[str], name: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], status__n: Optional[str], user__n: Optional[str], obj_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], created: Optional[str], completed: Optional[str], status: Optional[str], user: Optional[str], obj_type: Optional[str], name: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], status__n: Optional[str], user__n: Optional[str], obj_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> Job_resultsEndpointRecord: ...
    def update(self, objects: Iterable[Job_resultsEndpointRecord]) -> [Job_resultsEndpointRecord]: ...
    def delete(self, objects: Iterable[Job_resultsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], created: Optional[str], completed: Optional[str], status: Optional[str], user: Optional[str], obj_type: Optional[str], name: Optional[str], q: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], status__n: Optional[str], user__n: Optional[str], obj_type__n: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Journal_entriesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Journal_entriesEndpointRecord]: ...
    def get(self, id: Optional[str], assigned_object_type_id: Optional[str], assigned_object_id: Optional[str], created: Optional[str], kind: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], assigned_object_type: Optional[str], created_by_id: Optional[str], created_by: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], assigned_object_type_id__n: Optional[str], assigned_object_id__n: Optional[str], assigned_object_id__lte: Optional[str], assigned_object_id__lt: Optional[str], assigned_object_id__gte: Optional[str], assigned_object_id__gt: Optional[str], kind__n: Optional[str], tag__n: Optional[str], assigned_object_type__n: Optional[str], created_by_id__n: Optional[str], created_by__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Journal_entriesEndpointRecord: ...
    def filter(self, id: Optional[str], assigned_object_type_id: Optional[str], assigned_object_id: Optional[str], created: Optional[str], kind: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], assigned_object_type: Optional[str], created_by_id: Optional[str], created_by: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], assigned_object_type_id__n: Optional[str], assigned_object_id__n: Optional[str], assigned_object_id__lte: Optional[str], assigned_object_id__lt: Optional[str], assigned_object_id__gte: Optional[str], assigned_object_id__gt: Optional[str], kind__n: Optional[str], tag__n: Optional[str], assigned_object_type__n: Optional[str], created_by_id__n: Optional[str], created_by__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], assigned_object_type_id: Optional[str], assigned_object_id: Optional[str], created: Optional[str], kind: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], assigned_object_type: Optional[str], created_by_id: Optional[str], created_by: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], assigned_object_type_id__n: Optional[str], assigned_object_id__n: Optional[str], assigned_object_id__lte: Optional[str], assigned_object_id__lt: Optional[str], assigned_object_id__gte: Optional[str], assigned_object_id__gt: Optional[str], kind__n: Optional[str], tag__n: Optional[str], assigned_object_type__n: Optional[str], created_by_id__n: Optional[str], created_by__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Journal_entriesEndpointRecord: ...
    def update(self, objects: Iterable[Journal_entriesEndpointRecord]) -> [Journal_entriesEndpointRecord]: ...
    def delete(self, objects: Iterable[Journal_entriesEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], assigned_object_type_id: Optional[str], assigned_object_id: Optional[str], created: Optional[str], kind: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], tag: Optional[str], assigned_object_type: Optional[str], created_by_id: Optional[str], created_by: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], assigned_object_type_id__n: Optional[str], assigned_object_id__n: Optional[str], assigned_object_id__lte: Optional[str], assigned_object_id__lt: Optional[str], assigned_object_id__gte: Optional[str], assigned_object_id__gt: Optional[str], kind__n: Optional[str], tag__n: Optional[str], assigned_object_type__n: Optional[str], created_by_id__n: Optional[str], created_by__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class Object_changesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Object_changesEndpointRecord]: ...
    def get(self, id: Optional[str], user: Optional[str], user_name: Optional[str], request_id: Optional[str], action: Optional[str], changed_object_type_id: Optional[str], changed_object_id: Optional[str], object_repr: Optional[str], q: Optional[str], time: Optional[str], changed_object_type: Optional[str], user_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], user__n: Optional[str], user_name__n: Optional[str], user_name__ic: Optional[str], user_name__nic: Optional[str], user_name__iew: Optional[str], user_name__niew: Optional[str], user_name__isw: Optional[str], user_name__nisw: Optional[str], user_name__ie: Optional[str], user_name__nie: Optional[str], action__n: Optional[str], changed_object_type_id__n: Optional[str], changed_object_id__n: Optional[str], changed_object_id__lte: Optional[str], changed_object_id__lt: Optional[str], changed_object_id__gte: Optional[str], changed_object_id__gt: Optional[str], object_repr__n: Optional[str], object_repr__ic: Optional[str], object_repr__nic: Optional[str], object_repr__iew: Optional[str], object_repr__niew: Optional[str], object_repr__isw: Optional[str], object_repr__nisw: Optional[str], object_repr__ie: Optional[str], object_repr__nie: Optional[str], changed_object_type__n: Optional[str], user_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Object_changesEndpointRecord: ...
    def filter(self, id: Optional[str], user: Optional[str], user_name: Optional[str], request_id: Optional[str], action: Optional[str], changed_object_type_id: Optional[str], changed_object_id: Optional[str], object_repr: Optional[str], q: Optional[str], time: Optional[str], changed_object_type: Optional[str], user_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], user__n: Optional[str], user_name__n: Optional[str], user_name__ic: Optional[str], user_name__nic: Optional[str], user_name__iew: Optional[str], user_name__niew: Optional[str], user_name__isw: Optional[str], user_name__nisw: Optional[str], user_name__ie: Optional[str], user_name__nie: Optional[str], action__n: Optional[str], changed_object_type_id__n: Optional[str], changed_object_id__n: Optional[str], changed_object_id__lte: Optional[str], changed_object_id__lt: Optional[str], changed_object_id__gte: Optional[str], changed_object_id__gt: Optional[str], object_repr__n: Optional[str], object_repr__ic: Optional[str], object_repr__nic: Optional[str], object_repr__iew: Optional[str], object_repr__niew: Optional[str], object_repr__isw: Optional[str], object_repr__nisw: Optional[str], object_repr__ie: Optional[str], object_repr__nie: Optional[str], changed_object_type__n: Optional[str], user_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], user: Optional[str], user_name: Optional[str], request_id: Optional[str], action: Optional[str], changed_object_type_id: Optional[str], changed_object_id: Optional[str], object_repr: Optional[str], q: Optional[str], time: Optional[str], changed_object_type: Optional[str], user_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], user__n: Optional[str], user_name__n: Optional[str], user_name__ic: Optional[str], user_name__nic: Optional[str], user_name__iew: Optional[str], user_name__niew: Optional[str], user_name__isw: Optional[str], user_name__nisw: Optional[str], user_name__ie: Optional[str], user_name__nie: Optional[str], action__n: Optional[str], changed_object_type_id__n: Optional[str], changed_object_id__n: Optional[str], changed_object_id__lte: Optional[str], changed_object_id__lt: Optional[str], changed_object_id__gte: Optional[str], changed_object_id__gt: Optional[str], object_repr__n: Optional[str], object_repr__ic: Optional[str], object_repr__nic: Optional[str], object_repr__iew: Optional[str], object_repr__niew: Optional[str], object_repr__isw: Optional[str], object_repr__nisw: Optional[str], object_repr__ie: Optional[str], object_repr__nie: Optional[str], changed_object_type__n: Optional[str], user_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> Object_changesEndpointRecord: ...
    def update(self, objects: Iterable[Object_changesEndpointRecord]) -> [Object_changesEndpointRecord]: ...
    def delete(self, objects: Iterable[Object_changesEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], user: Optional[str], user_name: Optional[str], request_id: Optional[str], action: Optional[str], changed_object_type_id: Optional[str], changed_object_id: Optional[str], object_repr: Optional[str], q: Optional[str], time: Optional[str], changed_object_type: Optional[str], user_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], user__n: Optional[str], user_name__n: Optional[str], user_name__ic: Optional[str], user_name__nic: Optional[str], user_name__iew: Optional[str], user_name__niew: Optional[str], user_name__isw: Optional[str], user_name__nisw: Optional[str], user_name__ie: Optional[str], user_name__nie: Optional[str], action__n: Optional[str], changed_object_type_id__n: Optional[str], changed_object_id__n: Optional[str], changed_object_id__lte: Optional[str], changed_object_id__lt: Optional[str], changed_object_id__gte: Optional[str], changed_object_id__gt: Optional[str], object_repr__n: Optional[str], object_repr__ic: Optional[str], object_repr__nic: Optional[str], object_repr__iew: Optional[str], object_repr__niew: Optional[str], object_repr__isw: Optional[str], object_repr__nisw: Optional[str], object_repr__ie: Optional[str], object_repr__nie: Optional[str], changed_object_type__n: Optional[str], user_id__n: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class ReportsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[ReportsEndpointRecord]: ...
    def get(self, ) -> ReportsEndpointRecord: ...
    def filter(self, ) -> RecordSet: ...
    def create(self, ) -> ReportsEndpointRecord: ...
    def update(self, objects: Iterable[ReportsEndpointRecord]) -> [ReportsEndpointRecord]: ...
    def delete(self, objects: Iterable[ReportsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, ) -> int: ...


class ScriptsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[ScriptsEndpointRecord]: ...
    def get(self, ) -> ScriptsEndpointRecord: ...
    def filter(self, ) -> RecordSet: ...
    def create(self, ) -> ScriptsEndpointRecord: ...
    def update(self, objects: Iterable[ScriptsEndpointRecord]) -> [ScriptsEndpointRecord]: ...
    def delete(self, objects: Iterable[ScriptsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, ) -> int: ...


class TagsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[TagsEndpointRecord]: ...
    def get(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], content_type: Optional[str], content_type_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> TagsEndpointRecord: ...
    def filter(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], content_type: Optional[str], content_type_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], content_type: Optional[str], content_type_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> TagsEndpointRecord: ...
    def update(self, objects: Iterable[TagsEndpointRecord]) -> [TagsEndpointRecord]: ...
    def delete(self, objects: Iterable[TagsEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], slug: Optional[str], color: Optional[str], description: Optional[str], created: Optional[str], created__gte: Optional[str], created__lte: Optional[str], last_updated: Optional[str], last_updated__gte: Optional[str], last_updated__lte: Optional[str], q: Optional[str], content_type: Optional[str], content_type_id: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], slug__n: Optional[str], slug__ic: Optional[str], slug__nic: Optional[str], slug__iew: Optional[str], slug__niew: Optional[str], slug__isw: Optional[str], slug__nisw: Optional[str], slug__ie: Optional[str], slug__nie: Optional[str], color__n: Optional[str], color__ic: Optional[str], color__nic: Optional[str], color__iew: Optional[str], color__niew: Optional[str], color__isw: Optional[str], color__nisw: Optional[str], color__ie: Optional[str], color__nie: Optional[str], description__n: Optional[str], description__ic: Optional[str], description__nic: Optional[str], description__iew: Optional[str], description__niew: Optional[str], description__isw: Optional[str], description__nisw: Optional[str], description__ie: Optional[str], description__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...


class WebhooksEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[WebhooksEndpointRecord]: ...
    def get(self, id: Optional[str], name: Optional[str], type_create: Optional[str], type_update: Optional[str], type_delete: Optional[str], payload_url: Optional[str], enabled: Optional[str], http_method: Optional[str], http_content_type: Optional[str], secret: Optional[str], ssl_verification: Optional[str], ca_file_path: Optional[str], q: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], payload_url__n: Optional[str], payload_url__ic: Optional[str], payload_url__nic: Optional[str], payload_url__iew: Optional[str], payload_url__niew: Optional[str], payload_url__isw: Optional[str], payload_url__nisw: Optional[str], payload_url__ie: Optional[str], payload_url__nie: Optional[str], http_method__n: Optional[str], http_content_type__n: Optional[str], http_content_type__ic: Optional[str], http_content_type__nic: Optional[str], http_content_type__iew: Optional[str], http_content_type__niew: Optional[str], http_content_type__isw: Optional[str], http_content_type__nisw: Optional[str], http_content_type__ie: Optional[str], http_content_type__nie: Optional[str], secret__n: Optional[str], secret__ic: Optional[str], secret__nic: Optional[str], secret__iew: Optional[str], secret__niew: Optional[str], secret__isw: Optional[str], secret__nisw: Optional[str], secret__ie: Optional[str], secret__nie: Optional[str], ca_file_path__n: Optional[str], ca_file_path__ic: Optional[str], ca_file_path__nic: Optional[str], ca_file_path__iew: Optional[str], ca_file_path__niew: Optional[str], ca_file_path__isw: Optional[str], ca_file_path__nisw: Optional[str], ca_file_path__ie: Optional[str], ca_file_path__nie: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> WebhooksEndpointRecord: ...
    def filter(self, id: Optional[str], name: Optional[str], type_create: Optional[str], type_update: Optional[str], type_delete: Optional[str], payload_url: Optional[str], enabled: Optional[str], http_method: Optional[str], http_content_type: Optional[str], secret: Optional[str], ssl_verification: Optional[str], ca_file_path: Optional[str], q: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], payload_url__n: Optional[str], payload_url__ic: Optional[str], payload_url__nic: Optional[str], payload_url__iew: Optional[str], payload_url__niew: Optional[str], payload_url__isw: Optional[str], payload_url__nisw: Optional[str], payload_url__ie: Optional[str], payload_url__nie: Optional[str], http_method__n: Optional[str], http_content_type__n: Optional[str], http_content_type__ic: Optional[str], http_content_type__nic: Optional[str], http_content_type__iew: Optional[str], http_content_type__niew: Optional[str], http_content_type__isw: Optional[str], http_content_type__nisw: Optional[str], http_content_type__ie: Optional[str], http_content_type__nie: Optional[str], secret__n: Optional[str], secret__ic: Optional[str], secret__nic: Optional[str], secret__iew: Optional[str], secret__niew: Optional[str], secret__isw: Optional[str], secret__nisw: Optional[str], secret__ie: Optional[str], secret__nie: Optional[str], ca_file_path__n: Optional[str], ca_file_path__ic: Optional[str], ca_file_path__nic: Optional[str], ca_file_path__iew: Optional[str], ca_file_path__niew: Optional[str], ca_file_path__isw: Optional[str], ca_file_path__nisw: Optional[str], ca_file_path__ie: Optional[str], ca_file_path__nie: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> RecordSet: ...
    def create(self, id: Optional[str], name: Optional[str], type_create: Optional[str], type_update: Optional[str], type_delete: Optional[str], payload_url: Optional[str], enabled: Optional[str], http_method: Optional[str], http_content_type: Optional[str], secret: Optional[str], ssl_verification: Optional[str], ca_file_path: Optional[str], q: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], payload_url__n: Optional[str], payload_url__ic: Optional[str], payload_url__nic: Optional[str], payload_url__iew: Optional[str], payload_url__niew: Optional[str], payload_url__isw: Optional[str], payload_url__nisw: Optional[str], payload_url__ie: Optional[str], payload_url__nie: Optional[str], http_method__n: Optional[str], http_content_type__n: Optional[str], http_content_type__ic: Optional[str], http_content_type__nic: Optional[str], http_content_type__iew: Optional[str], http_content_type__niew: Optional[str], http_content_type__isw: Optional[str], http_content_type__nisw: Optional[str], http_content_type__ie: Optional[str], http_content_type__nie: Optional[str], secret__n: Optional[str], secret__ic: Optional[str], secret__nic: Optional[str], secret__iew: Optional[str], secret__niew: Optional[str], secret__isw: Optional[str], secret__nisw: Optional[str], secret__ie: Optional[str], secret__nie: Optional[str], ca_file_path__n: Optional[str], ca_file_path__ic: Optional[str], ca_file_path__nic: Optional[str], ca_file_path__iew: Optional[str], ca_file_path__niew: Optional[str], ca_file_path__isw: Optional[str], ca_file_path__nisw: Optional[str], ca_file_path__ie: Optional[str], ca_file_path__nie: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> WebhooksEndpointRecord: ...
    def update(self, objects: Iterable[WebhooksEndpointRecord]) -> [WebhooksEndpointRecord]: ...
    def delete(self, objects: Iterable[WebhooksEndpointRecord]): ...
    def choices(self) -> dict:...
    def count(self, id: Optional[str], name: Optional[str], type_create: Optional[str], type_update: Optional[str], type_delete: Optional[str], payload_url: Optional[str], enabled: Optional[str], http_method: Optional[str], http_content_type: Optional[str], secret: Optional[str], ssl_verification: Optional[str], ca_file_path: Optional[str], q: Optional[str], content_type_id: Optional[str], content_types: Optional[str], id__n: Optional[str], id__lte: Optional[str], id__lt: Optional[str], id__gte: Optional[str], id__gt: Optional[str], name__n: Optional[str], name__ic: Optional[str], name__nic: Optional[str], name__iew: Optional[str], name__niew: Optional[str], name__isw: Optional[str], name__nisw: Optional[str], name__ie: Optional[str], name__nie: Optional[str], payload_url__n: Optional[str], payload_url__ic: Optional[str], payload_url__nic: Optional[str], payload_url__iew: Optional[str], payload_url__niew: Optional[str], payload_url__isw: Optional[str], payload_url__nisw: Optional[str], payload_url__ie: Optional[str], payload_url__nie: Optional[str], http_method__n: Optional[str], http_content_type__n: Optional[str], http_content_type__ic: Optional[str], http_content_type__nic: Optional[str], http_content_type__iew: Optional[str], http_content_type__niew: Optional[str], http_content_type__isw: Optional[str], http_content_type__nisw: Optional[str], http_content_type__ie: Optional[str], http_content_type__nie: Optional[str], secret__n: Optional[str], secret__ic: Optional[str], secret__nic: Optional[str], secret__iew: Optional[str], secret__niew: Optional[str], secret__isw: Optional[str], secret__nisw: Optional[str], secret__ie: Optional[str], secret__nie: Optional[str], ca_file_path__n: Optional[str], ca_file_path__ic: Optional[str], ca_file_path__nic: Optional[str], ca_file_path__iew: Optional[str], ca_file_path__niew: Optional[str], ca_file_path__isw: Optional[str], ca_file_path__nisw: Optional[str], ca_file_path__ie: Optional[str], ca_file_path__nie: Optional[str], content_type_id__n: Optional[str], content_type_id__lte: Optional[str], content_type_id__lt: Optional[str], content_type_id__gte: Optional[str], content_type_id__gt: Optional[str], content_types__n: Optional[str], content_types__ic: Optional[str], content_types__nic: Optional[str], content_types__iew: Optional[str], content_types__niew: Optional[str], content_types__isw: Optional[str], content_types__nisw: Optional[str], content_types__ie: Optional[str], content_types__nie: Optional[str], limit: Optional[int], offset: Optional[int]) -> int: ...

class ExtrasApp(App):
    def __init__(self, api: 'Api', name):
        self.config_contexts: Config_contextsEndpoint = ...
        self.content_types: Content_typesEndpoint = ...
        self.custom_fields: Custom_fieldsEndpoint = ...
        self.custom_links: Custom_linksEndpoint = ...
        self.export_templates: Export_templatesEndpoint = ...
        self.image_attachments: Image_attachmentsEndpoint = ...
        self.job_results: Job_resultsEndpoint = ...
        self.journal_entries: Journal_entriesEndpoint = ...
        self.object_changes: Object_changesEndpoint = ...
        self.reports: ReportsEndpoint = ...
        self.scripts: ScriptsEndpoint = ...
        self.tags: TagsEndpoint = ...
        self.webhooks: WebhooksEndpoint = ...