from typing import Any, Dict, Iterable, List, Optional, Union

from pynetbox._gen import definitions
from pynetbox.core.api import Api
from pynetbox.core.app import App
from pynetbox.core.endpoint import Endpoint
from pynetbox.core.response import Record, RecordSet

class Config_contextsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ConfigContext]: ...
    def get(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        is_active: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str] = None,
        region: Optional[str] = None,
        site_group: Optional[str] = None,
        site_group_id: Optional[str] = None,
        site_id: Optional[str] = None,
        site: Optional[str] = None,
        device_type_id: Optional[str] = None,
        role_id: Optional[str] = None,
        role: Optional[str] = None,
        platform_id: Optional[str] = None,
        platform: Optional[str] = None,
        cluster_type_id: Optional[str] = None,
        cluster_type: Optional[str] = None,
        cluster_group_id: Optional[str] = None,
        cluster_group: Optional[str] = None,
        cluster_id: Optional[str] = None,
        tenant_group_id: Optional[str] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str] = None,
        tenant: Optional[str] = None,
        tag_id: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        device_type_id__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        cluster_type_id__n: Optional[str] = None,
        cluster_type__n: Optional[str] = None,
        cluster_group_id__n: Optional[str] = None,
        cluster_group__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        tag_id__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ConfigContext]: ...
    def filter(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        is_active: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str] = None,
        region: Optional[str] = None,
        site_group: Optional[str] = None,
        site_group_id: Optional[str] = None,
        site_id: Optional[str] = None,
        site: Optional[str] = None,
        device_type_id: Optional[str] = None,
        role_id: Optional[str] = None,
        role: Optional[str] = None,
        platform_id: Optional[str] = None,
        platform: Optional[str] = None,
        cluster_type_id: Optional[str] = None,
        cluster_type: Optional[str] = None,
        cluster_group_id: Optional[str] = None,
        cluster_group: Optional[str] = None,
        cluster_id: Optional[str] = None,
        tenant_group_id: Optional[str] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str] = None,
        tenant: Optional[str] = None,
        tag_id: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        device_type_id__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        cluster_type_id__n: Optional[str] = None,
        cluster_type__n: Optional[str] = None,
        cluster_group_id__n: Optional[str] = None,
        cluster_group__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        tag_id__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ConfigContext]: ...
    def create(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        is_active: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str] = None,
        region: Optional[str] = None,
        site_group: Optional[str] = None,
        site_group_id: Optional[str] = None,
        site_id: Optional[str] = None,
        site: Optional[str] = None,
        device_type_id: Optional[str] = None,
        role_id: Optional[str] = None,
        role: Optional[str] = None,
        platform_id: Optional[str] = None,
        platform: Optional[str] = None,
        cluster_type_id: Optional[str] = None,
        cluster_type: Optional[str] = None,
        cluster_group_id: Optional[str] = None,
        cluster_group: Optional[str] = None,
        cluster_id: Optional[str] = None,
        tenant_group_id: Optional[str] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str] = None,
        tenant: Optional[str] = None,
        tag_id: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        device_type_id__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        cluster_type_id__n: Optional[str] = None,
        cluster_type__n: Optional[str] = None,
        cluster_group_id__n: Optional[str] = None,
        cluster_group__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        tag_id__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.ConfigContext: ...
    def update(
        self, objects: Iterable[definitions.ConfigContext]
    ) -> [definitions.ConfigContext]: ...
    def delete(self, objects: Iterable[definitions.ConfigContext]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        is_active: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        region_id: Optional[str] = None,
        region: Optional[str] = None,
        site_group: Optional[str] = None,
        site_group_id: Optional[str] = None,
        site_id: Optional[str] = None,
        site: Optional[str] = None,
        device_type_id: Optional[str] = None,
        role_id: Optional[str] = None,
        role: Optional[str] = None,
        platform_id: Optional[str] = None,
        platform: Optional[str] = None,
        cluster_type_id: Optional[str] = None,
        cluster_type: Optional[str] = None,
        cluster_group_id: Optional[str] = None,
        cluster_group: Optional[str] = None,
        cluster_id: Optional[str] = None,
        tenant_group_id: Optional[str] = None,
        tenant_group: Optional[str] = None,
        tenant_id: Optional[str] = None,
        tenant: Optional[str] = None,
        tag_id: Optional[str] = None,
        tag: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        region_id__n: Optional[str] = None,
        region__n: Optional[str] = None,
        site_group__n: Optional[str] = None,
        site_group_id__n: Optional[str] = None,
        site_id__n: Optional[str] = None,
        site__n: Optional[str] = None,
        device_type_id__n: Optional[str] = None,
        role_id__n: Optional[str] = None,
        role__n: Optional[str] = None,
        platform_id__n: Optional[str] = None,
        platform__n: Optional[str] = None,
        cluster_type_id__n: Optional[str] = None,
        cluster_type__n: Optional[str] = None,
        cluster_group_id__n: Optional[str] = None,
        cluster_group__n: Optional[str] = None,
        cluster_id__n: Optional[str] = None,
        tenant_group_id__n: Optional[str] = None,
        tenant_group__n: Optional[str] = None,
        tenant_id__n: Optional[str] = None,
        tenant__n: Optional[str] = None,
        tag_id__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Content_typesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ContentType]: ...
    def get(
        self,
        id: Optional[float] = None,
        app_label: Optional[str] = None,
        model: Optional[str] = None,
        q: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ContentType]: ...
    def filter(
        self,
        id: Optional[float] = None,
        app_label: Optional[str] = None,
        model: Optional[str] = None,
        q: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ContentType]: ...
    def create(
        self,
        id: Optional[float] = None,
        app_label: Optional[str] = None,
        model: Optional[str] = None,
        q: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.ContentType: ...
    def update(
        self, objects: Iterable[definitions.ContentType]
    ) -> [definitions.ContentType]: ...
    def delete(self, objects: Iterable[definitions.ContentType]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[float] = None,
        app_label: Optional[str] = None,
        model: Optional[str] = None,
        q: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Custom_fieldsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.CustomField]: ...
    def get(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        required: Optional[str] = None,
        filter_logic: Optional[str] = None,
        weight: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        filter_logic__n: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.CustomField]: ...
    def filter(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        required: Optional[str] = None,
        filter_logic: Optional[str] = None,
        weight: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        filter_logic__n: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.CustomField]: ...
    def create(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        required: Optional[str] = None,
        filter_logic: Optional[str] = None,
        weight: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        filter_logic__n: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.CustomField: ...
    def update(
        self, objects: Iterable[definitions.CustomField]
    ) -> [definitions.CustomField]: ...
    def delete(self, objects: Iterable[definitions.CustomField]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        required: Optional[str] = None,
        filter_logic: Optional[str] = None,
        weight: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        filter_logic__n: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        type__n: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Custom_linksEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.CustomLink]: ...
    def get(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        enabled: Optional[str] = None,
        link_text: Optional[str] = None,
        link_url: Optional[str] = None,
        weight: Optional[str] = None,
        group_name: Optional[str] = None,
        new_window: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        link_text__n: Optional[str] = None,
        link_text__ic: Optional[str] = None,
        link_text__nic: Optional[str] = None,
        link_text__iew: Optional[str] = None,
        link_text__niew: Optional[str] = None,
        link_text__isw: Optional[str] = None,
        link_text__nisw: Optional[str] = None,
        link_text__ie: Optional[str] = None,
        link_text__nie: Optional[str] = None,
        link_url__n: Optional[str] = None,
        link_url__ic: Optional[str] = None,
        link_url__nic: Optional[str] = None,
        link_url__iew: Optional[str] = None,
        link_url__niew: Optional[str] = None,
        link_url__isw: Optional[str] = None,
        link_url__nisw: Optional[str] = None,
        link_url__ie: Optional[str] = None,
        link_url__nie: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        group_name__n: Optional[str] = None,
        group_name__ic: Optional[str] = None,
        group_name__nic: Optional[str] = None,
        group_name__iew: Optional[str] = None,
        group_name__niew: Optional[str] = None,
        group_name__isw: Optional[str] = None,
        group_name__nisw: Optional[str] = None,
        group_name__ie: Optional[str] = None,
        group_name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.CustomLink]: ...
    def filter(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        enabled: Optional[str] = None,
        link_text: Optional[str] = None,
        link_url: Optional[str] = None,
        weight: Optional[str] = None,
        group_name: Optional[str] = None,
        new_window: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        link_text__n: Optional[str] = None,
        link_text__ic: Optional[str] = None,
        link_text__nic: Optional[str] = None,
        link_text__iew: Optional[str] = None,
        link_text__niew: Optional[str] = None,
        link_text__isw: Optional[str] = None,
        link_text__nisw: Optional[str] = None,
        link_text__ie: Optional[str] = None,
        link_text__nie: Optional[str] = None,
        link_url__n: Optional[str] = None,
        link_url__ic: Optional[str] = None,
        link_url__nic: Optional[str] = None,
        link_url__iew: Optional[str] = None,
        link_url__niew: Optional[str] = None,
        link_url__isw: Optional[str] = None,
        link_url__nisw: Optional[str] = None,
        link_url__ie: Optional[str] = None,
        link_url__nie: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        group_name__n: Optional[str] = None,
        group_name__ic: Optional[str] = None,
        group_name__nic: Optional[str] = None,
        group_name__iew: Optional[str] = None,
        group_name__niew: Optional[str] = None,
        group_name__isw: Optional[str] = None,
        group_name__nisw: Optional[str] = None,
        group_name__ie: Optional[str] = None,
        group_name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.CustomLink]: ...
    def create(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        enabled: Optional[str] = None,
        link_text: Optional[str] = None,
        link_url: Optional[str] = None,
        weight: Optional[str] = None,
        group_name: Optional[str] = None,
        new_window: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        link_text__n: Optional[str] = None,
        link_text__ic: Optional[str] = None,
        link_text__nic: Optional[str] = None,
        link_text__iew: Optional[str] = None,
        link_text__niew: Optional[str] = None,
        link_text__isw: Optional[str] = None,
        link_text__nisw: Optional[str] = None,
        link_text__ie: Optional[str] = None,
        link_text__nie: Optional[str] = None,
        link_url__n: Optional[str] = None,
        link_url__ic: Optional[str] = None,
        link_url__nic: Optional[str] = None,
        link_url__iew: Optional[str] = None,
        link_url__niew: Optional[str] = None,
        link_url__isw: Optional[str] = None,
        link_url__nisw: Optional[str] = None,
        link_url__ie: Optional[str] = None,
        link_url__nie: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        group_name__n: Optional[str] = None,
        group_name__ic: Optional[str] = None,
        group_name__nic: Optional[str] = None,
        group_name__iew: Optional[str] = None,
        group_name__niew: Optional[str] = None,
        group_name__isw: Optional[str] = None,
        group_name__nisw: Optional[str] = None,
        group_name__ie: Optional[str] = None,
        group_name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.CustomLink: ...
    def update(
        self, objects: Iterable[definitions.CustomLink]
    ) -> [definitions.CustomLink]: ...
    def delete(self, objects: Iterable[definitions.CustomLink]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        enabled: Optional[str] = None,
        link_text: Optional[str] = None,
        link_url: Optional[str] = None,
        weight: Optional[str] = None,
        group_name: Optional[str] = None,
        new_window: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        link_text__n: Optional[str] = None,
        link_text__ic: Optional[str] = None,
        link_text__nic: Optional[str] = None,
        link_text__iew: Optional[str] = None,
        link_text__niew: Optional[str] = None,
        link_text__isw: Optional[str] = None,
        link_text__nisw: Optional[str] = None,
        link_text__ie: Optional[str] = None,
        link_text__nie: Optional[str] = None,
        link_url__n: Optional[str] = None,
        link_url__ic: Optional[str] = None,
        link_url__nic: Optional[str] = None,
        link_url__iew: Optional[str] = None,
        link_url__niew: Optional[str] = None,
        link_url__isw: Optional[str] = None,
        link_url__nisw: Optional[str] = None,
        link_url__ie: Optional[str] = None,
        link_url__nie: Optional[str] = None,
        weight__n: Optional[str] = None,
        weight__lte: Optional[str] = None,
        weight__lt: Optional[str] = None,
        weight__gte: Optional[str] = None,
        weight__gt: Optional[str] = None,
        group_name__n: Optional[str] = None,
        group_name__ic: Optional[str] = None,
        group_name__nic: Optional[str] = None,
        group_name__iew: Optional[str] = None,
        group_name__niew: Optional[str] = None,
        group_name__isw: Optional[str] = None,
        group_name__nisw: Optional[str] = None,
        group_name__ie: Optional[str] = None,
        group_name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Export_templatesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ExportTemplate]: ...
    def get(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ExportTemplate]: ...
    def filter(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ExportTemplate]: ...
    def create(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.ExportTemplate: ...
    def update(
        self, objects: Iterable[definitions.ExportTemplate]
    ) -> [definitions.ExportTemplate]: ...
    def delete(self, objects: Iterable[definitions.ExportTemplate]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        content_type: Optional[str] = None,
        name: Optional[str] = None,
        description: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Image_attachmentsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ImageAttachment]: ...
    def get(
        self,
        id: Optional[str] = None,
        content_type_id: Optional[str] = None,
        object_id: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        created: Optional[str] = None,
        content_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        object_id__n: Optional[str] = None,
        object_id__lte: Optional[str] = None,
        object_id__lt: Optional[str] = None,
        object_id__gte: Optional[str] = None,
        object_id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        content_type__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ImageAttachment]: ...
    def filter(
        self,
        id: Optional[str] = None,
        content_type_id: Optional[str] = None,
        object_id: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        created: Optional[str] = None,
        content_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        object_id__n: Optional[str] = None,
        object_id__lte: Optional[str] = None,
        object_id__lt: Optional[str] = None,
        object_id__gte: Optional[str] = None,
        object_id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        content_type__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ImageAttachment]: ...
    def create(
        self,
        id: Optional[str] = None,
        content_type_id: Optional[str] = None,
        object_id: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        created: Optional[str] = None,
        content_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        object_id__n: Optional[str] = None,
        object_id__lte: Optional[str] = None,
        object_id__lt: Optional[str] = None,
        object_id__gte: Optional[str] = None,
        object_id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        content_type__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.ImageAttachment: ...
    def update(
        self, objects: Iterable[definitions.ImageAttachment]
    ) -> [definitions.ImageAttachment]: ...
    def delete(self, objects: Iterable[definitions.ImageAttachment]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        content_type_id: Optional[str] = None,
        object_id: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        created: Optional[str] = None,
        content_type: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        object_id__n: Optional[str] = None,
        object_id__lte: Optional[str] = None,
        object_id__lt: Optional[str] = None,
        object_id__gte: Optional[str] = None,
        object_id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        content_type__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Job_resultsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.JobResult]: ...
    def get(
        self,
        id: Optional[str] = None,
        created: Optional[str] = None,
        completed: Optional[str] = None,
        status: Optional[str] = None,
        user: Optional[str] = None,
        obj_type: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        status__n: Optional[str] = None,
        user__n: Optional[str] = None,
        obj_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.JobResult]: ...
    def filter(
        self,
        id: Optional[str] = None,
        created: Optional[str] = None,
        completed: Optional[str] = None,
        status: Optional[str] = None,
        user: Optional[str] = None,
        obj_type: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        status__n: Optional[str] = None,
        user__n: Optional[str] = None,
        obj_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.JobResult]: ...
    def create(
        self,
        id: Optional[str] = None,
        created: Optional[str] = None,
        completed: Optional[str] = None,
        status: Optional[str] = None,
        user: Optional[str] = None,
        obj_type: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        status__n: Optional[str] = None,
        user__n: Optional[str] = None,
        obj_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.JobResult: ...
    def update(
        self, objects: Iterable[definitions.JobResult]
    ) -> [definitions.JobResult]: ...
    def delete(self, objects: Iterable[definitions.JobResult]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        created: Optional[str] = None,
        completed: Optional[str] = None,
        status: Optional[str] = None,
        user: Optional[str] = None,
        obj_type: Optional[str] = None,
        name: Optional[str] = None,
        q: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        status__n: Optional[str] = None,
        user__n: Optional[str] = None,
        obj_type__n: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Journal_entriesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.JournalEntry]: ...
    def get(
        self,
        id: Optional[str] = None,
        assigned_object_type_id: Optional[str] = None,
        assigned_object_id: Optional[str] = None,
        created: Optional[str] = None,
        kind: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        assigned_object_type: Optional[str] = None,
        created_by_id: Optional[str] = None,
        created_by: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        assigned_object_type_id__n: Optional[str] = None,
        assigned_object_id__n: Optional[str] = None,
        assigned_object_id__lte: Optional[str] = None,
        assigned_object_id__lt: Optional[str] = None,
        assigned_object_id__gte: Optional[str] = None,
        assigned_object_id__gt: Optional[str] = None,
        kind__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        assigned_object_type__n: Optional[str] = None,
        created_by_id__n: Optional[str] = None,
        created_by__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.JournalEntry]: ...
    def filter(
        self,
        id: Optional[str] = None,
        assigned_object_type_id: Optional[str] = None,
        assigned_object_id: Optional[str] = None,
        created: Optional[str] = None,
        kind: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        assigned_object_type: Optional[str] = None,
        created_by_id: Optional[str] = None,
        created_by: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        assigned_object_type_id__n: Optional[str] = None,
        assigned_object_id__n: Optional[str] = None,
        assigned_object_id__lte: Optional[str] = None,
        assigned_object_id__lt: Optional[str] = None,
        assigned_object_id__gte: Optional[str] = None,
        assigned_object_id__gt: Optional[str] = None,
        kind__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        assigned_object_type__n: Optional[str] = None,
        created_by_id__n: Optional[str] = None,
        created_by__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.JournalEntry]: ...
    def create(
        self,
        id: Optional[str] = None,
        assigned_object_type_id: Optional[str] = None,
        assigned_object_id: Optional[str] = None,
        created: Optional[str] = None,
        kind: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        assigned_object_type: Optional[str] = None,
        created_by_id: Optional[str] = None,
        created_by: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        assigned_object_type_id__n: Optional[str] = None,
        assigned_object_id__n: Optional[str] = None,
        assigned_object_id__lte: Optional[str] = None,
        assigned_object_id__lt: Optional[str] = None,
        assigned_object_id__gte: Optional[str] = None,
        assigned_object_id__gt: Optional[str] = None,
        kind__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        assigned_object_type__n: Optional[str] = None,
        created_by_id__n: Optional[str] = None,
        created_by__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.JournalEntry: ...
    def update(
        self, objects: Iterable[definitions.JournalEntry]
    ) -> [definitions.JournalEntry]: ...
    def delete(self, objects: Iterable[definitions.JournalEntry]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        assigned_object_type_id: Optional[str] = None,
        assigned_object_id: Optional[str] = None,
        created: Optional[str] = None,
        kind: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        tag: Optional[str] = None,
        assigned_object_type: Optional[str] = None,
        created_by_id: Optional[str] = None,
        created_by: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        assigned_object_type_id__n: Optional[str] = None,
        assigned_object_id__n: Optional[str] = None,
        assigned_object_id__lte: Optional[str] = None,
        assigned_object_id__lt: Optional[str] = None,
        assigned_object_id__gte: Optional[str] = None,
        assigned_object_id__gt: Optional[str] = None,
        kind__n: Optional[str] = None,
        tag__n: Optional[str] = None,
        assigned_object_type__n: Optional[str] = None,
        created_by_id__n: Optional[str] = None,
        created_by__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class Object_changesEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.ObjectChange]: ...
    def get(
        self,
        id: Optional[str] = None,
        user: Optional[str] = None,
        user_name: Optional[str] = None,
        request_id: Optional[str] = None,
        action: Optional[str] = None,
        changed_object_type_id: Optional[str] = None,
        changed_object_id: Optional[str] = None,
        object_repr: Optional[str] = None,
        q: Optional[str] = None,
        time: Optional[str] = None,
        changed_object_type: Optional[str] = None,
        user_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        user__n: Optional[str] = None,
        user_name__n: Optional[str] = None,
        user_name__ic: Optional[str] = None,
        user_name__nic: Optional[str] = None,
        user_name__iew: Optional[str] = None,
        user_name__niew: Optional[str] = None,
        user_name__isw: Optional[str] = None,
        user_name__nisw: Optional[str] = None,
        user_name__ie: Optional[str] = None,
        user_name__nie: Optional[str] = None,
        action__n: Optional[str] = None,
        changed_object_type_id__n: Optional[str] = None,
        changed_object_id__n: Optional[str] = None,
        changed_object_id__lte: Optional[str] = None,
        changed_object_id__lt: Optional[str] = None,
        changed_object_id__gte: Optional[str] = None,
        changed_object_id__gt: Optional[str] = None,
        object_repr__n: Optional[str] = None,
        object_repr__ic: Optional[str] = None,
        object_repr__nic: Optional[str] = None,
        object_repr__iew: Optional[str] = None,
        object_repr__niew: Optional[str] = None,
        object_repr__isw: Optional[str] = None,
        object_repr__nisw: Optional[str] = None,
        object_repr__ie: Optional[str] = None,
        object_repr__nie: Optional[str] = None,
        changed_object_type__n: Optional[str] = None,
        user_id__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.ObjectChange]: ...
    def filter(
        self,
        id: Optional[str] = None,
        user: Optional[str] = None,
        user_name: Optional[str] = None,
        request_id: Optional[str] = None,
        action: Optional[str] = None,
        changed_object_type_id: Optional[str] = None,
        changed_object_id: Optional[str] = None,
        object_repr: Optional[str] = None,
        q: Optional[str] = None,
        time: Optional[str] = None,
        changed_object_type: Optional[str] = None,
        user_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        user__n: Optional[str] = None,
        user_name__n: Optional[str] = None,
        user_name__ic: Optional[str] = None,
        user_name__nic: Optional[str] = None,
        user_name__iew: Optional[str] = None,
        user_name__niew: Optional[str] = None,
        user_name__isw: Optional[str] = None,
        user_name__nisw: Optional[str] = None,
        user_name__ie: Optional[str] = None,
        user_name__nie: Optional[str] = None,
        action__n: Optional[str] = None,
        changed_object_type_id__n: Optional[str] = None,
        changed_object_id__n: Optional[str] = None,
        changed_object_id__lte: Optional[str] = None,
        changed_object_id__lt: Optional[str] = None,
        changed_object_id__gte: Optional[str] = None,
        changed_object_id__gt: Optional[str] = None,
        object_repr__n: Optional[str] = None,
        object_repr__ic: Optional[str] = None,
        object_repr__nic: Optional[str] = None,
        object_repr__iew: Optional[str] = None,
        object_repr__niew: Optional[str] = None,
        object_repr__isw: Optional[str] = None,
        object_repr__nisw: Optional[str] = None,
        object_repr__ie: Optional[str] = None,
        object_repr__nie: Optional[str] = None,
        changed_object_type__n: Optional[str] = None,
        user_id__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.ObjectChange]: ...
    def create(
        self,
        id: Optional[str] = None,
        user: Optional[str] = None,
        user_name: Optional[str] = None,
        request_id: Optional[str] = None,
        action: Optional[str] = None,
        changed_object_type_id: Optional[str] = None,
        changed_object_id: Optional[str] = None,
        object_repr: Optional[str] = None,
        q: Optional[str] = None,
        time: Optional[str] = None,
        changed_object_type: Optional[str] = None,
        user_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        user__n: Optional[str] = None,
        user_name__n: Optional[str] = None,
        user_name__ic: Optional[str] = None,
        user_name__nic: Optional[str] = None,
        user_name__iew: Optional[str] = None,
        user_name__niew: Optional[str] = None,
        user_name__isw: Optional[str] = None,
        user_name__nisw: Optional[str] = None,
        user_name__ie: Optional[str] = None,
        user_name__nie: Optional[str] = None,
        action__n: Optional[str] = None,
        changed_object_type_id__n: Optional[str] = None,
        changed_object_id__n: Optional[str] = None,
        changed_object_id__lte: Optional[str] = None,
        changed_object_id__lt: Optional[str] = None,
        changed_object_id__gte: Optional[str] = None,
        changed_object_id__gt: Optional[str] = None,
        object_repr__n: Optional[str] = None,
        object_repr__ic: Optional[str] = None,
        object_repr__nic: Optional[str] = None,
        object_repr__iew: Optional[str] = None,
        object_repr__niew: Optional[str] = None,
        object_repr__isw: Optional[str] = None,
        object_repr__nisw: Optional[str] = None,
        object_repr__ie: Optional[str] = None,
        object_repr__nie: Optional[str] = None,
        changed_object_type__n: Optional[str] = None,
        user_id__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.ObjectChange: ...
    def update(
        self, objects: Iterable[definitions.ObjectChange]
    ) -> [definitions.ObjectChange]: ...
    def delete(self, objects: Iterable[definitions.ObjectChange]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        user: Optional[str] = None,
        user_name: Optional[str] = None,
        request_id: Optional[str] = None,
        action: Optional[str] = None,
        changed_object_type_id: Optional[str] = None,
        changed_object_id: Optional[str] = None,
        object_repr: Optional[str] = None,
        q: Optional[str] = None,
        time: Optional[str] = None,
        changed_object_type: Optional[str] = None,
        user_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        user__n: Optional[str] = None,
        user_name__n: Optional[str] = None,
        user_name__ic: Optional[str] = None,
        user_name__nic: Optional[str] = None,
        user_name__iew: Optional[str] = None,
        user_name__niew: Optional[str] = None,
        user_name__isw: Optional[str] = None,
        user_name__nisw: Optional[str] = None,
        user_name__ie: Optional[str] = None,
        user_name__nie: Optional[str] = None,
        action__n: Optional[str] = None,
        changed_object_type_id__n: Optional[str] = None,
        changed_object_id__n: Optional[str] = None,
        changed_object_id__lte: Optional[str] = None,
        changed_object_id__lt: Optional[str] = None,
        changed_object_id__gte: Optional[str] = None,
        changed_object_id__gt: Optional[str] = None,
        object_repr__n: Optional[str] = None,
        object_repr__ic: Optional[str] = None,
        object_repr__nic: Optional[str] = None,
        object_repr__iew: Optional[str] = None,
        object_repr__niew: Optional[str] = None,
        object_repr__isw: Optional[str] = None,
        object_repr__nisw: Optional[str] = None,
        object_repr__ie: Optional[str] = None,
        object_repr__nie: Optional[str] = None,
        changed_object_type__n: Optional[str] = None,
        user_id__n: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class ReportsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Record]: ...
    def get(
        self,
    ) -> Optional[Record]: ...
    def filter(
        self,
    ) -> RecordSet[Record]: ...
    def create(
        self,
    ) -> Record: ...
    def update(self, objects: Iterable[Record]) -> [Record]: ...
    def delete(self, objects: Iterable[Record]): ...
    def choices(self) -> dict: ...
    def count(
        self,
    ) -> int: ...

class ScriptsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[Record]: ...
    def get(
        self,
    ) -> Optional[Record]: ...
    def filter(
        self,
    ) -> RecordSet[Record]: ...
    def create(
        self,
    ) -> Record: ...
    def update(self, objects: Iterable[Record]) -> [Record]: ...
    def delete(self, objects: Iterable[Record]): ...
    def choices(self) -> dict: ...
    def count(
        self,
    ) -> int: ...

class TagsEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Tag]: ...
    def get(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        content_type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Tag]: ...
    def filter(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        content_type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Tag]: ...
    def create(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        content_type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.Tag: ...
    def update(self, objects: Iterable[definitions.Tag]) -> [definitions.Tag]: ...
    def delete(self, objects: Iterable[definitions.Tag]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        slug: Optional[str] = None,
        color: Optional[str] = None,
        description: Optional[str] = None,
        created: Optional[str] = None,
        created__gte: Optional[str] = None,
        created__lte: Optional[str] = None,
        last_updated: Optional[str] = None,
        last_updated__gte: Optional[str] = None,
        last_updated__lte: Optional[str] = None,
        q: Optional[str] = None,
        content_type: Optional[str] = None,
        content_type_id: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        slug__n: Optional[str] = None,
        slug__ic: Optional[str] = None,
        slug__nic: Optional[str] = None,
        slug__iew: Optional[str] = None,
        slug__niew: Optional[str] = None,
        slug__isw: Optional[str] = None,
        slug__nisw: Optional[str] = None,
        slug__ie: Optional[str] = None,
        slug__nie: Optional[str] = None,
        color__n: Optional[str] = None,
        color__ic: Optional[str] = None,
        color__nic: Optional[str] = None,
        color__iew: Optional[str] = None,
        color__niew: Optional[str] = None,
        color__isw: Optional[str] = None,
        color__nisw: Optional[str] = None,
        color__ie: Optional[str] = None,
        color__nie: Optional[str] = None,
        description__n: Optional[str] = None,
        description__ic: Optional[str] = None,
        description__nic: Optional[str] = None,
        description__iew: Optional[str] = None,
        description__niew: Optional[str] = None,
        description__isw: Optional[str] = None,
        description__nisw: Optional[str] = None,
        description__ie: Optional[str] = None,
        description__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class WebhooksEndpoint(Endpoint):
    def all(self, limit=0, offset=None) -> RecordSet[definitions.Webhook]: ...
    def get(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        type_create: Optional[str] = None,
        type_update: Optional[str] = None,
        type_delete: Optional[str] = None,
        payload_url: Optional[str] = None,
        enabled: Optional[str] = None,
        http_method: Optional[str] = None,
        http_content_type: Optional[str] = None,
        secret: Optional[str] = None,
        ssl_verification: Optional[str] = None,
        ca_file_path: Optional[str] = None,
        q: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        payload_url__n: Optional[str] = None,
        payload_url__ic: Optional[str] = None,
        payload_url__nic: Optional[str] = None,
        payload_url__iew: Optional[str] = None,
        payload_url__niew: Optional[str] = None,
        payload_url__isw: Optional[str] = None,
        payload_url__nisw: Optional[str] = None,
        payload_url__ie: Optional[str] = None,
        payload_url__nie: Optional[str] = None,
        http_method__n: Optional[str] = None,
        http_content_type__n: Optional[str] = None,
        http_content_type__ic: Optional[str] = None,
        http_content_type__nic: Optional[str] = None,
        http_content_type__iew: Optional[str] = None,
        http_content_type__niew: Optional[str] = None,
        http_content_type__isw: Optional[str] = None,
        http_content_type__nisw: Optional[str] = None,
        http_content_type__ie: Optional[str] = None,
        http_content_type__nie: Optional[str] = None,
        secret__n: Optional[str] = None,
        secret__ic: Optional[str] = None,
        secret__nic: Optional[str] = None,
        secret__iew: Optional[str] = None,
        secret__niew: Optional[str] = None,
        secret__isw: Optional[str] = None,
        secret__nisw: Optional[str] = None,
        secret__ie: Optional[str] = None,
        secret__nie: Optional[str] = None,
        ca_file_path__n: Optional[str] = None,
        ca_file_path__ic: Optional[str] = None,
        ca_file_path__nic: Optional[str] = None,
        ca_file_path__iew: Optional[str] = None,
        ca_file_path__niew: Optional[str] = None,
        ca_file_path__isw: Optional[str] = None,
        ca_file_path__nisw: Optional[str] = None,
        ca_file_path__ie: Optional[str] = None,
        ca_file_path__nie: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> Optional[definitions.Webhook]: ...
    def filter(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        type_create: Optional[str] = None,
        type_update: Optional[str] = None,
        type_delete: Optional[str] = None,
        payload_url: Optional[str] = None,
        enabled: Optional[str] = None,
        http_method: Optional[str] = None,
        http_content_type: Optional[str] = None,
        secret: Optional[str] = None,
        ssl_verification: Optional[str] = None,
        ca_file_path: Optional[str] = None,
        q: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        payload_url__n: Optional[str] = None,
        payload_url__ic: Optional[str] = None,
        payload_url__nic: Optional[str] = None,
        payload_url__iew: Optional[str] = None,
        payload_url__niew: Optional[str] = None,
        payload_url__isw: Optional[str] = None,
        payload_url__nisw: Optional[str] = None,
        payload_url__ie: Optional[str] = None,
        payload_url__nie: Optional[str] = None,
        http_method__n: Optional[str] = None,
        http_content_type__n: Optional[str] = None,
        http_content_type__ic: Optional[str] = None,
        http_content_type__nic: Optional[str] = None,
        http_content_type__iew: Optional[str] = None,
        http_content_type__niew: Optional[str] = None,
        http_content_type__isw: Optional[str] = None,
        http_content_type__nisw: Optional[str] = None,
        http_content_type__ie: Optional[str] = None,
        http_content_type__nie: Optional[str] = None,
        secret__n: Optional[str] = None,
        secret__ic: Optional[str] = None,
        secret__nic: Optional[str] = None,
        secret__iew: Optional[str] = None,
        secret__niew: Optional[str] = None,
        secret__isw: Optional[str] = None,
        secret__nisw: Optional[str] = None,
        secret__ie: Optional[str] = None,
        secret__nie: Optional[str] = None,
        ca_file_path__n: Optional[str] = None,
        ca_file_path__ic: Optional[str] = None,
        ca_file_path__nic: Optional[str] = None,
        ca_file_path__iew: Optional[str] = None,
        ca_file_path__niew: Optional[str] = None,
        ca_file_path__isw: Optional[str] = None,
        ca_file_path__nisw: Optional[str] = None,
        ca_file_path__ie: Optional[str] = None,
        ca_file_path__nie: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> RecordSet[definitions.Webhook]: ...
    def create(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        type_create: Optional[str] = None,
        type_update: Optional[str] = None,
        type_delete: Optional[str] = None,
        payload_url: Optional[str] = None,
        enabled: Optional[str] = None,
        http_method: Optional[str] = None,
        http_content_type: Optional[str] = None,
        secret: Optional[str] = None,
        ssl_verification: Optional[str] = None,
        ca_file_path: Optional[str] = None,
        q: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        payload_url__n: Optional[str] = None,
        payload_url__ic: Optional[str] = None,
        payload_url__nic: Optional[str] = None,
        payload_url__iew: Optional[str] = None,
        payload_url__niew: Optional[str] = None,
        payload_url__isw: Optional[str] = None,
        payload_url__nisw: Optional[str] = None,
        payload_url__ie: Optional[str] = None,
        payload_url__nie: Optional[str] = None,
        http_method__n: Optional[str] = None,
        http_content_type__n: Optional[str] = None,
        http_content_type__ic: Optional[str] = None,
        http_content_type__nic: Optional[str] = None,
        http_content_type__iew: Optional[str] = None,
        http_content_type__niew: Optional[str] = None,
        http_content_type__isw: Optional[str] = None,
        http_content_type__nisw: Optional[str] = None,
        http_content_type__ie: Optional[str] = None,
        http_content_type__nie: Optional[str] = None,
        secret__n: Optional[str] = None,
        secret__ic: Optional[str] = None,
        secret__nic: Optional[str] = None,
        secret__iew: Optional[str] = None,
        secret__niew: Optional[str] = None,
        secret__isw: Optional[str] = None,
        secret__nisw: Optional[str] = None,
        secret__ie: Optional[str] = None,
        secret__nie: Optional[str] = None,
        ca_file_path__n: Optional[str] = None,
        ca_file_path__ic: Optional[str] = None,
        ca_file_path__nic: Optional[str] = None,
        ca_file_path__iew: Optional[str] = None,
        ca_file_path__niew: Optional[str] = None,
        ca_file_path__isw: Optional[str] = None,
        ca_file_path__nisw: Optional[str] = None,
        ca_file_path__ie: Optional[str] = None,
        ca_file_path__nie: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> definitions.Webhook: ...
    def update(
        self, objects: Iterable[definitions.Webhook]
    ) -> [definitions.Webhook]: ...
    def delete(self, objects: Iterable[definitions.Webhook]): ...
    def choices(self) -> dict: ...
    def count(
        self,
        id: Optional[str] = None,
        name: Optional[str] = None,
        type_create: Optional[str] = None,
        type_update: Optional[str] = None,
        type_delete: Optional[str] = None,
        payload_url: Optional[str] = None,
        enabled: Optional[str] = None,
        http_method: Optional[str] = None,
        http_content_type: Optional[str] = None,
        secret: Optional[str] = None,
        ssl_verification: Optional[str] = None,
        ca_file_path: Optional[str] = None,
        q: Optional[str] = None,
        content_type_id: Optional[str] = None,
        content_types: Optional[str] = None,
        id__n: Optional[str] = None,
        id__lte: Optional[str] = None,
        id__lt: Optional[str] = None,
        id__gte: Optional[str] = None,
        id__gt: Optional[str] = None,
        name__n: Optional[str] = None,
        name__ic: Optional[str] = None,
        name__nic: Optional[str] = None,
        name__iew: Optional[str] = None,
        name__niew: Optional[str] = None,
        name__isw: Optional[str] = None,
        name__nisw: Optional[str] = None,
        name__ie: Optional[str] = None,
        name__nie: Optional[str] = None,
        payload_url__n: Optional[str] = None,
        payload_url__ic: Optional[str] = None,
        payload_url__nic: Optional[str] = None,
        payload_url__iew: Optional[str] = None,
        payload_url__niew: Optional[str] = None,
        payload_url__isw: Optional[str] = None,
        payload_url__nisw: Optional[str] = None,
        payload_url__ie: Optional[str] = None,
        payload_url__nie: Optional[str] = None,
        http_method__n: Optional[str] = None,
        http_content_type__n: Optional[str] = None,
        http_content_type__ic: Optional[str] = None,
        http_content_type__nic: Optional[str] = None,
        http_content_type__iew: Optional[str] = None,
        http_content_type__niew: Optional[str] = None,
        http_content_type__isw: Optional[str] = None,
        http_content_type__nisw: Optional[str] = None,
        http_content_type__ie: Optional[str] = None,
        http_content_type__nie: Optional[str] = None,
        secret__n: Optional[str] = None,
        secret__ic: Optional[str] = None,
        secret__nic: Optional[str] = None,
        secret__iew: Optional[str] = None,
        secret__niew: Optional[str] = None,
        secret__isw: Optional[str] = None,
        secret__nisw: Optional[str] = None,
        secret__ie: Optional[str] = None,
        secret__nie: Optional[str] = None,
        ca_file_path__n: Optional[str] = None,
        ca_file_path__ic: Optional[str] = None,
        ca_file_path__nic: Optional[str] = None,
        ca_file_path__iew: Optional[str] = None,
        ca_file_path__niew: Optional[str] = None,
        ca_file_path__isw: Optional[str] = None,
        ca_file_path__nisw: Optional[str] = None,
        ca_file_path__ie: Optional[str] = None,
        ca_file_path__nie: Optional[str] = None,
        content_type_id__n: Optional[str] = None,
        content_type_id__lte: Optional[str] = None,
        content_type_id__lt: Optional[str] = None,
        content_type_id__gte: Optional[str] = None,
        content_type_id__gt: Optional[str] = None,
        content_types__n: Optional[str] = None,
        content_types__ic: Optional[str] = None,
        content_types__nic: Optional[str] = None,
        content_types__iew: Optional[str] = None,
        content_types__niew: Optional[str] = None,
        content_types__isw: Optional[str] = None,
        content_types__nisw: Optional[str] = None,
        content_types__ie: Optional[str] = None,
        content_types__nie: Optional[str] = None,
        limit: Optional[int] = None,
        offset: Optional[int] = None,
    ) -> int: ...

class ExtrasApp(App):
    def __init__(self, api: "Api", name):
        self.config_contexts: Config_contextsEndpoint = ...
        self.content_types: Content_typesEndpoint = ...
        self.custom_fields: Custom_fieldsEndpoint = ...
        self.custom_links: Custom_linksEndpoint = ...
        self.export_templates: Export_templatesEndpoint = ...
        self.image_attachments: Image_attachmentsEndpoint = ...
        self.job_results: Job_resultsEndpoint = ...
        self.journal_entries: Journal_entriesEndpoint = ...
        self.object_changes: Object_changesEndpoint = ...
        self.reports: ReportsEndpoint = ...
        self.scripts: ScriptsEndpoint = ...
        self.tags: TagsEndpoint = ...
        self.webhooks: WebhooksEndpoint = ...
